'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = HeatmapRect;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _group = require('@vx/group');

var _additionalProps = require('../util/additionalProps');

var _additionalProps2 = _interopRequireDefault(_additionalProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function HeatmapRect(_ref) {
  var className = _ref.className,
      data = _ref.data,
      binWidth = _ref.binWidth,
      binHeight = _ref.binHeight,
      _ref$x = _ref.x,
      x = _ref$x === undefined ? 0 : _ref$x,
      _ref$gap = _ref.gap,
      gap = _ref$gap === undefined ? 1 : _ref$gap,
      _ref$step = _ref.step,
      step = _ref$step === undefined ? 0 : _ref$step,
      xScale = _ref.xScale,
      yScale = _ref.yScale,
      colorScale = _ref.colorScale,
      _ref$opacityScale = _ref.opacityScale,
      opacityScale = _ref$opacityScale === undefined ? function (d) {
    return 1;
  } : _ref$opacityScale,
      _ref$bin = _ref.bin,
      bin = _ref$bin === undefined ? function (d) {
    return d.bin;
  } : _ref$bin,
      _ref$bins = _ref.bins,
      bins = _ref$bins === undefined ? function (d) {
    return d.bins;
  } : _ref$bins,
      _ref$count = _ref.count,
      count = _ref$count === undefined ? function (d) {
    return d.count;
  } : _ref$count,
      restProps = _objectWithoutProperties(_ref, ['className', 'data', 'binWidth', 'binHeight', 'x', 'gap', 'step', 'xScale', 'yScale', 'colorScale', 'opacityScale', 'bin', 'bins', 'count']);

  var width = binWidth - gap;
  var height = binHeight - gap;
  return _react2.default.createElement(
    _group.Group,
    null,
    data.map(function (d, i) {
      return _react2.default.createElement(
        _group.Group,
        {
          key: 'heatmap-' + i,
          className: 'vx-heatmap-column',
          left: xScale(bin(d))
        },
        bins(d).map(function (b, j) {
          return _react2.default.createElement('rect', _extends({
            key: 'heatmap-tile-rect-' + j,
            className: (0, _classnames2.default)('vx-heatmap-rect', className),
            fill: colorScale(count(b)),
            width: width,
            height: height,
            x: x,
            y: yScale(bin(b) + step) + gap,
            fillOpacity: opacityScale(count(b))
          }, (0, _additionalProps2.default)(restProps, {
            bin: b,
            index: j,
            datum: d,
            datumIndex: i,
            data: data
          })));
        })
      );
    })
  );
}