'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _utils = require('./utils');

var _selectors = require('./selectors');

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var transformState = function transformState(state, name, pending, failure, done, complete) {
  var _extends6;

  return _extends({}, state, (_extends6 = {}, _defineProperty(_extends6, _selectors.PENDING, _extends({}, state[_selectors.PENDING], _defineProperty({}, name, pending))), _defineProperty(_extends6, _selectors.FAILURE, _extends({}, state[_selectors.FAILURE], _defineProperty({}, name, failure))), _defineProperty(_extends6, _selectors.DONE, _extends({}, state[_selectors.DONE], _defineProperty({}, name, done))), _defineProperty(_extends6, _selectors.COMPLETE, _extends({}, state[_selectors.COMPLETE], _defineProperty({}, name, complete))), _extends6));
};

exports.default = function () {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _selectors.initialState;
  var action = arguments[1];

  if (!(0, _utils.isThunkAction)(action)) return state;
  var name = (0, _utils.getThunkName)(action);

  if ((0, _utils.isThunkRequestAction)(action)) {
    return transformState(state, name, true, false, false, false);
  } else if (action.error) {
    return transformState(state, name, false, true, false, true);
  }
  return transformState(state, name, false, false, true, true);
};