{"version":3,"sources":["../src/headers/columnHeaderCell.tsx"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;AAEH,uCAAyC;AACzC,6BAA+B;AAE/B,0CAQ2B;AAE3B,2CAA6C;AAC7C,yCAA2C;AAC3C,6DAA4D;AAC5D,2CAA4D;AAyD5D;IACI,MAAM,CAAC,6BAAK,SAAS,EAAE,OAAO,CAAC,6BAA6B,GAAI,CAAC;AACrE,CAAC;AAFD,sDAEC;AAED;IAAsC,4CAAiE;IAAvG;QAAA,qEAiKC;QA5IU,WAAK,GAAG;YACX,QAAQ,EAAE,KAAK;SAClB,CAAC;QAmIM,0BAAoB,GAAG;YAC3B,KAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACtC,CAAC,CAAA;QAEO,4BAAsB,GAAG;YAC7B,KAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QACvC,CAAC,CAAA;;IACL,CAAC;IA1JG;;;;;;OAMG;IACW,oCAAmB,GAAjC,UAAkC,MAAmB;QACjD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC;eAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC;eACpD,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,qBAAqB,CAAC;eACxD,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;IACnE,CAAC;IAMM,iCAAM,GAAb;QACI,IAAM,eAaQ;QAZV,8BAA8B;QAC9B,4CAAmB,EACnB,sCAAgB,EAChB,8BAAY;QAEZ,wBAAwB;QACxB,cAAI,EACJ,0BAAU,EACV,wCAAiB;QAEjB,oBAAoB;QACpB,4IACU,CAAC;QAEf,IAAM,OAAO,GAAG,UAAU,CAAC,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC,wBAAwB;YAClF,GAAC,OAAO,CAAC,yBAAyB,IAAG,iBAAiB;YACtD,GAAC,OAAO,CAAC,wBAAwB,IAAG,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,IAAI;gBACtE,CAAC;QAEH,MAAM,CAAC,CACH,oBAAC,uBAAU,qBACP,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAC7C,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,IACnC,eAAe,IACnB,SAAS,EAAE,OAAO;YAEjB,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAChD,CAChB,CAAC;;IACN,CAAC;IAES,wCAAa,GAAvB,UAAwB,SAAiC;QACrD,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACzB,qFAAqF;YACrF,uFAAuF;YACvF,iBAAiB;YACjB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,kCAAkC,CAAC,CAAC;QAC5D,CAAC;IACL,CAAC;IAEO,qCAAU,GAAlB;QACU,IAAA,eAAmF,EAAjF,gBAAK,EAAE,oBAAO,EAAE,cAAI,EAAE,0BAAU,EAAE,gCAAa,EAAE,wCAAiB,CAAgB;QAE1F,IAAM,YAAY,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACpD,IAAM,WAAW,GAAG,6BAAK,SAAS,EAAE,OAAO,CAAC,oBAAoB,IAAG,IAAI,CAAO,CAAC;QAE/E,IAAM,aAAa,GAAG,CAClB,oBAAC,iCAAe,IAAC,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,IAAI,IAClD,UAAU,IAAI,IAAI,GAAG,WAAW,GAAG,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAC7C,CACrB,CAAC;QAEF,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,CACH,6BAAK,SAAS,EAAE,OAAO,CAAC,iBAAiB,EAAE,KAAK,EAAE,IAAI;gBAClD,6BAAK,SAAS,EAAE,OAAO,CAAC,qBAAqB;oBACxC,aAAa;oBACb,YAAY,CACX;gBACN,oBAAC,qBAAqB,OAAG;gBACzB,6BAAK,SAAS,EAAE,OAAO,CAAC,sBAAsB,IAAG,aAAa,CAAO,CACnE,CACT,CAAC;QACN,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,CACH,6BAAK,SAAS,EAAE,OAAO,CAAC,iBAAiB,EAAE,KAAK,EAAE,IAAI;gBACjD,aAAa;gBACb,YAAY;gBACb,6BAAK,SAAS,EAAE,OAAO,CAAC,sBAAsB,IAAG,aAAa,CAAO,CACnE,CACT,CAAC;QACN,CAAC;IACL,CAAC;IAEO,6CAAkB,GAA1B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAED,MAAM,CAAC,CACH,6BAAK,SAAS,EAAE,OAAO,CAAC,oBAAoB,IACvC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAClB,CACT,CAAC;IACN,CAAC;IAEO,kDAAuB,GAA/B;QACU,IAAA,eAAsD,EAApD,gBAAK,EAAE,cAAI,EAAE,8BAAY,EAAE,0BAAU,CAAgB;QAE7D,EAAE,CAAC,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAED,IAAM,WAAW,GAAG,CAAC;gBACjB,UAAU,EAAE,UAAU;gBACtB,GAAG,EAAE,IAAI;gBACT,EAAE,EAAE,QAAQ;aACf,CAAC,CAAC;QACH,IAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,uBAAuB;YACtD,GAAC,OAAO,CAAC,kBAAkB,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;gBACnD,CAAC;QAEH,oCAAoC;QACpC,IAAM,OAAO,GAAG,YAAS,CAAC,UAAU,CAAC,UAAU,CAAC;cAC1C,UAAU,CAAC,KAAK,CAAC;cACjB,IAAI,CAAC;QAEX,MAAM,CAAC,CACH,6BAAK,SAAS,EAAE,OAAO;YACnB,6BAAK,SAAS,EAAE,OAAO,CAAC,kCAAkC,GAAI;YAC9D,oBAAC,cAAO,IACJ,aAAa,EAAE,EAAE,WAAW,aAAA,EAAE,EAC9B,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,eAAQ,CAAC,MAAM,EACzB,SAAS,EAAE,OAAO,CAAC,aAAa,EAChC,cAAc,EAAE,IAAI,CAAC,oBAAoB,EACzC,gBAAgB,EAAE,IAAI,CAAC,sBAAsB,EAC7C,wBAAwB,EAAE,IAAI;gBAE9B,oBAAC,WAAI,IAAC,QAAQ,EAAE,YAAY,GAAI,CAC1B,CACR,CACT,CAAC;;IACN,CAAC;IASL,uBAAC;AAAD,CAjKA,AAiKC,CAjKqC,wBAAiB;AACrC,6BAAY,GAA2B;IACjD,QAAQ,EAAE,KAAK;IACf,YAAY,EAAE,cAAc;IAC5B,iBAAiB,EAAE,KAAK;CAC3B,CAAC;AALO,4CAAgB","file":"columnHeaderCell.js","sourcesContent":["/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport {\n    AbstractComponent,\n    Icon,\n    IconName,\n    IProps,\n    Popover,\n    Position,\n    Utils as CoreUtils,\n} from \"@blueprintjs/core\";\n\nimport * as Classes from \"../common/classes\";\nimport * as Errors from \"../common/errors\";\nimport { LoadableContent } from \"../common/loadableContent\";\nimport { HeaderCell, IHeaderCellProps } from \"./headerCell\";\n\nexport interface IColumnNameProps {\n    /**\n     * The name displayed in the header of the column.\n     */\n    name?: string;\n\n    /**\n     * A callback to override the default name rendering behavior. The default\n     * behavior is to simply use the `ColumnHeaderCell`s name prop.\n     *\n     * This render callback can be used, for example, to provide a\n     * `EditableName` component for editing column names.\n     *\n     * If you define this callback, we recommend you also set\n     * `useInteractionBar` to `true`, to avoid issues with menus or selection.\n     *\n     * The callback will also receive the column index if an `index` was originally\n     * provided via props.\n     */\n    renderName?: (name: string, index?: number) => React.ReactElement<IProps>;\n\n    /**\n     * If `true`, adds an interaction bar on top of the column header cell and\n     * moves the menu and selection interactions to it.\n     *\n     * This allows you to override the rendering of column name without worry\n     * of clobbering the menu or other interactions.\n     *\n     * @default false\n     */\n    useInteractionBar?: boolean;\n}\n\nexport interface IColumnHeaderCellProps extends IHeaderCellProps, IColumnNameProps {\n    /**\n     * Specifies if the column is reorderable.\n     */\n    isColumnReorderable?: boolean;\n\n    /**\n     * Specifies if the full column is part of a selection.\n     */\n    isColumnSelected?: boolean;\n\n    /**\n     * The icon name for the header's menu button.\n     * @default \"chevron-down\"\n     */\n    menuIconName?: IconName;\n}\n\nexport interface IColumnHeaderCellState {\n    isActive?: boolean;\n}\n\nexport function HorizontalCellDivider(): JSX.Element {\n    return <div className={Classes.TABLE_HORIZONTAL_CELL_DIVIDER} />;\n}\n\nexport class ColumnHeaderCell extends AbstractComponent<IColumnHeaderCellProps, IColumnHeaderCellState> {\n    public static defaultProps: IColumnHeaderCellProps = {\n        isActive: false,\n        menuIconName: \"chevron-down\",\n        useInteractionBar: false,\n    };\n\n    /**\n     * This method determines if a `MouseEvent` was triggered on a target that\n     * should be used as the header click/drag target. This enables users of\n     * this component to render fully interactive components in their header\n     * cells without worry of selection or resize operations from capturing\n     * their mouse events.\n     */\n    public static isHeaderMouseTarget(target: HTMLElement) {\n        return target.classList.contains(Classes.TABLE_HEADER)\n            || target.classList.contains(Classes.TABLE_COLUMN_NAME)\n            || target.classList.contains(Classes.TABLE_INTERACTION_BAR)\n            || target.classList.contains(Classes.TABLE_HEADER_CONTENT);\n    }\n\n    public state = {\n        isActive: false,\n    };\n\n    public render() {\n        const {\n            // from IColumnHeaderCellProps\n            isColumnReorderable,\n            isColumnSelected,\n            menuIconName,\n\n            // from IColumnNameProps\n            name,\n            renderName,\n            useInteractionBar,\n\n            // from IHeaderProps\n            ...spreadableProps,\n        } = this.props;\n\n        const classes = classNames(spreadableProps.className, Classes.TABLE_COLUMN_HEADER_CELL, {\n            [Classes.TABLE_HAS_INTERACTION_BAR]: useInteractionBar,\n            [Classes.TABLE_HAS_REORDER_HANDLE]: this.props.reorderHandle != null,\n        });\n\n        return (\n            <HeaderCell\n                isReorderable={this.props.isColumnReorderable}\n                isSelected={this.props.isColumnSelected}\n                {...spreadableProps}\n                className={classes}\n            >\n                {this.renderName()}\n                {this.maybeRenderContent()}\n                {this.props.loading ? undefined : this.props.resizeHandle}\n            </HeaderCell>\n        );\n    }\n\n    protected validateProps(nextProps: IColumnHeaderCellProps) {\n        if (nextProps.menu != null) {\n            // throw this warning from the publicly exported, higher-order *HeaderCell components\n            // rather than HeaderCell, so consumers know exactly which components are receiving the\n            // offending prop\n            console.warn(Errors.COLUMN_HEADER_CELL_MENU_DEPRECATED);\n        }\n    }\n\n    private renderName() {\n        const { index, loading, name, renderName, reorderHandle, useInteractionBar } = this.props;\n\n        const dropdownMenu = this.maybeRenderDropdownMenu();\n        const defaultName = <div className={Classes.TABLE_TRUNCATED_TEXT}>{name}</div>;\n\n        const nameComponent = (\n            <LoadableContent loading={loading} variableLength={true}>\n                {renderName == null ? defaultName : renderName(name, index)}\n            </LoadableContent>\n        );\n\n        if (useInteractionBar) {\n            return (\n                <div className={Classes.TABLE_COLUMN_NAME} title={name}>\n                    <div className={Classes.TABLE_INTERACTION_BAR}>\n                        {reorderHandle}\n                        {dropdownMenu}\n                    </div>\n                    <HorizontalCellDivider />\n                    <div className={Classes.TABLE_COLUMN_NAME_TEXT}>{nameComponent}</div>\n                </div>\n            );\n        } else {\n            return (\n                <div className={Classes.TABLE_COLUMN_NAME} title={name}>\n                    {reorderHandle}\n                    {dropdownMenu}\n                    <div className={Classes.TABLE_COLUMN_NAME_TEXT}>{nameComponent}</div>\n                </div>\n            );\n        }\n    }\n\n    private maybeRenderContent() {\n        if (this.props.children === null) {\n            return undefined;\n        }\n\n        return (\n            <div className={Classes.TABLE_HEADER_CONTENT}>\n                {this.props.children}\n            </div>\n        );\n    }\n\n    private maybeRenderDropdownMenu() {\n        const { index, menu, menuIconName, renderMenu } = this.props;\n\n        if (renderMenu == null && menu == null) {\n            return undefined;\n        }\n\n        const constraints = [{\n            attachment: \"together\",\n            pin: true,\n            to: \"window\",\n        }];\n        const classes = classNames(Classes.TABLE_TH_MENU_CONTAINER, {\n            [Classes.TABLE_TH_MENU_OPEN]: this.state.isActive,\n        });\n\n        // prefer renderMenu if it's defined\n        const content = CoreUtils.isFunction(renderMenu)\n            ? renderMenu(index)\n            : menu;\n\n        return (\n            <div className={classes}>\n                <div className={Classes.TABLE_TH_MENU_CONTAINER_BACKGROUND} />\n                <Popover\n                    tetherOptions={{ constraints }}\n                    content={content}\n                    position={Position.BOTTOM}\n                    className={Classes.TABLE_TH_MENU}\n                    popoverDidOpen={this.handlePopoverDidOpen}\n                    popoverWillClose={this.handlePopoverWillClose}\n                    useSmartArrowPositioning={true}\n                >\n                    <Icon iconName={menuIconName} />\n                </Popover>\n            </div>\n        );\n    }\n\n    private handlePopoverDidOpen = () => {\n        this.setState({ isActive: true });\n    }\n\n    private handlePopoverWillClose = () => {\n        this.setState({ isActive: false });\n    }\n}\n"]}