{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 852596fbecfc080f1686","webpack:///./packages/table/dist/index.js","webpack:///external \"window\"","webpack:///./packages/table/dist/cell/cell.js","webpack:///./packages/table/~/tslib/tslib.js","webpack:///external \"classNames\"","webpack:///external \"React\"","webpack:///./packages/table/dist/common/classes.js","webpack:///./packages/table/dist/common/utils.js","webpack:///external \"Blueprint.Core\"","webpack:///./packages/table/dist/common/loadableContent.js","webpack:///./packages/table/~/pure-render-decorator/index.js","webpack:///./packages/table/~/fbjs/lib/warning.js","webpack:///./packages/table/~/fbjs/lib/emptyFunction.js","webpack:///./packages/table/~/fbjs/lib/shallowEqual.js","webpack:///./packages/table/dist/cell/editableCell.js","webpack:///external \"ReactDOM\"","webpack:///./packages/table/dist/interactions/draggable.js","webpack:///./packages/table/dist/interactions/dragEvents.js","webpack:///./packages/table/dist/cell/formats/jsonFormat.js","webpack:///./packages/table/dist/cell/formats/truncatedFormat.js","webpack:///./packages/table/dist/column.js","webpack:///./packages/table/dist/common/index.js","webpack:///./packages/table/dist/common/clipboard.js","webpack:///./packages/table/dist/common/grid.js","webpack:///./packages/table/dist/regions.js","webpack:///./packages/table/dist/common/rect.js","webpack:///./packages/table/dist/common/renderMode.js","webpack:///./packages/table/dist/common/roundSize.js","webpack:///./packages/table/dist/interactions/menus/index.js","webpack:///./packages/table/dist/interactions/menus/copyCellsMenuItem.js","webpack:///./packages/table/dist/interactions/menus/menuContext.js","webpack:///./packages/table/dist/interactions/resizeHandle.js","webpack:///./packages/table/dist/interactions/selectable.js","webpack:///./packages/table/dist/common/internal/focusedCellUtils.js","webpack:///./packages/table/dist/common/errors.js","webpack:///./packages/table/dist/headers/columnHeaderCell.js","webpack:///./packages/table/dist/headers/headerCell.js","webpack:///./packages/table/dist/headers/rowHeaderCell.js","webpack:///./packages/table/dist/headers/editableName.js","webpack:///./packages/table/dist/table.js","webpack:///./packages/table/dist/common/internal/scrollUtils.js","webpack:///./packages/table/dist/headers/columnHeader.js","webpack:///./packages/table/dist/headers/header.js","webpack:///./packages/table/dist/common/batcher.js","webpack:///./packages/table/dist/common/requestIdleCallback.js","webpack:///./packages/table/dist/interactions/reorderable.js","webpack:///./packages/table/dist/interactions/resizable.js","webpack:///./packages/table/dist/headers/rowHeader.js","webpack:///./packages/table/dist/interactions/resizeSensor.js","webpack:///./packages/table/dist/layers/guides.js","webpack:///./packages/table/dist/layers/regions.js","webpack:///./packages/table/dist/locator.js","webpack:///./packages/table/dist/quadrants/tableQuadrant.js","webpack:///./packages/table/dist/quadrants/tableQuadrantStack.js","webpack:///./packages/table/dist/tableBody.js","webpack:///./packages/table/dist/common/contextMenuTargetWrapper.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpDA,gD;;;;;;ACAA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,wCAAwC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAAyE,qBAAqB;AAC9F;AACA;AACA;AACA;AACA,kGAAiG;AACjG;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,+DAA+D;AACjH;AACA;AACA,UAAS;AACT,mDAAkD,yBAAyB;AAC3E,6CAA4C,mDAAmD;AAC/F,qEAAoE,yCAAyC;AAC7G;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;;;;;;;iEC1DA;AACA;AACA,gEAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyD,wDAAwD,EAAE;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,qDAAqD;AACtF;AACA,EAAC;AACD;AACA;AACA,WAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,0BAAyB,uDAAuD;;AAEhF;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;;AAEA;AACA,iDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iEAAgE,cAAc;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAgD,QAAQ;AACxD;AACA;;AAEA;AACA,wCAAuC,oCAAoC;AAC3E;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wCAAuC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACrG,uCAAsC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACxG,oCAAmC,iEAAiE,uBAAuB,EAAE,4BAA4B;AACzJ;AACA,UAAS;AACT;;AAEA;AACA,kBAAiB,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AAC5G,qBAAoB,qDAAqD,oEAAoE,aAAa,EAAE;AAC5J,2BAA0B,sBAAsB,qBAAqB,GAAG;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C,uCAAsC,SAAS;AAC/C,uCAAsC,WAAW,UAAU;AAC3D,8CAA6C,cAAc;AAC3D;AACA,kHAAiH,OAAO,UAAU;AAClI,qFAAoF,iBAAiB,OAAO;AAC5G,6DAA4D,gBAAgB,QAAQ,OAAO;AAC3F,mDAAkD,gBAAgB,gBAAgB,OAAO;AACzF;AACA,sCAAqC;AACrC;AACA;AACA,cAAa,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AACpE,wCAAuC,SAAS;AAChD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,MAAM,gBAAgB;AAC7C;AACA;AACA;AACA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;;AAEA;AACA,iCAAgC,sBAAsB;AACtD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB,sFAAsF,aAAa,EAAE;AAC1H,2BAA0B,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAChJ,gCAA+B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACxF,2BAA0B,oGAAoG;AAC9H,kCAAiC,uBAAuB;AACxD,iCAAgC,wBAAwB;AACxD,gCAA+B,yDAAyD;AACxF;;AAEA;AACA;AACA,sBAAqB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAChJ,8BAA6B,gCAAgC,oBAAoB,gDAAgD,gBAAgB,GAAG;AACpJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,E;;;;;;;ACjND,gD;;;;;;ACAA,gD;;;;;;ACAA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAczHA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,0CAAyC,qBAAqB;AAC9D,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,WAAW;AACtC;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,uBAAuB;AACpwBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE,qCAAqC,EAAE;AACvG;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,iBAAiB;AACrE,qDAAoD,iBAAiB;AACrE;AACA,MAAK;AACL;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C,8CAA6C;AAC7C,kFAAiF,cAAc;AAC/F,mGAAkG,gDAAgD,iBAAiB,EAAE,EAAE;AACvK,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C,8CAA6C;AAC7C;AACA,mGAAkG,mDAAmD,EAAE;AACvJ,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,kCAAiC,4BAA4B,gBAAgB,GAAG;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,4BAA4B,EAAE;AAC7E;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,6BAA6B,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,IAAI;AACT;AACA;AACA,mDAAkD,oCAAoC,EAAE;AACxF,4DAA2D;AAC3D;AACA;AACA;AACA,MAAK,EAAE,EAAE;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/dA,iC;;;;;;ACAA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,wDAAwD;AACvG;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA;;;;;;;AC1CA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,aAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAe;AACf;;AAEA;AACA,+FAA8F,eAAe;AAC7G;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA,0B;;;;;;ACjEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gC;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+B;;;;;;AClEA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,sDAAsD;AAClF;AACA;AACA;AACA,6BAA4B,0CAA0C;AACtE;AACA;AACA;AACA,6BAA4B,oBAAoB;AAChD;AACA;AACA;AACA,6BAA4B,6DAA6D;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAAyE,qBAAqB;AAC9F;AACA;AACA;AACA;AACA;AACA,wBAAuB,uCAAuC;AAC9D;AACA;AACA;AACA;AACA;AACA,qEAAoE,oBAAoB,6CAA6C;AACrI,yDAAwD,6IAA6I;AACrM,2DAA0D,gSAAgS;AAC1V;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;AAEA;;;;;;;ACrFA,iD;;;;;;ACAA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5EA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;;AAEA;;;;;;;AChKA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA0F,eAAe,iDAAiD;AAC1J;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,gCAA+B,uCAAuC,EAAE;AACxE;AACA;;AAEA;;;;;;;ACjDA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA,wBAAuB;AACvB,qDAAoD,+BAA+B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,4BAA4B;AACzF;AACA;AACA;AACA;AACA,kBAAiB;AACjB,iDAAgD,uBAAuB;AACvE,6CAA4C,0EAA0E;AACtH,sDAAqD,oEAAoE,2BAA2B,6FAA6F;AACjP,uDAAsD,mBAAmB;AACzE;AACA;AACA;AACA,gDAA+C,sDAAsD;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,8BAA8B;AACrD;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvHA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3BA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxBA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,qBAAqB;AAC9D;AACA;AACA,0CAAyC,mBAAmB;AAC5D;AACA;AACA;AACA;AACA;AACA,6CAA4C,uBAAuB,EAAE;AACrE;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;;;;;;ACnHA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,4BAA4B;AAC3D,sCAAqC,yCAAyC;AAC9E,qCAAoC,uCAAuyBAAyB;AACnE,qDAAoD,+BAA+B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,yBAAyB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,+BAA+B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,2BAA2B;AACtE,gCAA+B,+BAA+B;AAC9D;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,2BAA2B;AACtE,gCAA+B,kCAAkC;AACjE;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,iBAAiB,mBAAmB;AAC9E;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnWA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA,yBAAwB;AACxB;AACA,yBAAwB;AACxB;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,6BAA6B;AAC1E;AACA;AACA;AACA;AACA,8CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D,2BAA2B,EAAE;AAC5F;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,eAAe;AAChD,sCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA,kCAAiC,eAAe;AAChD,mDAAkD,uBAAuB;AACzE;AACA;AACA;AACA;AACA;AACA,+CAA8C,uBAAuB;AACrE,sCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA,+CAA8C,uBAAuB;AACrE,mDAAkD,uBAAuB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;AAEA;;;;;;;AC7mBA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;;AAEA;;;;;;;ACtGA;AACA;AACA,wDAAuD;AACvD;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,6DAA6D;AAC9D;;AAEA;;;;;;;AC1BA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,oCAAoC;AACnF,iDAAgD,qCAAqC;AACrF;AACA;AACA;AACA,6CAA4C,qEAAqE;AACjH,yCAAwC,+DAA+D;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;AAEA;;;;;;;AClDA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;;AAEA;;;;;;;ACdA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,eAAe,4BAA4B;AAClH;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA;;;;;;;ACvCA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;AAEA;;;;;;;ACjCA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,oBAAoB;AAChD;AACA;AACA;AACA,6BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAmF;AACnF;AACA;AACA;AACA;AACA,6EAA4E;AAC5E;AACA;AACA,6DAA4D,oKAAoK;AAChO,yCAAwC,2BAA2B;AACnE,6CAA4C,2BAA2B;AACvE;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA;;;;;;;ACxFA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAckDAAiD,yBAAyB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA8E,mBAAmB,wBAAwB;AACzH;AACA;AACA,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,0CAA0C,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChNA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,oFAAoF,iCAAiC;AACvJ;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,yBAAyB;AAClE,+BAA8B,eAAe,2CAA2C;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvFA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,mDAAmD;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,iBAAiB;AAC7C;AACA;AACA,6BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAsG;AACtG;AACA;AACA;AACA,gFAA+E,yFAAyF,oBAAoB,qBAAqB;AACjN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,0CAA0C;AAChG,sFAAqF,yCAAyC;AAC9H;AACA,iDAAgD,oDAAoD;AACpG,6CAA4C,2CAA2C;AACvF;AACA;AACA;AACA,6CAA4C,4CAA4C;AACxF;AACA;AACA,iDAAgD,oDAAoD;AACpG;AACA;AACA,6CAA4C,4CAA4C;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,0CAA0C;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,2EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,qBAAqB;AACjE,yCAAwC,wDAAwD;AAChG,kDAAiD,iBAAiB,2BAA2B,kNAAkN;AAC/S,mDAAkD,yBAAyB;AAC3E;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpIA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAAyE,qBAAqB;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D;AAC/D;AACA;AACA;AACA;AACA,6CAA4C,8CAA8C;AAC1F;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA;;;;;;;ACxDA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAA+E,mFAAmF;AAClK,yCAAwC,oCAAoC;AAC5E,yEAAwE,mCAAmC;AAC3G,iDAAgD,uCAAuC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;AAEA;;;;;;;AC/CA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,2NAA2N;AACrR;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA;;;;;;;AC9BA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,wCAAwC,EAAE;AACpF,2CAA0C,wCAAwC,EAAE;AACpF,4CAA2C,0CAA0C,EAAE;AACvF,wCAAuC,qCAAqC,EAAE;AAC9E,8CAA6C,2CAA2C,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAiE;AACjE;AACA;AACA,iDAAgD,8EAA8E;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,+CAA8C,6CAA6C;AAC3F;AACA,oGAAmG;AACnG;AACA;AACA,oGAAmG,cAAc,iDAAiD;AAClK;AACA;AACA;AACA,oDAAmD,+BAA+B;AAClF;AACA;AACA;AACA,4EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA,iDAAgD,sCAAsC;AACtF,mEAAkE,40BAA40B;AAC94B;AACA;AACA;AACA;AACA,iDAAgD,4BAA4B;AAC5E;AACA;AACA;AACA,yEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA,iDAAgD,sCAAsC;AACtF,6DAA4D,yxBAAyxB;AACr1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D,gBAAgB,mBAAmB;AAClG;AACA;AACA,iDAAgD,4BAA4B;AAC5E,oDAAmD,+BAA+B;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D,+yBAA+yB;AAC32B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,yCAAyC;AAC3F,2DAA0D,iDAAiD;AAC3G,oDAAmD,0CAA0C;AAC7F,4DAA2D,kDAAkD;AAC7G,iDAAgD,uCAAuC;AACvF,yDAAwD,+CAA+C;AACvG,mDAAkD,yCAAyC;AAC3F,2DAA0D,iDAAiD;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,2BAA2B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,6BAA4B,6BAA6B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,yBAAyB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,6BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AACliCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,mCAAmC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,qDAAqD;AACjF;AACA;AACA,6BAA4B,iDAAiD;AAC7E;AACA;AACA;AACA,6BAA4B,yDAAyD;AACrF;AACA;AACA,6BAA4B,mDAAmD;AAC/E;AACA;AACA;AACA,6CAA4C,wBAAwB;AACpE,6BAA4B,iCAAiC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,iCAAiC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,iCAAiC;AAC7D;AACA;AACA,6BAA4B,qCAAqC;AACjE;AACA,4CAA2C,gCAAgC;AAC3E,iDAAgD,qCAAqC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,2BAA2B,EAAE;AAChG;AACA,uEAAsE,yBAAyB,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE,6CAA6C;AAC/G;AACA;AACA;AACA;AACA;AACA,2EAA0E,yDAAyD,EAAE;AACrI;AACA;AACA;AACA;AACA,wBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,mEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,6CAA4C,iFAAiF;AAC7H,2EAA0E,o5BAAo5B;AAC99B,yCAAwC,2FAA2F;AACnI,uDAAsD,6GAA6G;AACnK;AACA;AACA;AACA;AACA,8FAA6F,8BAA8B,EAAE;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA0E,6CAA6C,EAAE;AACzH,iEAAgE,qHAAqH;AACrL,UAAS;AACT;AACA;AACA;AACA;AACA,yDAAwD,qHAAqH;AAC7K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,sHAAsH;AAC1K,qDAAoD,0HAA0H;AAC9K,qDAAoD,8GAA8G;AAClK,qDAAoD,sHAAsH;AAC1K,qDAAoD,4HAA4H;AAChL,qDAAoD,6IAA6I;AACjM,qDAAoD,iIAAiI;AACrL,qDAAoD,iJAAiJ;AACrM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,uHAAuH;AAC/K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA,gCAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClgCA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA,oCAAmC,mBAAmB;AACtD,uCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1DA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAiG;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,SAAS,oBAAoB,EAAE;AAC/E,6CAA4C,mCAAmC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA8E,4HAA4H;AAC1M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,y7BAAy7B;AAChgC;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/GA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,uBAAuB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA,yDAAwD,4BAA4B,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,8DAA6D,mDAAmD;AAChH,4DAA2D,iDAAiD;AAC5G,sEAAqE,mDAAmD;AACxH,mFAAkF,whBAAwhB;AAC1mB,6DAA4D,mWAAmW;AAC/Z;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,2BAA2B;AACvD;AACA;AACA,0CAAyC;AACzC,6BAA4B,0BAA0B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,0BAA0B;AACrD;AACA;AACA,4BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA,0EAAyE,+CAA+C;AACxH;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E,iDAAiD;AAC7H,6CAA4C,0CAA0C;AACtF,kDAAiD,+FAA+F;AAChJ;AACA;AACA;AACA;AACA;AACA,qEAAoE,8VAA8V;AACla;AACA;AACA,EAAC;AACD;;AAEA;;;;;;;AClLA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,iCAAgC,MAAM,QAAQ,MAAM,QAAQ,MAAM;AAClE,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,yCAAyC;AAC9E,yCAAwC,+CAA+C;AACvF,sCAAqC,4CAA4C;AACjF;AACA;AACA,8CAA6C,yCAAyC,EAAE;AACxF;AACA;AACA,iDAAgD,qCAAqC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,2CAA0C,oFAAoF,EAAE;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,0DAA0D;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjNA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjFA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA8E,mBAAmB,wBAAwB;AACzH;AACA;AACA,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,gEAAgE,yBAAyB;AAC3I;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5GA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,kCAAkC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,wCAAuC;AACvC;AACA,+CAA8C,eAAe;AAC7D;AACA;AACA,2CAA0C,2CAA2C;AACrF;AACA;AACA;AACA,mEAAkE,2KAA2K;AAC7O;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/FA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mGAAkG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,SAAS,sBAAsB,EAAE;AACjF,6CAA4C,qEAAqE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAwE,+HAA+H,6BAA6B,EAAE;AACtO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,g3BAAg3B;AACv7B;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D,6CAA6C;AAC5G;AACA;;AAEA;;;;;;;ACxGA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,wDAAuD,SAAS,QAAQ,UAAU;AAClF,gBAAe,kBAAkB,aAAa,oBAAoB;AAClE,0LAAyL,SAAS,QAAQ,gBAAgB,gLAAgL,SAAS,QAAQ,gBAAgB,aAAa,cAAc;AACtc;;AAEA;;;;;;;ACzFA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,iDAAgD,iDAAiD;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,iDAAgD,iDAAiD;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,gEAAgE;AAC5G;AACA;AACA;AACA;AACA,EAAC;AACD;;AAEA;;;;;;;AC1DA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,wHAAwH;AACxK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAAyE,6BAA6B;AACtG;AACA;AACA,4CAA2C,yCAAyC;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;AAEA;;;;;;;AClDA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;;AAEA;;;;;;;ACzKA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,mEAAmE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,6EAA6E;AACzH,yCAAwC,qJAAqJ;AAC7L,6CAA4C,yCAAyC;AACrF;AACA;AACA,6CAA4C,yEAAyE;AACrH;AACA,iDAAgD,4EAA4E;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1FA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC,uDAAsD;AACtD,sDAAqD;AACrD,uDAAsD;AACtD,2DAA0D;AAC1D;AACA,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAsE,IAAI;AAC1E;AACA;AACA,kGAAiG,uBAAuB;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,0CAA0C;AACtF,iEAAgE,sjBAAsjB;AACtnB,iEAAgE,ieAAie;AACjiB,iEAAgE,ueAAue;AACviB,iEAAgE,4fAA4f;AAC5jB;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,oDAAoD;AAC3F;AACA;AACA,uGAAsG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,sDAAsD,EAAE;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D,4DAA4D,EAAE;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzYA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,sEAAsE,yBAAyB;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iHAAgH;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C,kDAAiD,qEAAqE;AACtH;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,uBAAuB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE,gTAAgT;AAClX,uFAAsF,+IAA+I;AACrO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,yBAAyB;AACnE,qDAAoD,+BAA+B;AACnF;AACA;AACA;AACA;AACA;AACA,oDAAmD,4BAA4B,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,yBAAyB;AACnE,qDAAoD,+BAA+B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxNA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,qCAAqC;AAChF;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;;AAEA","file":"table.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"window\"), require(\"classNames\"), require(\"React\"), require(\"Blueprint.Core\"), require(\"ReactDOM\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"window\", \"classNames\", \"React\", \"Blueprint.Core\", \"ReactDOM\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Table\"] = factory(require(\"window\"), require(\"classNames\"), require(\"React\"), require(\"Blueprint.Core\"), require(\"ReactDOM\"));\n\telse\n\t\troot[\"Blueprint\"] = root[\"Blueprint\"] || {}, root[\"Blueprint\"][\"Table\"] = factory(root[\"window\"], root[\"classNames\"], root[\"React\"], root[\"Blueprint.Core\"], root[\"ReactDOM\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_15__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 852596fbecfc080f1686","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"es6-shim\");\nvar cell_1 = require(\"./cell/cell\");\nexports.Cell = cell_1.Cell;\nvar editableCell_1 = require(\"./cell/editableCell\");\nexports.EditableCell = editableCell_1.EditableCell;\nvar jsonFormat_1 = require(\"./cell/formats/jsonFormat\");\nexports.JSONFormat = jsonFormat_1.JSONFormat;\nvar truncatedFormat_1 = require(\"./cell/formats/truncatedFormat\");\nexports.TruncatedPopoverMode = truncatedFormat_1.TruncatedPopoverMode;\nexports.TruncatedFormat = truncatedFormat_1.TruncatedFormat;\nvar column_1 = require(\"./column\");\nexports.Column = column_1.Column;\nvar index_1 = require(\"./common/index\");\nexports.Clipboard = index_1.Clipboard;\nexports.Grid = index_1.Grid;\nexports.Rect = index_1.Rect;\nexports.RenderMode = index_1.RenderMode;\nexports.Utils = index_1.Utils;\nvar draggable_1 = require(\"./interactions/draggable\");\nexports.Draggable = draggable_1.Draggable;\nvar menus_1 = require(\"./interactions/menus\");\nexports.CopyCellsMenuItem = menus_1.CopyCellsMenuItem;\nvar resizeHandle_1 = require(\"./interactions/resizeHandle\");\nexports.Orientation = resizeHandle_1.Orientation;\nexports.ResizeHandle = resizeHandle_1.ResizeHandle;\nvar selectable_1 = require(\"./interactions/selectable\");\nexports.DragSelectable = selectable_1.DragSelectable;\nvar columnHeaderCell_1 = require(\"./headers/columnHeaderCell\");\nexports.ColumnHeaderCell = columnHeaderCell_1.ColumnHeaderCell;\nexports.HorizontalCellDivider = columnHeaderCell_1.HorizontalCellDivider;\nvar rowHeaderCell_1 = require(\"./headers/rowHeaderCell\");\nexports.RowHeaderCell = rowHeaderCell_1.RowHeaderCell;\nvar editableName_1 = require(\"./headers/editableName\");\nexports.EditableName = editableName_1.EditableName;\nvar regions_1 = require(\"./regions\");\nexports.ColumnLoadingOption = regions_1.ColumnLoadingOption;\nexports.RegionCardinality = regions_1.RegionCardinality;\nexports.Regions = regions_1.Regions;\nexports.RowLoadingOption = regions_1.RowLoadingOption;\nexports.SelectionModes = regions_1.SelectionModes;\nexports.TableLoadingOption = regions_1.TableLoadingOption;\nvar table_1 = require(\"./table\");\nexports.Table = table_1.Table;\n\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/index.js\n// module id = 0\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"window\"\n// module id = 1\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar Classes = require(\"../common/classes\");\nvar utils_1 = require(\"../common/utils\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar loadableContent_1 = require(\"../common/loadableContent\");\nexports.emptyCellRenderer = function () { return React.createElement(Cell, null); };\nvar Cell = (function (_super) {\n    tslib_1.__extends(Cell, _super);\n    function Cell() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Cell.prototype.shouldComponentUpdate = function (nextProps) {\n        // deeply compare \"style,\" because a new but identical object might have been provided.\n        return !utils_1.Utils.shallowCompareKeys(this.props, nextProps, { exclude: [\"style\"] })\n            || !utils_1.Utils.deepCompareKeys(this.props.style, nextProps.style);\n    };\n    Cell.prototype.render = function () {\n        var _a = this.props, style = _a.style, intent = _a.intent, interactive = _a.interactive, loading = _a.loading, tooltip = _a.tooltip, truncated = _a.truncated, className = _a.className, wrapText = _a.wrapText;\n        var classes = classNames(Classes.TABLE_CELL, core_1.Classes.intentClass(intent), (_b = {},\n            _b[Classes.TABLE_CELL_INTERACTIVE] = interactive,\n            _b[core_1.Classes.LOADING] = loading,\n            _b[Classes.TABLE_TRUNCATED_CELL] = truncated,\n            _b), className);\n        var textClasses = classNames((_c = {},\n            _c[Classes.TABLE_TRUNCATED_TEXT] = truncated,\n            _c[Classes.TABLE_NO_WRAP_TEXT] = !wrapText,\n            _c));\n        // add width and height to the children, for use in shouldComponentUpdate in truncatedFormat\n        // note: these aren't actually used by truncated format, just in shouldComponentUpdate\n        var modifiedChildren = React.Children.map(this.props.children, function (child) {\n            if (style != null && React.isValidElement(child)) {\n                return React.cloneElement(child, { parentCellHeight: style.height, parentCellWidth: style.width });\n            }\n            return child;\n        });\n        var content = React.createElement(\"div\", { className: textClasses }, modifiedChildren);\n        return (React.createElement(\"div\", { className: classes, style: style, title: tooltip },\n            React.createElement(loadableContent_1.LoadableContent, { loading: loading, variableLength: true }, content)));\n        var _b, _c;\n    };\n    return Cell;\n}(React.Component));\nCell.defaultProps = {\n    truncated: true,\n    wrapText: false,\n};\nexports.Cell = Cell;\n\n//# sourceMappingURL=cell.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/cell/cell.js\n// module id = 2\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [0, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator];\r\n        return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/~/tslib/tslib.js\n// module id = 3\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"classNames\"\n// module id = 4\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 5\n// module chunks = 0","/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TABLE_BODY = \"bp-table-body\";\nexports.TABLE_BODY_SCROLL_CLIENT = \"bp-table-body-scroll-client\";\nexports.TABLE_BODY_VIRTUAL_CLIENT = \"bp-table-body-virtual-client\";\nexports.TABLE_BOTTOM_CONTAINER = \"bp-table-bottom-container\";\nexports.TABLE_CELL = \"bp-table-cell\";\nexports.TABLE_CELL_CLIENT = \"bp-table-cell-client\";\nexports.TABLE_CELL_GHOST = \"bp-table-cell-ghost\";\nexports.TABLE_CELL_INTERACTIVE = \"bp-table-cell-interactive\";\nexports.TABLE_CELL_LEDGER_EVEN = \"bp-table-cell-ledger-even\";\nexports.TABLE_CELL_LEDGER_ODD = \"bp-table-cell-ledger-odd\";\nexports.TABLE_COLUMN_HEADER_TR = \"bp-table-column-header-tr\";\nexports.TABLE_COLUMN_HEADERS = \"bp-table-column-headers\";\nexports.TABLE_COLUMN_HEADER_CELL = \"bp-table-column-header-cell\";\nexports.TABLE_COLUMN_NAME = \"bp-table-column-name\";\nexports.TABLE_COLUMN_NAME_TEXT = \"bp-table-column-name-text\";\nexports.TABLE_CONTAINER = \"bp-table-container\";\nexports.TABLE_DRAGGING = \"bp-table-dragging\";\nexports.TABLE_EDITABLE_NAME = \"bp-table-editable-name\";\nexports.TABLE_FOCUS_REGION = \"bp-table-focus-region\";\nexports.TABLE_HAS_INTERACTION_BAR = \"bp-table-has-interaction-bar\";\nexports.TABLE_HAS_REORDER_HANDLE = \"bp-table-has-reorder-handle\";\nexports.TABLE_HEADER = \"bp-table-header\";\nexports.TABLE_HEADER_ACTIVE = \"bp-table-header-active\";\nexports.TABLE_HEADER_CONTENT = \"bp-table-header-content\";\nexports.TABLE_HEADER_REORDERABLE = \"bp-table-header-reorderable\";\nexports.TABLE_HEADER_SELECTED = \"bp-table-header-selected\";\nexports.TABLE_HORIZONTAL_CELL_DIVIDER = \"bp-table-horizontal-cell-divider\";\nexports.TABLE_HORIZONTAL_GUIDE = \"bp-table-horizontal-guide\";\nexports.TABLE_INTERACTION_BAR = \"bp-table-interaction-bar\";\nexports.TABLE_LAST_IN_COLUMN = \"bp-table-last-in-column\";\nexports.TABLE_LAST_IN_ROW = \"bp-table-last-in-row\";\nexports.TABLE_MENU = \"bp-table-menu\";\nexports.TABLE_NO_HORIZONTAL_SCROLL = \"bp-table-no-horizontal-scroll\";\nexports.TABLE_NO_LAYOUT = \"bp-table-no-layout\";\nexports.TABLE_NO_VERTICAL_SCROLL = \"bp-table-no-vertical-scroll\";\nexports.TABLE_NO_WRAP_TEXT = \"bp-table-no-wrap-text\";\nexports.TABLE_NULL = \"bp-table-null\";\nexports.TABLE_OVERLAY = \"bp-table-overlay\";\nexports.TABLE_OVERLAY_LAYER = \"bp-table-overlay-layer\";\nexports.TABLE_POPOVER_WHITESPACE_NORMAL = \"bp-table-popover-whitespace-normal\";\nexports.TABLE_POPOVER_WHITESPACE_PRE = \"bp-table-popover-whitespace-pre\";\nexports.TABLE_QUADRANT = \"bp-table-quadrant\";\nexports.TABLE_QUADRANT_BODY_CONTAINER = \"bp-table-quadrant-body-container\";\nexports.TABLE_QUADRANT_LEFT = \"bp-table-quadrant-left\";\nexports.TABLE_QUADRANT_MAIN = \"bp-table-quadrant-main\";\nexports.TABLE_QUADRANT_SCROLL_CONTAINER = \"bp-table-quadrant-scroll-container\";\nexports.TABLE_QUADRANT_STACK = \"bp-table-quadrant-stack\";\nexports.TABLE_QUADRANT_TOP = \"bp-table-quadrant-top\";\nexports.TABLE_QUADRANT_TOP_LEFT = \"bp-table-quadrant-top-left\";\nexports.TABLE_REGION = \"bp-table-region\";\nexports.TABLE_REORDER_HANDLE = \"bp-table-reorder-handle\";\nexports.TABLE_REORDER_HANDLE_TARGET = \"bp-table-reorder-handle-target\";\nexports.TABLE_REORDERING = \"bp-table-reordering\";\nexports.TABLE_RESIZE_GUIDES = \"bp-table-resize-guides\";\nexports.TABLE_RESIZE_HANDLE = \"bp-table-resize-handle\";\nexports.TABLE_RESIZE_HANDLE_TARGET = \"bp-table-resize-handle-target\";\nexports.TABLE_RESIZE_HORIZONTAL = \"bp-table-resize-horizontal\";\nexports.TABLE_RESIZE_SENSOR = \"bp-table-resize-sensor\";\nexports.TABLE_RESIZE_SENSOR_EXPAND = \"bp-table-resize-sensor-expand\";\nexports.TABLE_RESIZE_SENSOR_SHRINK = \"bp-table-resize-sensor-shrink\";\nexports.TABLE_RESIZE_VERTICAL = \"bp-table-resize-vertical\";\nexports.TABLE_ROUNDED_LAYOUT = \"bp-table-rounded-layout\";\nexports.TABLE_ROW_HEADERS = \"bp-table-row-headers\";\nexports.TABLE_ROW_HEADERS_CELLS_CONTAINER = \"bp-table-row-headers-cells-container\";\nexports.TABLE_ROW_NAME = \"bp-table-row-name\";\nexports.TABLE_ROW_NAME_TEXT = \"bp-table-row-name-text\";\nexports.TABLE_SELECTION_ENABLED = \"bp-table-selection-enabled\";\nexports.TABLE_SELECTION_REGION = \"bp-table-selection-region\";\nexports.TABLE_TH_MENU = \"bp-table-th-menu\";\nexports.TABLE_TH_MENU_CONTAINER = \"bp-table-th-menu-container\";\nexports.TABLE_TH_MENU_CONTAINER_BACKGROUND = \"bp-table-th-menu-container-background\";\nexports.TABLE_TH_MENU_OPEN = \"bp-table-th-menu-open\";\nexports.TABLE_THEAD = \"bp-table-thead\";\nexports.TABLE_TOP_CONTAINER = \"bp-table-top-container\";\nexports.TABLE_TRUNCATED_CELL = \"bp-table-truncated-cell\";\nexports.TABLE_TRUNCATED_FORMAT = \"bp-table-truncated-format\";\nexports.TABLE_TRUNCATED_FORMAT_TEXT = \"bp-table-truncated-format-text\";\nexports.TABLE_TRUNCATED_POPOVER = \"bp-table-truncated-popover\";\nexports.TABLE_TRUNCATED_POPOVER_TARGET = \"bp-table-truncated-popover-target\";\nexports.TABLE_TRUNCATED_TEXT = \"bp-table-truncated-text\";\nexports.TABLE_TRUNCATED_VALUE = \"bp-table-truncated-value\";\nexports.TABLE_VERTICAL_GUIDE = \"bp-table-vertical-guide\";\n/** Common code for row and column index class generator functions, since they're essentially the same. */\nfunction dimensionIndexClass(classPrefix, index) {\n    if (index == null) {\n        return undefined;\n    }\n    if (typeof index === \"number\") {\n        return \"\" + classPrefix + index;\n    }\n    return index.indexOf(classPrefix) === 0 ? index : \"\" + classPrefix + index;\n}\n/** Return CSS class for table colummn index, whether or not 'bp-table-col-' prefix is included. */\nfunction columnIndexClass(columnIndex) {\n    return dimensionIndexClass(\"bp-table-col-\", columnIndex);\n}\nexports.columnIndexClass = columnIndexClass;\n/** Return CSS class for table row index, whether or not 'bp-table-row-' prefix is included. */\nfunction rowIndexClass(rowIndex) {\n    return dimensionIndexClass(\"bp-table-row-\", rowIndex);\n}\nexports.rowIndexClass = rowIndexClass;\n/** Return CSS class for table colummn cell index, whether or not 'bp-table-cell-col-' prefix is included. */\nfunction columnCellIndexClass(columnIndex) {\n    return dimensionIndexClass(\"bp-table-cell-col-\", columnIndex);\n}\nexports.columnCellIndexClass = columnCellIndexClass;\n/** Return CSS class for table row cell index, whether or not 'bp-table-cell-row-' prefix is included. */\nfunction rowCellIndexClass(rowIndex) {\n    return dimensionIndexClass(\"bp-table-cell-row-\", rowIndex);\n}\nexports.rowCellIndexClass = rowCellIndexClass;\n\n//# sourceMappingURL=classes.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/classes.js\n// module id = 6\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\n;\n// tslint:enable\n/**\n * Since Firefox doesn't provide a computed \"font\" property, we manually\n * construct it using the ordered properties that can be specifed in CSS.\n */\nvar CSS_FONT_PROPERTIES = [\n    \"font-style\",\n    \"font-variant\",\n    \"font-weight\",\n    \"font-size\",\n    \"font-family\",\n];\nexports.Utils = {\n    /**\n     * Returns a clone of the ReactElement with a className that includes the\n     * element's original className and any other classes passed in with variadic\n     * arguments matching the `classNames` api.\n     */\n    assignClasses: function (elem) {\n        var extendedClasses = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            extendedClasses[_i - 1] = arguments[_i];\n        }\n        var classes = classNames.apply(void 0, [elem.props.className].concat(extendedClasses));\n        return React.cloneElement(elem, { className: classes });\n    },\n    /**\n     * Invokes the callback `n` times, collecting the results in an array, which\n     * is the return value. Similar to _.times\n     */\n    times: function (n, callback) {\n        var result = Array(n);\n        for (var index = 0; index < n; index++) {\n            result[index] = callback(index);\n        }\n        return result;\n    },\n    /**\n     * Takes an array of numbers, returns an array of numbers of the same length in which each\n     * value is the sum of current and previous values in the input array.\n     *\n     * Example input:  [10, 20, 50]\n     *         output: [10, 30, 80]\n     */\n    accumulate: function (numbers) {\n        var result = [];\n        var sum = 0;\n        for (var _i = 0, numbers_1 = numbers; _i < numbers_1.length; _i++) {\n            var num = numbers_1[_i];\n            sum += num;\n            result.push(sum);\n        }\n        return result;\n    },\n    /**\n     * Returns traditional spreadsheet-style column names\n     * e.g. (A, B, ..., Z, AA, AB, ..., ZZ, AAA, AAB, ...).\n     *\n     * Note that this isn't technically mathematically equivalent to base 26 since\n     * there is no zero element.\n     */\n    toBase26Alpha: function (num) {\n        var str = \"\";\n        while (true) {\n            var letter = num % 26;\n            str = String.fromCharCode(65 + letter) + str;\n            num = num - letter;\n            if (num <= 0) {\n                return str;\n            }\n            num = (num / 26) - 1;\n        }\n    },\n    /**\n     * Returns traditional spreadsheet-style cell names\n     * e.g. (A1, B2, ..., Z44, AA1) with rows 1-indexed.\n     */\n    toBase26CellName: function (rowIndex, columnIndex) {\n        return \"\" + exports.Utils.toBase26Alpha(columnIndex) + (rowIndex + 1);\n    },\n    /**\n     * Performs the binary search algorithm to find the index of the `value`\n     * parameter in a sorted list of numbers. If `value` is not in the list, the\n     * index where `value` can be inserted to maintain the sort is returned.\n     *\n     * Unlike a typical binary search implementation, we use a `lookup`\n     * callback to access the sorted list of numbers instead of an array. This\n     * avoids additional storage overhead.\n     *\n     * We use this to, for example, find the index of a row/col given its client\n     * coordinate.\n     *\n     * Adapted from lodash https://github.com/lodash/lodash/blob/4.11.2/lodash.js#L3579\n     *\n     * @param value - the query value\n     * @param high - the length of the sorted list of numbers\n     * @param lookup - returns the number from the list at the supplied index\n     */\n    binarySearch: function (value, high, lookup) {\n        var low = 0;\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2.0);\n            var computed = lookup(mid);\n            if (computed < value) {\n                low = mid + 1;\n            }\n            else {\n                high = mid;\n            }\n        }\n        return high;\n    },\n    /**\n     * Returns a copy of the array that will have a length of the supplied parameter.\n     * If the array is too long, it will be truncated. If it is too short, it will be\n     * filled with the suppleid `fillValue` argument.\n     *\n     * @param array - the `Array` to copy and adjust\n     * @param length - the target length of the array\n     * @param fillValue - the value to add to the array if it is too short\n     */\n    arrayOfLength: function (array, length, fillValue) {\n        if (array.length > length) {\n            return array.slice(0, length);\n        }\n        array = array.slice();\n        while (array.length < length) {\n            array.push(fillValue);\n        }\n        return array;\n    },\n    /**\n     * Takes in one full array of values and one sparse array of the same\n     * length and type. Returns a copy of the `defaults` array, where each\n     * value is replaced with the corresponding non-null value at the same\n     * index in `sparseOverrides`.\n     *\n     * @param defaults - the full array of default values\n     * @param sparseOverrides - the sparse array of override values\n     */\n    assignSparseValues: function (defaults, sparseOverrides) {\n        if (sparseOverrides == null || defaults.length !== sparseOverrides.length) {\n            return defaults;\n        }\n        defaults = defaults.slice();\n        for (var i = 0; i < defaults.length; i++) {\n            var override = sparseOverrides[i];\n            if (override != null) {\n                defaults[i] = override;\n            }\n        }\n        return defaults;\n    },\n    /**\n     * Measures the bounds of supplied element's textContent.\n     *\n     * We use the computed font from the supplied element and a non-DOM canvas\n     * context to measure the text.\n     *\n     * Returns a `TextMetrics` object.\n     */\n    measureElementTextContent: function (element) {\n        var context = document.createElement(\"canvas\").getContext(\"2d\");\n        var style = getComputedStyle(element, null);\n        context.font = CSS_FONT_PROPERTIES.map(function (prop) { return style.getPropertyValue(prop); }).join(\" \");\n        return context.measureText(element.textContent);\n    },\n    /**\n     * Given a number, returns a value that is clamped within a\n     * minimum/maximum bounded range. The minimum and maximum are optional. If\n     * either is missing, that extrema limit is not applied.\n     *\n     * Assumes max >= min.\n     */\n    clamp: function (value, min, max) {\n        if (min != null && value < min) {\n            value = min;\n        }\n        if (max != null && value > max) {\n            value = max;\n        }\n        return value;\n    },\n    /**\n     * Shallow comparison between objects. If `keys` is provided, just that subset of keys will be\n     * compared; otherwise, all keys will be compared.\n     */\n    shallowCompareKeys: function (objA, objB, keys) {\n        // treat `null` and `undefined` as the same\n        if (objA == null && objB == null) {\n            return true;\n        }\n        else if (objA == null || objB == null) {\n            return false;\n        }\n        else if (Array.isArray(objA) || Array.isArray(objB)) {\n            return false;\n        }\n        else if (keys != null) {\n            return _shallowCompareKeys(objA, objB, keys);\n        }\n        else {\n            // shallowly compare all keys from both objects\n            var keysA = Object.keys(objA);\n            var keysB = Object.keys(objB);\n            return _shallowCompareKeys(objA, objB, { include: keysA })\n                && _shallowCompareKeys(objA, objB, { include: keysB });\n        }\n    },\n    /**\n     * Deep comparison between objects. If `keys` is provided, just that subset of keys will be\n     * compared; otherwise, all keys will be compared.\n     */\n    deepCompareKeys: function (objA, objB, keys) {\n        if (objA === objB) {\n            return true;\n        }\n        else if (objA == null && objB == null) {\n            // treat `null` and `undefined` as the same\n            return true;\n        }\n        else if (objA == null || objB == null) {\n            return false;\n        }\n        else if (Array.isArray(objA) || Array.isArray(objB)) {\n            return exports.Utils.arraysEqual(objA, objB, exports.Utils.deepCompareKeys);\n        }\n        else if (_isSimplePrimitiveType(objA) || _isSimplePrimitiveType(objB)) {\n            return objA === objB;\n        }\n        else if (keys != null) {\n            return _deepCompareKeys(objA, objB, keys);\n        }\n        else if (objA.constructor !== objB.constructor) {\n            return false;\n        }\n        else {\n            var keysA = Object.keys(objA);\n            var keysB = Object.keys(objB);\n            if (keysA == null || keysB == null) {\n                return false;\n            }\n            if (keysA.length === 0 && keysB.length === 0) {\n                return true;\n            }\n            return exports.Utils.arraysEqual(keysA, keysB) && _deepCompareKeys(objA, objB, keysA);\n        }\n    },\n    /**\n     * Returns a descriptive object for each key whose values are shallowly unequal between two\n     * provided objects. Useful for debugging shouldComponentUpdate.\n     */\n    getShallowUnequalKeyValues: function (objA, objB, keys) {\n        // default param values let null values pass through, so we have to take this more thorough approach\n        var definedObjA = (objA == null) ? {} : objA;\n        var definedObjB = (objB == null) ? {} : objB;\n        var filteredKeys = _filterKeys(definedObjA, definedObjB, keys == null ? { exclude: [] } : keys);\n        return _getUnequalKeyValues(definedObjA, definedObjB, filteredKeys, function (a, b, key) { return exports.Utils.shallowCompareKeys(a, b, { include: [key] }); });\n    },\n    /**\n     * Returns a descriptive object for each key whose values are deeply unequal between two\n     * provided objects. Useful for debugging shouldComponentUpdate.\n     */\n    getDeepUnequalKeyValues: function (objA, objB, keys) {\n        var definedObjA = (objA == null) ? {} : objA;\n        var definedObjB = (objB == null) ? {} : objB;\n        var filteredKeys = (keys == null) ? _unionKeys(definedObjA, definedObjB) : keys;\n        return _getUnequalKeyValues(definedObjA, definedObjB, filteredKeys, function (a, b, key) { return exports.Utils.deepCompareKeys(a, b, [key]); });\n    },\n    /**\n     * When reordering a contiguous block of rows or columns to a new index, we show a preview guide\n     * at the absolute index in the original ordering but emit the new index in the reordered list.\n     * This function converts an absolute \"guide\" index to a relative \"reordered\" index.\n     *\n     * Example: Say we want to move the first three columns two spots to the right. While we drag, a\n     * vertical guide is shown to preview where we'll be dropping the columns. (In the following\n     * ASCII art, `*` denotes a selected column, `·` denotes a cell border, and `|` denotes a\n     * vertical guide).\n     *\n     *     Before mousedown:\n     *     · 0 · 1 · 2 · 3 · 4 · 5 ·\n     *       *   *   *\n     *\n     *     During mousemove two spots to the right:\n     *     · 0 · 1 · 2 · 3 · 4 | 5 ·\n     *       *   *   *\n     *\n     *     After mouseup:\n     *     · 3 · 4 · 0 · 1 · 2 · 5 ·\n     *               *   *   *\n     *\n     * Note that moving the three columns beyond index 4 effectively moves them two spots rightward.\n     *\n     * In this case, the inputs to this function would be:\n     *     - oldIndex: 0 (the left-most index of the selected column range in the original ordering)\n     *     - newIndex: 5 (the index on whose left boundary the guide appears in the original ordering)\n     *     - length: 3 (the number of columns to move)\n     *\n     * The return value will then be 2, the left-most index of the columns in the new ordering.\n     */\n    guideIndexToReorderedIndex: function (oldIndex, newIndex, length) {\n        if (newIndex < oldIndex) {\n            return newIndex;\n        }\n        else if (oldIndex <= newIndex && newIndex < oldIndex + length) {\n            return oldIndex;\n        }\n        else {\n            return Math.max(0, newIndex - length);\n        }\n    },\n    /**\n     * When reordering a contiguous block of rows or columns to a new index, we show a preview guide\n     * at the absolute index in the original ordering but emit the new index in the reordered list.\n     * This function converts a relative \"reordered\"\" index to an absolute \"guide\" index.\n     *\n     * For the scenario in the example above, the inputs to this function would be:\n     *     - oldIndex: 0 (the left-most index of the selected column range in the original ordering)\n     *     - newIndex: 2 (the left-most index of the selected column range in the new ordering)\n     *     - length: 3 (the number of columns to move)\n     *\n     * The return value will then be 5, the index on whose left boundary the guide should appear in\n     * the original ordering.\n     */\n    reorderedIndexToGuideIndex: function (oldIndex, newIndex, length) {\n        return (newIndex <= oldIndex) ? newIndex : newIndex + length;\n    },\n    /**\n     * Returns a copy of the provided array with the `length` contiguous elements starting at the\n     * `from` index reordered to start at the `to` index.\n     *\n     * For example, given the array [A,B,C,D,E,F], reordering the 3 contiguous elements starting at\n     * index 1 (B, C, and D) to start at index 2 would yield [A,E,B,C,D,F].\n     */\n    reorderArray: function (array, from, to, length) {\n        if (length === void 0) { length = 1; }\n        if (length === 0 || length === array.length || from === to) {\n            // return an unchanged copy\n            return array.slice();\n        }\n        if (length < 0 || length > array.length || from + length > array.length) {\n            return undefined;\n        }\n        var before = array.slice(0, from);\n        var within = array.slice(from, from + length);\n        var after = array.slice(from + length);\n        var result = [];\n        var i = 0;\n        var b = 0;\n        var w = 0;\n        var a = 0;\n        while (i < to) {\n            if (b < before.length) {\n                result.push(before[b]);\n                b += 1;\n            }\n            else {\n                result.push(after[a]);\n                a += 1;\n            }\n            i += 1;\n        }\n        while (w < length) {\n            result.push(within[w]);\n            w += 1;\n            i += 1;\n        }\n        while (i < array.length) {\n            if (b < before.length) {\n                result.push(before[b]);\n                b += 1;\n            }\n            else {\n                result.push(after[a]);\n                a += 1;\n            }\n            i += 1;\n        }\n        return result;\n    },\n    /**\n     * Returns true if the mouse event was triggered by the left mouse button.\n     */\n    isLeftClick: function (event) {\n        return event.button === 0;\n    },\n    /**\n     * Returns true if the arrays are equal. Elements will be shallowly compared by default, or they\n     * will be compared using the custom `compare` function if one is provided.\n     */\n    arraysEqual: function (arrA, arrB, compare) {\n        if (compare === void 0) { compare = function (a, b) { return a === b; }; }\n        // treat `null` and `undefined` as the same\n        if (arrA == null && arrB == null) {\n            return true;\n        }\n        else if (arrA == null || arrB == null || arrA.length !== arrB.length) {\n            return false;\n        }\n        else {\n            return arrA.every(function (a, i) { return compare(a, arrB[i]); });\n        }\n    },\n};\n/**\n * Partial shallow comparison between objects using the given list of keys.\n */\nfunction _shallowCompareKeys(objA, objB, keys) {\n    return _filterKeys(objA, objB, keys).every(function (key) {\n        return objA.hasOwnProperty(key) === objB.hasOwnProperty(key)\n            && objA[key] === objB[key];\n    });\n}\n/**\n * Partial deep comparison between objects using the given list of keys.\n */\nfunction _deepCompareKeys(objA, objB, keys) {\n    return keys.every(function (key) {\n        return objA.hasOwnProperty(key) === objB.hasOwnProperty(key)\n            && exports.Utils.deepCompareKeys(objA[key], objB[key]);\n    });\n}\nfunction _isSimplePrimitiveType(value) {\n    return typeof value === \"number\"\n        || typeof value === \"string\"\n        || typeof value === \"boolean\";\n}\nfunction _filterKeys(objA, objB, keys) {\n    if (isWhitelist(keys)) {\n        return keys.include;\n    }\n    else {\n        var keysA = Object.keys(objA);\n        var keysB = Object.keys(objB);\n        // merge keys from both objects into a big set for quick access\n        var keySet_1 = _arrayToObject(keysA.concat(keysB));\n        // delete blacklisted keys from the key set\n        keys.exclude.forEach(function (key) { return delete keySet_1[key]; });\n        // return the remaining keys as an array\n        return Object.keys(keySet_1);\n    }\n}\nfunction isWhitelist(keys) {\n    return keys != null && keys.include != null;\n}\nfunction _arrayToObject(arr) {\n    return arr.reduce(function (obj, element) {\n        obj[element] = true;\n        return obj;\n    }, {});\n}\nfunction _getUnequalKeyValues(objA, objB, keys, compareFn) {\n    var unequalKeys = keys.filter(function (key) { return !compareFn(objA, objB, key); });\n    var unequalKeyValues = unequalKeys.map(function (key) { return ({\n        key: key,\n        valueA: objA[key],\n        valueB: objB[key],\n    }); });\n    return unequalKeyValues;\n}\nfunction _unionKeys(objA, objB) {\n    var keysA = Object.keys(objA);\n    var keysB = Object.keys(objB);\n    var concatKeys = keysA.concat(keysB);\n    var keySet = _arrayToObject(concatKeys);\n    return Object.keys(keySet);\n}\n\n//# sourceMappingURL=utils.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/utils.js\n// module id = 7\n// module chunks = 0","module.exports = Blueprint.Core;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Blueprint.Core\"\n// module id = 8\n// module chunks = 0","/**\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar PureRender = require(\"pure-render-decorator\");\nvar React = require(\"react\");\nvar core_1 = require(\"@blueprintjs/core\");\n// This class expects a single, non-string child.\nvar LoadableContent = (function (_super) {\n    tslib_1.__extends(LoadableContent, _super);\n    function LoadableContent(props) {\n        var _this = _super.call(this, props) || this;\n        _this.style = _this.calculateStyle(props.variableLength);\n        return _this;\n    }\n    LoadableContent.prototype.componentWillReceiveProps = function (nextProps) {\n        if (!this.props.loading && nextProps.loading || this.props.variableLength !== nextProps.variableLength) {\n            this.style = this.calculateStyle(nextProps.variableLength);\n        }\n    };\n    LoadableContent.prototype.render = function () {\n        if (this.props.loading) {\n            return React.createElement(\"div\", { className: core_1.Classes.SKELETON, style: this.style });\n        }\n        return React.Children.only(this.props.children);\n    };\n    LoadableContent.prototype.calculateStyle = function (variableLength) {\n        var skeletonLength = variableLength ? 75 - Math.floor(Math.random() * 11) * 5 : 100;\n        return { width: skeletonLength + \"%\" };\n    };\n    return LoadableContent;\n}(React.Component));\nLoadableContent = tslib_1.__decorate([\n    PureRender\n], LoadableContent);\nexports.LoadableContent = LoadableContent;\n\n//# sourceMappingURL=loadableContent.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/loadableContent.js\n// module id = 9\n// module chunks = 0","/**\n * @author Félix Girault <felix.girault@gmail.com>\n * @license MIT\n */\n'use strict';\n\nvar warning = require('fbjs/lib/warning');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\n\n\n/**\n * Tells if a component should update given it's next props\n * and state.\n *\n * @param object nextProps Next props.\n * @param object nextState Next state.\n */\nfunction shouldComponentUpdate(nextProps, nextState) {\n  return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);\n}\n\n/**\n * Returns a text description of the component that can be\n * used to identify it in error messages.\n *\n * @see https://github.com/facebook/react/blob/v15.4.0-rc.3/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js#L1143\n * @param {function} component The component.\n * @return {string} The name of the component.\n */\nfunction getComponentName(component) {\n  var constructor = component.prototype && component.prototype.constructor;\n\n  return (\n    component.displayName\n    || (constructor && constructor.displayName)\n    || component.name\n    || (constructor && constructor.name)\n    || 'a component'\n  );\n}\n\n/**\n * Makes the given component \"pure\".\n *\n * @param object component Component.\n */\nfunction pureRenderDecorator(component) {\n  if (component.prototype.shouldComponentUpdate !== undefined) {\n    // We're not using the condition mecanism of warning()\n    // here to avoid useless calls to getComponentName().\n    warning(\n      false,\n      'Cannot decorate `%s` with @pureRenderDecorator, '\n      + 'because it already implements `shouldComponentUpdate().',\n      getComponentName(component)\n    )\n  }\n\n  component.prototype.shouldComponentUpdate = shouldComponentUpdate;\n  return component;\n}\n\n\n\nmodule.exports = pureRenderDecorator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/~/pure-render-decorator/index.js\n// module id = 10\n// module chunks = 0","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var printWarning = function printWarning(format) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n\n    warning = function warning(condition, format) {\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n\n      if (format.indexOf('Failed Composite propType: ') === 0) {\n        return; // Ignore CompositeComponent proptype check.\n      }\n\n      if (!condition) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        printWarning.apply(undefined, [format].concat(args));\n      }\n    };\n  })();\n}\n\nmodule.exports = warning;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/~/fbjs/lib/warning.js\n// module id = 11\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/~/fbjs/lib/emptyFunction.js\n// module id = 12\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/~/fbjs/lib/shallowEqual.js\n// module id = 13\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar React = require(\"react\");\nvar ReactDOM = require(\"react-dom\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar Classes = require(\"../common/classes\");\nvar utils_1 = require(\"../common/utils\");\nvar draggable_1 = require(\"../interactions/draggable\");\nvar cell_1 = require(\"./cell\");\nvar EditableCell = (function (_super) {\n    tslib_1.__extends(EditableCell, _super);\n    function EditableCell(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        _this.handleEdit = function () {\n            _this.setState({ isEditing: true, dirtyValue: _this.state.savedValue });\n        };\n        _this.handleCancel = function (value) {\n            // don't strictly need to clear the dirtyValue, but it's better hygiene\n            _this.setState({ isEditing: false, dirtyValue: undefined });\n            _this.invokeCallback(_this.props.onCancel, value);\n        };\n        _this.handleChange = function (value) {\n            _this.setState({ dirtyValue: value });\n            _this.invokeCallback(_this.props.onChange, value);\n        };\n        _this.handleConfirm = function (value) {\n            _this.setState({ isEditing: false, savedValue: value, dirtyValue: undefined });\n            _this.invokeCallback(_this.props.onConfirm, value);\n        };\n        _this.handleCellActivate = function (_event) {\n            // Cancel edit of active cell when clicking away\n            if (!_this.state.isEditing && document.activeElement instanceof HTMLElement && document.activeElement.blur) {\n                document.activeElement.blur();\n            }\n            return true;\n        };\n        _this.handleCellDoubleClick = function (_event) {\n            var cellElement = ReactDOM.findDOMNode(_this);\n            if (cellElement == null) {\n                return;\n            }\n            var focusable = cellElement.querySelector(\".pt-editable-text\");\n            if (focusable.focus != null) {\n                focusable.focus();\n            }\n        };\n        _this.state = {\n            isEditing: false,\n            savedValue: props.value,\n        };\n        return _this;\n    }\n    EditableCell.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        return !utils_1.Utils.shallowCompareKeys(this.props, nextProps, { exclude: [\"style\"] })\n            || !utils_1.Utils.shallowCompareKeys(this.state, nextState)\n            || !utils_1.Utils.deepCompareKeys(this.props, nextProps, [\"style\"]);\n    };\n    EditableCell.prototype.componentWillReceiveProps = function (nextProps) {\n        var value = nextProps.value;\n        this.setState({ savedValue: value, dirtyValue: value });\n    };\n    EditableCell.prototype.render = function () {\n        var _a = this.props, onCancel = _a.onCancel, onChange = _a.onChange, onConfirm = _a.onConfirm, spreadableProps = tslib_1.__rest(_a, [\"onCancel\", \"onChange\", \"onConfirm\"]);\n        var _b = this.state, isEditing = _b.isEditing, dirtyValue = _b.dirtyValue, savedValue = _b.savedValue;\n        var interactive = spreadableProps.interactive || isEditing;\n        return (React.createElement(cell_1.Cell, tslib_1.__assign({}, spreadableProps, { truncated: false, interactive: interactive }),\n            React.createElement(draggable_1.Draggable, { onActivate: this.handleCellActivate, onDoubleClick: this.handleCellDoubleClick, preventDefault: !interactive, stopPropagation: interactive },\n                React.createElement(core_1.EditableText, { className: Classes.TABLE_EDITABLE_NAME, intent: spreadableProps.intent, minWidth: null, onCancel: this.handleCancel, onChange: this.handleChange, onConfirm: this.handleConfirm, onEdit: this.handleEdit, placeholder: \"\", selectAllOnFocus: true, value: isEditing ? dirtyValue : savedValue }))));\n    };\n    EditableCell.prototype.invokeCallback = function (callback, value) {\n        // pass through the row and column indices if they were provided as props by the consumer\n        var _a = this.props, rowIndex = _a.rowIndex, columnIndex = _a.columnIndex;\n        core_1.Utils.safeInvoke(callback, value, rowIndex, columnIndex);\n    };\n    return EditableCell;\n}(React.Component));\nexports.EditableCell = EditableCell;\n\n//# sourceMappingURL=editableCell.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/cell/editableCell.js\n// module id = 14\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDOM\"\n// module id = 15\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar PureRender = require(\"pure-render-decorator\");\nvar React = require(\"react\");\nvar ReactDOM = require(\"react-dom\");\nvar utils_1 = require(\"../common/utils\");\nvar dragEvents_1 = require(\"./dragEvents\");\nvar REATTACH_PROPS_KEYS = [\n    \"stopPropagation\",\n    \"preventDefault\",\n];\n/**\n * This component provides a simple interface for combined drag and/or click\n * events.\n *\n * Since the mouse interactions for drag and click are overloaded, here are\n * the events that will fire in these cases:\n *\n * A Click Interaction\n * 1. The user presses down on the render element, triggering the onActivate\n *    callback.\n * 2. The user releases the mouse button without moving it, triggering the\n *    onClick callback.\n *\n * A Drag Interaction\n * 1. The user presses down on the render element, triggering the onActivate\n *    callback.\n * 2. The user moves the mouse, triggering the onDragMove callback.\n * 3. The user moves the mouse, triggering the onDragMove callback.\n * 4. The user moves the mouse, triggering the onDragMove callback.\n * 5. The user releases the mouse button, triggering a final onDragMove\n *    callback as well as an onDragEnd callback.\n *\n * If `false` is returned from the onActivate callback, no further events\n * will be fired until the next activation.\n */\nvar Draggable = (function (_super) {\n    tslib_1.__extends(Draggable, _super);\n    function Draggable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Draggable.prototype.render = function () {\n        return React.Children.only(this.props.children);\n    };\n    Draggable.prototype.componentWillReceiveProps = function (nextProps) {\n        var propsWhitelist = { include: REATTACH_PROPS_KEYS };\n        if (this.events && !utils_1.Utils.shallowCompareKeys(this.props, nextProps, propsWhitelist)) {\n            this.events.attach(ReactDOM.findDOMNode(this), nextProps);\n        }\n    };\n    Draggable.prototype.componentDidMount = function () {\n        this.events = new dragEvents_1.DragEvents();\n        this.events.attach(ReactDOM.findDOMNode(this), this.props);\n    };\n    Draggable.prototype.componentWillUnmount = function () {\n        this.events.detach();\n        delete this.events;\n    };\n    return Draggable;\n}(React.Component));\nDraggable.defaultProps = {\n    preventDefault: true,\n    stopPropagation: false,\n};\nDraggable = tslib_1.__decorate([\n    PureRender\n], Draggable);\nexports.Draggable = Draggable;\n\n//# sourceMappingURL=draggable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/interactions/draggable.js\n// module id = 16\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DragEvents = (function () {\n    function DragEvents() {\n        var _this = this;\n        this.handleMouseDown = function (event) {\n            _this.initCoordinateData(event);\n            if (_this.handler != null && _this.handler.onActivate != null) {\n                var exitCode = _this.handler.onActivate(event);\n                if (exitCode === false) {\n                    return;\n                }\n            }\n            _this.isActivated = true;\n            _this.maybeAlterEventChain(event);\n            // It is possible that the mouseup would not be called after the initial\n            // mousedown (for example if the mouse is moved out of the window). So,\n            // we preemptively detach to avoid duplicate listeners.\n            _this.detachDocumentEventListeners();\n            _this.attachDocumentEventListeners();\n        };\n        this.handleMouseMove = function (event) {\n            _this.maybeAlterEventChain(event);\n            if (_this.isActivated) {\n                _this.isDragging = true;\n            }\n            if (_this.isDragging) {\n                var coords = _this.updateCoordinateData(event);\n                if (_this.handler != null && _this.handler.onDragMove != null) {\n                    _this.handler.onDragMove(event, coords);\n                }\n            }\n        };\n        this.handleMouseUp = function (event) {\n            _this.maybeAlterEventChain(event);\n            if (_this.handler != null) {\n                if (_this.isDragging) {\n                    var coords = _this.updateCoordinateData(event);\n                    if (_this.handler.onDragMove != null) {\n                        _this.handler.onDragMove(event, coords);\n                    }\n                    if (_this.handler.onDragEnd != null) {\n                        _this.handler.onDragEnd(event, coords);\n                    }\n                }\n                else if (_this.isActivated) {\n                    if (_this.handler.onDoubleClick != null) {\n                        if (_this.doubleClickTimeoutToken == null) {\n                            // if this the first click of a possible double-click,\n                            // we delay the firing of the click event by the\n                            // timeout.\n                            _this.doubleClickTimeoutToken = setTimeout(function () {\n                                delete _this.doubleClickTimeoutToken;\n                                if (_this.handler.onClick != null) {\n                                    _this.handler.onClick(event);\n                                }\n                            }, DragEvents.DOUBLE_CLICK_TIMEOUT_MSEC);\n                        }\n                        else {\n                            // otherwise, this is the second click in the double-\n                            // click so we cancel the single-click timeout and\n                            // fire the double-click event.\n                            clearTimeout(_this.doubleClickTimeoutToken);\n                            delete _this.doubleClickTimeoutToken;\n                            _this.handler.onDoubleClick(event);\n                        }\n                    }\n                    else if (_this.handler.onClick != null) {\n                        _this.handler.onClick(event);\n                    }\n                }\n            }\n            _this.isActivated = false;\n            _this.isDragging = false;\n            _this.detachDocumentEventListeners();\n        };\n    }\n    /**\n     * Returns true if the event includes a modifier key that often adds the result of the drag\n     * event to any existing state. For example, holding CTRL before dragging may select another\n     * region in addition to an existing one, while the absence of a modifier key may clear the\n     * existing selection first.\n     * @param event the mouse event for the drag interaction\n     */\n    DragEvents.isAdditive = function (event) {\n        return event.ctrlKey || event.metaKey;\n    };\n    DragEvents.prototype.attach = function (element, handler) {\n        this.detach();\n        this.handler = handler;\n        this.element = element;\n        if (this.isValidDragHandler(handler)) {\n            this.element.addEventListener(\"mousedown\", this.handleMouseDown);\n        }\n        return this;\n    };\n    DragEvents.prototype.detach = function () {\n        if (this.element != null) {\n            this.element.removeEventListener(\"mousedown\", this.handleMouseDown);\n            this.detachDocumentEventListeners();\n        }\n    };\n    DragEvents.prototype.isValidDragHandler = function (handler) {\n        return handler != null && (handler.onActivate != null\n            || handler.onDragMove != null\n            || handler.onDragEnd != null\n            || handler.onClick != null\n            || handler.onDoubleClick != null);\n    };\n    DragEvents.prototype.attachDocumentEventListeners = function () {\n        document.addEventListener(\"mousemove\", this.handleMouseMove);\n        document.addEventListener(\"mouseup\", this.handleMouseUp);\n    };\n    DragEvents.prototype.detachDocumentEventListeners = function () {\n        document.removeEventListener(\"mousemove\", this.handleMouseMove);\n        document.removeEventListener(\"mouseup\", this.handleMouseUp);\n    };\n    DragEvents.prototype.initCoordinateData = function (event) {\n        this.activationCoordinates = [event.clientX, event.clientY];\n        this.lastCoordinates = this.activationCoordinates;\n    };\n    DragEvents.prototype.updateCoordinateData = function (event) {\n        var currentCoordinates = [event.clientX, event.clientY];\n        var deltaCoordinates = [\n            currentCoordinates[0] - this.lastCoordinates[0],\n            currentCoordinates[1] - this.lastCoordinates[1],\n        ];\n        var offsetCoordinates = [\n            currentCoordinates[0] - this.activationCoordinates[0],\n            currentCoordinates[1] - this.activationCoordinates[1],\n        ];\n        var data = {\n            activation: this.activationCoordinates,\n            current: currentCoordinates,\n            delta: deltaCoordinates,\n            last: this.lastCoordinates,\n            offset: offsetCoordinates,\n        };\n        this.lastCoordinates = [event.clientX, event.clientY];\n        return data;\n    };\n    DragEvents.prototype.maybeAlterEventChain = function (event) {\n        if (this.handler.preventDefault) {\n            event.preventDefault();\n        }\n        if (this.handler.stopPropagation) {\n            event.stopPropagation();\n        }\n    };\n    return DragEvents;\n}());\nDragEvents.DOUBLE_CLICK_TIMEOUT_MSEC = 500;\nexports.DragEvents = DragEvents;\n\n//# sourceMappingURL=dragEvents.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/interactions/dragEvents.js\n// module id = 17\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar Classes = require(\"../../common/classes\");\nvar truncatedFormat_1 = require(\"./truncatedFormat\");\nvar JSONFormat = (function (_super) {\n    tslib_1.__extends(JSONFormat, _super);\n    function JSONFormat() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    JSONFormat.prototype.render = function () {\n        var _a = this.props, children = _a.children, omitQuotesOnStrings = _a.omitQuotesOnStrings, stringify = _a.stringify;\n        var showPopover = this.props.showPopover;\n        // always hide popover if value is nully\n        var isNully = children == null;\n        if (isNully) {\n            showPopover = truncatedFormat_1.TruncatedPopoverMode.NEVER;\n        }\n        var className = classNames(this.props.className, (_b = {},\n            _b[Classes.TABLE_NULL] = isNully,\n            _b));\n        var displayValue = \"\";\n        if (omitQuotesOnStrings && typeof children === \"string\") {\n            displayValue = children;\n        }\n        else {\n            displayValue = stringify(children);\n        }\n        return (React.createElement(truncatedFormat_1.TruncatedFormat, tslib_1.__assign({}, this.props, { className: className, showPopover: showPopover }), displayValue));\n        var _b;\n    };\n    return JSONFormat;\n}(React.Component));\nJSONFormat.defaultProps = {\n    detectTruncation: true,\n    omitQuotesOnStrings: true,\n    showPopover: truncatedFormat_1.TruncatedPopoverMode.WHEN_TRUNCATED,\n    stringify: function (obj) { return (JSON.stringify(obj, null, 2)); },\n};\nexports.JSONFormat = JSONFormat;\n\n//# sourceMappingURL=jsonFormat.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/cell/formats/jsonFormat.js\n// module id = 18\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar classNames = require(\"classnames\");\nvar PureRender = require(\"pure-render-decorator\");\nvar React = require(\"react\");\nvar Classes = require(\"../../common/classes\");\n// amount in pixels that the content div width changes when truncated vs when\n// not truncated. Note: could be modified by styles\n// Note 2: this doesn't come from the width of the popover element, but the \"right\" style\n// on the div, which comes from styles\nvar CONTENT_DIV_WIDTH_DELTA = 25;\nvar TruncatedPopoverMode;\n(function (TruncatedPopoverMode) {\n    TruncatedPopoverMode[TruncatedPopoverMode[\"ALWAYS\"] = 0] = \"ALWAYS\";\n    TruncatedPopoverMode[TruncatedPopoverMode[\"NEVER\"] = 1] = \"NEVER\";\n    TruncatedPopoverMode[TruncatedPopoverMode[\"WHEN_TRUNCATED\"] = 2] = \"WHEN_TRUNCATED\";\n})(TruncatedPopoverMode = exports.TruncatedPopoverMode || (exports.TruncatedPopoverMode = {}));\nvar TruncatedFormat = (function (_super) {\n    tslib_1.__extends(TruncatedFormat, _super);\n    function TruncatedFormat() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { isTruncated: false };\n        _this.handleContentDivRef = function (ref) { return _this.contentDiv = ref; };\n        return _this;\n    }\n    TruncatedFormat.prototype.render = function () {\n        var _a = this.props, children = _a.children, detectTruncation = _a.detectTruncation, preformatted = _a.preformatted, truncateLength = _a.truncateLength, truncationSuffix = _a.truncationSuffix;\n        var content = \"\" + children;\n        var cellContent = content;\n        if (!detectTruncation && truncateLength > 0 && cellContent.length > truncateLength) {\n            cellContent = cellContent.substring(0, truncateLength) + truncationSuffix;\n        }\n        if (this.shouldShowPopover(content)) {\n            var popoverClasses = classNames(Classes.TABLE_TRUNCATED_POPOVER, preformatted ? Classes.TABLE_POPOVER_WHITESPACE_PRE : Classes.TABLE_POPOVER_WHITESPACE_NORMAL);\n            var popoverContent = React.createElement(\"div\", { className: popoverClasses }, children);\n            var className = classNames(this.props.className, Classes.TABLE_TRUNCATED_FORMAT);\n            var constraints = [{\n                    attachment: \"together\",\n                    to: \"window\",\n                }];\n            return (React.createElement(\"div\", { className: className },\n                React.createElement(\"div\", { className: Classes.TABLE_TRUNCATED_VALUE, ref: this.handleContentDivRef }, cellContent),\n                React.createElement(core_1.Popover, { className: Classes.TABLE_TRUNCATED_POPOVER_TARGET, tetherOptions: { constraints: constraints }, content: popoverContent, position: core_1.Position.BOTTOM, useSmartArrowPositioning: true },\n                    React.createElement(core_1.Icon, { iconName: \"more\" }))));\n        }\n        else {\n            var className = classNames(this.props.className, Classes.TABLE_TRUNCATED_FORMAT_TEXT);\n            return React.createElement(\"div\", { className: className, ref: this.handleContentDivRef }, cellContent);\n        }\n    };\n    TruncatedFormat.prototype.componentDidMount = function () {\n        this.setTruncationState();\n    };\n    TruncatedFormat.prototype.componentDidUpdate = function () {\n        this.setTruncationState();\n    };\n    TruncatedFormat.prototype.shouldShowPopover = function (content) {\n        var _a = this.props, detectTruncation = _a.detectTruncation, showPopover = _a.showPopover, truncateLength = _a.truncateLength;\n        switch (showPopover) {\n            case TruncatedPopoverMode.ALWAYS:\n                return true;\n            case TruncatedPopoverMode.NEVER:\n                return false;\n            case TruncatedPopoverMode.WHEN_TRUNCATED:\n                return detectTruncation\n                    ? this.state.isTruncated\n                    : (truncateLength > 0 && content.length > truncateLength);\n            default:\n                return false;\n        }\n    };\n    TruncatedFormat.prototype.setTruncationState = function () {\n        if (!this.props.detectTruncation || this.props.showPopover !== TruncatedPopoverMode.WHEN_TRUNCATED) {\n            return;\n        }\n        if (this.contentDiv === undefined) {\n            this.setState({ isTruncated: false });\n            return;\n        }\n        var isTruncated = this.state.isTruncated;\n        // take all measurements at once to avoid excessive DOM reflows.\n        var _a = this.contentDiv, containerHeight = _a.clientHeight, containerWidth = _a.clientWidth, actualContentHeight = _a.scrollHeight, contentWidth = _a.scrollWidth;\n        // if the content is truncated, then a popover handle will be present as a\n        // sibling of the content. we don't want to consider that handle when\n        // calculating the width of the actual content, so subtract it.\n        var actualContentWidth = isTruncated\n            ? contentWidth - CONTENT_DIV_WIDTH_DELTA\n            : contentWidth;\n        // we of course truncate the content if it doesn't fit in the container. but we\n        // also aggressively truncate if they're the same size with truncation enabled;\n        // this addresses browser-crashing stack-overflow bugs at various zoom levels.\n        // (see: https://github.com/palantir/blueprint/pull/1519)\n        var shouldTruncate = (isTruncated && actualContentWidth === containerWidth)\n            || actualContentWidth > containerWidth\n            || actualContentHeight > containerHeight;\n        this.setState({ isTruncated: shouldTruncate });\n    };\n    return TruncatedFormat;\n}(React.Component));\nTruncatedFormat.defaultProps = {\n    detectTruncation: true,\n    preformatted: false,\n    showPopover: TruncatedPopoverMode.WHEN_TRUNCATED,\n    truncateLength: 80,\n    truncationSuffix: \"...\",\n};\nTruncatedFormat = tslib_1.__decorate([\n    PureRender\n], TruncatedFormat);\nexports.TruncatedFormat = TruncatedFormat;\n\n//# sourceMappingURL=truncatedFormat.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/cell/formats/truncatedFormat.js\n// module id = 19\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar PureRender = require(\"pure-render-decorator\");\nvar React = require(\"react\");\nvar cell_1 = require(\"./cell/cell\");\nvar Column = (function (_super) {\n    tslib_1.__extends(Column, _super);\n    function Column() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Column;\n}(React.Component));\nColumn.defaultProps = {\n    renderCell: cell_1.emptyCellRenderer,\n};\nColumn = tslib_1.__decorate([\n    PureRender\n], Column);\nexports.Column = Column;\n\n//# sourceMappingURL=column.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/column.js\n// module id = 20\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar clipboard_1 = require(\"./clipboard\");\nexports.Clipboard = clipboard_1.Clipboard;\nvar grid_1 = require(\"./grid\");\nexports.Grid = grid_1.Grid;\nvar rect_1 = require(\"./rect\");\nexports.Rect = rect_1.Rect;\nvar renderMode_1 = require(\"./renderMode\");\nexports.RenderMode = renderMode_1.RenderMode;\nvar roundSize_1 = require(\"./roundSize\");\nexports.RoundSize = roundSize_1.RoundSize;\nvar utils_1 = require(\"./utils\");\nexports.Utils = utils_1.Utils;\n// NOTE: The following are not exported in the public API:\n// - Errors\n// - internal/\n\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/index.js\n// module id = 21\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* istanbul ignore next */\nexports.Clipboard = {\n    /**\n     * Overrides the inherited CSS of the element to make sure it is\n     * selectable. This method also makes the element pseudo-invisible.\n     */\n    applySelectableStyles: function (elem) {\n        elem.style.overflow = \"hidden\";\n        elem.style.height = \"0px\";\n        elem.style.setProperty(\"-webkit-user-select\", \"all\");\n        elem.style.setProperty(\"-moz-user-select\", \"all\");\n        elem.style.setProperty(\"-ms-user-select\", \"all\");\n        elem.style.setProperty(\"user-select\", \"all\");\n        return elem;\n    },\n    /**\n     * Copies table cells to the clipboard. The parameter is a row-major\n     * 2-dimensional `Array` of strings and can contain nulls. We assume all\n     * rows are the same length. If not, the cells will still be copied, but\n     * the columns may not align. Returns a boolean indicating whether the\n     * copy succeeded.\n     *\n     * See `Clipboard.copy`\n     */\n    copyCells: function (cells) {\n        var table = document.createElement(\"table\");\n        exports.Clipboard.applySelectableStyles(table);\n        for (var _i = 0, cells_1 = cells; _i < cells_1.length; _i++) {\n            var row = cells_1[_i];\n            var tr = table.appendChild(document.createElement(\"tr\"));\n            for (var _a = 0, row_1 = row; _a < row_1.length; _a++) {\n                var cell = row_1[_a];\n                var td = tr.appendChild(document.createElement(\"td\"));\n                td.textContent = cell;\n            }\n        }\n        var tsv = cells.map(function (row) { return row.join(\"\\t\"); }).join(\"\\n\");\n        return exports.Clipboard.copyElement(table, tsv);\n    },\n    /**\n     * Copies the text to the clipboard. Returns a boolean\n     * indicating whether the copy succeeded.\n     *\n     * See `Clipboard.copy`\n     */\n    copyString: function (value) {\n        var text = document.createElement(\"textarea\");\n        exports.Clipboard.applySelectableStyles(text);\n        text.value = value;\n        return exports.Clipboard.copyElement(text, value);\n    },\n    /**\n     * Copies the element and its children to the clipboard. Returns a boolean\n     * indicating whether the copy succeeded.\n     *\n     * If a plaintext argument is supplied, we add both the text/html and\n     * text/plain mime types to the clipboard. This preserves the built in\n     * semantics of copying elements to the clipboard while allowing custom\n     * plaintext output for programs that can't cope with HTML data in the\n     * clipboard.\n     *\n     * Verified on Firefox 47, Chrome 51.\n     *\n     * Note: Sometimes the copy does not succeed. Presumably, in order to\n     * prevent memory issues, browsers will limit the total amount of data you\n     * can copy to the clipboard. Based on ad hoc testing, we found an\n     * inconsistent limit at about 300KB or 40,000 cells. Depending on the on\n     * the content of cells, your limits may vary.\n     */\n    copyElement: function (elem, plaintext) {\n        if (!exports.Clipboard.isCopySupported()) {\n            return false;\n        }\n        // must be document.body instead of document.documentElement for firefox\n        document.body.appendChild(elem);\n        try {\n            window.getSelection().selectAllChildren(elem);\n            if (plaintext != null) {\n                // add plaintext fallback\n                // http://stackoverflow.com/questions/23211018/copy-to-clipboard-with-jquery-js-in-chrome\n                elem.addEventListener(\"copy\", function (e) {\n                    e.preventDefault();\n                    var clipboardData = e.clipboardData || window.clipboardData;\n                    if (clipboardData != null) {\n                        clipboardData.setData(\"text/html\", elem.outerHTML);\n                        clipboardData.setData(\"text/plain\", plaintext);\n                    }\n                });\n            }\n            return document.execCommand(\"copy\");\n        }\n        catch (err) {\n            return false;\n        }\n        finally {\n            document.body.removeChild(elem);\n        }\n    },\n    /**\n     * Returns a boolean indicating whether the current browser nominally\n     * supports the `copy` operation using the `execCommand` API.\n     */\n    isCopySupported: function () {\n        return document.queryCommandSupported != null && document.queryCommandSupported(\"copy\");\n    },\n};\n\n//# sourceMappingURL=clipboard.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/clipboard.js\n// module id = 22\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar regions_1 = require(\"../regions\");\nvar Classes = require(\"./classes\");\nvar rect_1 = require(\"./rect\");\nvar utils_1 = require(\"./utils\");\n/**\n * This class manages the sizes of grid cells using arrays of individual row/column sizes.\n */\nvar Grid = (function () {\n    /**\n     * This constructor accumulates the heights and widths in `O(n)`, saving\n     * time in later calculations.\n     *\n     * @param bleed - The number of rows/cols that we expand beyond the\n     *     viewport (on all sides). This helps avoid displaying an empty\n     *     viewport when the user scrolls quickly.\n     */\n    function Grid(rowHeights, columnWidths, bleed, ghostHeight, ghostWidth) {\n        if (bleed === void 0) { bleed = Grid.DEFAULT_BLEED; }\n        if (ghostHeight === void 0) { ghostHeight = Grid.DEFAULT_GHOST_HEIGHT; }\n        if (ghostWidth === void 0) { ghostWidth = Grid.DEFAULT_GHOST_WIDTH; }\n        var _this = this;\n        this.getCumulativeWidthBefore = function (index) {\n            return (index === 0) ? 0 : _this.getCumulativeWidthAt(index - 1);\n        };\n        this.getCumulativeWidthAt = function (index) {\n            if (_this.numCols === 0) {\n                return _this.ghostWidth * index;\n            }\n            else if (index >= _this.numCols) {\n                return _this.cumulativeColumnWidths[_this.numCols - 1] + _this.ghostWidth * (index - _this.numCols + 1);\n            }\n            else {\n                return _this.cumulativeColumnWidths[index];\n            }\n        };\n        this.getCumulativeHeightBefore = function (index) {\n            return (index === 0) ? 0 : _this.getCumulativeHeightAt(index - 1);\n        };\n        this.getCumulativeHeightAt = function (index) {\n            if (_this.numRows === 0) {\n                return _this.ghostHeight * index;\n            }\n            else if (index >= _this.numRows) {\n                return _this.cumulativeRowHeights[_this.numRows - 1] + _this.ghostHeight * (index - _this.numRows + 1);\n            }\n            else {\n                return _this.cumulativeRowHeights[index];\n            }\n        };\n        this.columnWidths = columnWidths;\n        this.rowHeights = rowHeights;\n        this.cumulativeColumnWidths = utils_1.Utils.accumulate(columnWidths);\n        this.cumulativeRowHeights = utils_1.Utils.accumulate(rowHeights);\n        this.numCols = columnWidths.length;\n        this.numRows = rowHeights.length;\n        this.bleed = bleed;\n        this.ghostHeight = ghostHeight;\n        this.ghostWidth = ghostWidth;\n    }\n    /**\n     * Returns the `Rect` bounds of a cell in scrollpane client space.\n     *\n     * Scrollpane client coordinate space uses the origin of the scrollpane\n     * client (the inside part that you're moving around).\n     *\n     * For example, let's say you're scrolling around a block of 1000 x 1000\n     * cells. Regardless where you've scrolled, the first cell is always at\n     * 0,0 in scrollpane client space. the cell to the right of it is always\n     * at, e.g., 100,0.\n     */\n    Grid.prototype.getCellRect = function (rowIndex, columnIndex) {\n        var height = this.rowHeights[rowIndex];\n        var top = this.cumulativeRowHeights[rowIndex] - height;\n        var width = this.columnWidths[columnIndex];\n        var left = this.cumulativeColumnWidths[columnIndex] - width;\n        return new rect_1.Rect(left, top, width, height);\n    };\n    /**\n     * Returns the `Rect` bounds of a cell in scrollpane client space.\n     *\n     * If the cell is beyond the bounds of the user-defined table cells, it is\n     * considered a \"ghost\" cell. If a width/height is not defined for that\n     * row/column, we use the default width/height.\n     */\n    Grid.prototype.getGhostCellRect = function (rowIndex, columnIndex) {\n        var left = 0;\n        var top = 0;\n        var width = 0;\n        var height = 0;\n        if (rowIndex >= this.rowHeights.length) {\n            height = this.ghostHeight;\n            top = this.getHeight() + this.ghostHeight * (rowIndex - this.numRows);\n        }\n        else {\n            height = this.rowHeights[rowIndex];\n            top = this.cumulativeRowHeights[rowIndex] - height;\n        }\n        if (columnIndex >= this.columnWidths.length) {\n            width = this.ghostWidth;\n            left = this.getWidth() + this.ghostWidth * (columnIndex - this.numCols);\n        }\n        else {\n            width = this.columnWidths[columnIndex];\n            left = this.cumulativeColumnWidths[columnIndex] - width;\n        }\n        return new rect_1.Rect(left, top, width, height);\n    };\n    /**\n     * Returns the `Rect` with the base coordinate and height of the specified row.\n     */\n    Grid.prototype.getRowRect = function (rowIndex) {\n        var height = this.rowHeights[rowIndex];\n        var top = this.cumulativeRowHeights[rowIndex] - height;\n        return new rect_1.Rect(0, top, this.getWidth(), height);\n    };\n    /**\n     * Returns the `Rect` with the base coordinate and width of the specified column.\n     */\n    Grid.prototype.getColumnRect = function (columnIndex) {\n        var width = this.columnWidths[columnIndex];\n        var left = this.cumulativeColumnWidths[columnIndex] - width;\n        return new rect_1.Rect(left, 0, width, this.getHeight());\n    };\n    /**\n     * Returns the total width of the entire grid\n     */\n    Grid.prototype.getWidth = function () {\n        return this.numCols === 0 ? 0 : this.cumulativeColumnWidths[this.numCols - 1];\n    };\n    /**\n     * Returns the total width of the entire grid\n     */\n    Grid.prototype.getHeight = function () {\n        return this.numRows === 0 ? 0 : this.cumulativeRowHeights[this.numRows - 1];\n    };\n    /**\n     * Returns the `Rect` bounds of entire grid\n     */\n    Grid.prototype.getRect = function () {\n        return new rect_1.Rect(0, 0, this.getWidth(), this.getHeight());\n    };\n    /**\n     * Maps each cell that intersects with the given `Rect` argument. The\n     * indices of iteration are extended in both directions by the integer\n     * `bleed` class property, then are clamped between 0 and the number of\n     * rows/columns.\n     *\n     * Uses a binary search for each of the 4 edges of the bounds, resulting\n     * in a runtime of `O(log(rows) + log(cols))` plus the `O(irows * icols)`\n     * iteration of intersecting cells.\n     */\n    Grid.prototype.mapCellsInRect = function (rect, callback) {\n        var results = [];\n        if (rect == null) {\n            return results;\n        }\n        var _a = this.getRowIndicesInRect(rect), rowIndexStart = _a.rowIndexStart, rowIndexEnd = _a.rowIndexEnd;\n        var _b = this.getColumnIndicesInRect(rect), columnIndexStart = _b.columnIndexStart, columnIndexEnd = _b.columnIndexEnd;\n        for (var rowIndex = rowIndexStart; rowIndex <= rowIndexEnd; rowIndex++) {\n            for (var columnIndex = columnIndexStart; columnIndex <= columnIndexEnd; columnIndex++) {\n                results.push(callback(rowIndex, columnIndex));\n            }\n        }\n        return results;\n    };\n    /**\n     * Maps each row that intersects with the given `Rect` argument.\n     *\n     * See Grid.mapCellsInRect for more details.\n     */\n    Grid.prototype.mapRowsInRect = function (rect, callback) {\n        var results = [];\n        if (rect == null) {\n            return results;\n        }\n        var _a = this.getRowIndicesInRect(rect), rowIndexStart = _a.rowIndexStart, rowIndexEnd = _a.rowIndexEnd;\n        for (var rowIndex = rowIndexStart; rowIndex <= rowIndexEnd; rowIndex++) {\n            results.push(callback(rowIndex));\n        }\n        return results;\n    };\n    /**\n     * Maps each column that intersects with the given `Rect` argument.\n     *\n     * See Grid.mapCellsInRect for more details.\n     */\n    Grid.prototype.mapColumnsInRect = function (rect, callback) {\n        var results = [];\n        if (rect == null) {\n            return results;\n        }\n        var _a = this.getColumnIndicesInRect(rect), columnIndexStart = _a.columnIndexStart, columnIndexEnd = _a.columnIndexEnd;\n        for (var columnIndex = columnIndexStart; columnIndex <= columnIndexEnd; columnIndex++) {\n            results.push(callback(columnIndex));\n        }\n        return results;\n    };\n    /**\n     * Returns the start and end indices of rows that intersect with the given\n     * `Rect` argument.\n     */\n    Grid.prototype.getRowIndicesInRect = function (rect, includeGhostCells, limit) {\n        if (includeGhostCells === void 0) { includeGhostCells = false; }\n        if (limit === void 0) { limit = Grid.DEFAULT_MAX_ROWS; }\n        if (rect == null) {\n            return { rowIndexEnd: 0, rowIndexStart: 0 };\n        }\n        var searchEnd = includeGhostCells ? Math.max(this.numRows, Grid.DEFAULT_MAX_ROWS) : this.numRows;\n        var _a = this.getIndicesInInterval(rect.top, rect.top + rect.height, searchEnd, !includeGhostCells, this.getCumulativeHeightAt), start = _a.start, end = _a.end;\n        var rowIndexEnd = (limit > 0 && end - start > limit)\n            ? start + limit\n            : end;\n        return {\n            rowIndexEnd: rowIndexEnd,\n            rowIndexStart: start,\n        };\n    };\n    /**\n     * Returns the start and end indices of columns that intersect with the\n     * given `Rect` argument.\n     */\n    Grid.prototype.getColumnIndicesInRect = function (rect, includeGhostCells, limit) {\n        if (includeGhostCells === void 0) { includeGhostCells = false; }\n        if (limit === void 0) { limit = Grid.DEFAULT_MAX_COLUMNS; }\n        if (rect == null) {\n            return { columnIndexEnd: 0, columnIndexStart: 0 };\n        }\n        var searchEnd = includeGhostCells ? Math.max(this.numCols, Grid.DEFAULT_MAX_COLUMNS) : this.numCols;\n        var _a = this.getIndicesInInterval(rect.left, rect.left + rect.width, searchEnd, !includeGhostCells, this.getCumulativeWidthAt), start = _a.start, end = _a.end;\n        var columnIndexEnd = (limit > 0 && end - start > limit)\n            ? start + limit\n            : end;\n        return {\n            columnIndexEnd: columnIndexEnd,\n            columnIndexStart: start,\n        };\n    };\n    Grid.prototype.isGhostIndex = function (rowIndex, columnIndex) {\n        return (rowIndex >= this.numRows || columnIndex >= this.numCols);\n    };\n    Grid.prototype.getExtremaClasses = function (rowIndex, columnIndex, rowEnd, columnEnd) {\n        if (rowIndex === rowEnd && columnIndex === columnEnd) {\n            return [Classes.TABLE_LAST_IN_COLUMN, Classes.TABLE_LAST_IN_ROW];\n        }\n        if (rowIndex === rowEnd) {\n            return [Classes.TABLE_LAST_IN_COLUMN];\n        }\n        if (columnIndex === columnEnd) {\n            return [Classes.TABLE_LAST_IN_ROW];\n        }\n        return [];\n    };\n    Grid.prototype.getRegionStyle = function (region) {\n        var cardinality = regions_1.Regions.getRegionCardinality(region);\n        switch (cardinality) {\n            case regions_1.RegionCardinality.CELLS: {\n                var _a = region.rows, rowStart = _a[0], rowEnd = _a[1];\n                var _b = region.cols, colStart = _b[0], colEnd = _b[1];\n                // if the region is outside the bounds of the table, don't display it\n                if (this.isGhostIndex(rowStart, colStart) || this.isGhostIndex(rowEnd, colEnd)) {\n                    return { display: \"none\" };\n                }\n                var cellRect0 = this.getCellRect(rowStart, colStart);\n                var cellRect1 = this.getCellRect(rowEnd, colEnd);\n                var offsetLeft = colStart === 0 ? 0 : 1;\n                var offsetTop = rowStart === 0 ? 0 : 1;\n                var rect = cellRect0.union(cellRect1);\n                rect.height += offsetTop;\n                rect.left -= offsetLeft;\n                rect.width += offsetLeft;\n                rect.top -= offsetTop;\n                return tslib_1.__assign({}, rect.style(), { display: \"block\" });\n            }\n            case regions_1.RegionCardinality.FULL_COLUMNS: {\n                var _c = region.cols, colStart = _c[0], colEnd = _c[1];\n                // if the region is outside the bounds of the table, don't display it\n                if (this.isGhostIndex(0, colStart) || this.isGhostIndex(0, colEnd)) {\n                    return { display: \"none\" };\n                }\n                var cellRect0 = this.getCellRect(0, colStart);\n                var cellRect1 = this.getCellRect(0, colEnd);\n                var rect = cellRect0.union(cellRect1);\n                var offsetLeft = colStart === 0 ? 0 : 1;\n                return {\n                    bottom: 0,\n                    display: \"block\",\n                    left: rect.left - offsetLeft,\n                    top: 0,\n                    width: rect.width + offsetLeft,\n                };\n            }\n            case regions_1.RegionCardinality.FULL_ROWS: {\n                var _d = region.rows, rowStart = _d[0], rowEnd = _d[1];\n                // if the region is outside the bounds of the table, don't display it\n                if (this.isGhostIndex(rowStart, 0) || this.isGhostIndex(rowEnd, 0)) {\n                    return { display: \"none\" };\n                }\n                var cellRect0 = this.getCellRect(rowStart, 0);\n                var cellRect1 = this.getCellRect(rowEnd, 0);\n                var rect = cellRect0.union(cellRect1);\n                var offsetTop = rowStart === 0 ? 0 : 1;\n                return {\n                    display: \"block\",\n                    height: rect.height + offsetTop,\n                    left: 0,\n                    right: 0,\n                    top: rect.top - offsetTop,\n                };\n            }\n            case regions_1.RegionCardinality.FULL_TABLE:\n                return {\n                    bottom: 0,\n                    display: \"block\",\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                };\n            default: return { display: \"none\" };\n        }\n    };\n    Grid.prototype.getIndicesInInterval = function (min, max, count, useEndBleed, lookup) {\n        var start = utils_1.Utils.binarySearch(min, count - 1, lookup);\n        var end = utils_1.Utils.binarySearch(max, count - 1, lookup);\n        // correct exact pixel alignment\n        if (start >= 0 && min === lookup(start)) {\n            start += 1;\n        }\n        // apply bounded bleeds\n        start = Math.max(0, start - this.bleed);\n        if (useEndBleed) {\n            end = Math.min(count - 1, end + this.bleed);\n        }\n        else {\n            end = Math.min(count - 1, end);\n        }\n        return { start: start, end: end };\n    };\n    return Grid;\n}());\nGrid.DEFAULT_BLEED = 3;\nGrid.DEFAULT_MAX_COLUMNS = 50;\nGrid.DEFAULT_MAX_ROWS = 200;\nGrid.DEFAULT_GHOST_HEIGHT = 20;\nGrid.DEFAULT_GHOST_WIDTH = 150;\nexports.Grid = Grid;\n\n//# sourceMappingURL=grid.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/grid.js\n// module id = 23\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Classes = require(\"./common/classes\");\nvar utils_1 = require(\"./common/utils\");\n/**\n * `Region`s contain sets of cells. Additionally, a distinction is drawn, for\n * example, between all cells within a column and the whole column itself.\n * The `RegionCardinality` enum represents these distinct types of `Region`s.\n */\nvar RegionCardinality;\n(function (RegionCardinality) {\n    /**\n     * A region that contains a finite rectangular group of table cells\n     */\n    RegionCardinality[RegionCardinality[\"CELLS\"] = 0] = \"CELLS\";\n    /**\n     * A region that represents all cells within 1 or more rows.\n     */\n    RegionCardinality[RegionCardinality[\"FULL_ROWS\"] = 1] = \"FULL_ROWS\";\n    /**\n     * A region that represents all cells within 1 or more columns.\n     */\n    RegionCardinality[RegionCardinality[\"FULL_COLUMNS\"] = 2] = \"FULL_COLUMNS\";\n    /**\n     * A region that represents all cells in the table.\n     */\n    RegionCardinality[RegionCardinality[\"FULL_TABLE\"] = 3] = \"FULL_TABLE\";\n})(RegionCardinality = exports.RegionCardinality || (exports.RegionCardinality = {}));\n/**\n * A convenience object for subsets of `RegionCardinality` that are commonly\n * used as the `selectionMode` prop of the `<Table>`.\n */\nexports.SelectionModes = {\n    ALL: [\n        RegionCardinality.FULL_TABLE,\n        RegionCardinality.FULL_COLUMNS,\n        RegionCardinality.FULL_ROWS,\n        RegionCardinality.CELLS,\n    ],\n    COLUMNS_AND_CELLS: [\n        RegionCardinality.FULL_COLUMNS,\n        RegionCardinality.CELLS,\n    ],\n    COLUMNS_ONLY: [\n        RegionCardinality.FULL_COLUMNS,\n    ],\n    NONE: [],\n    ROWS_AND_CELLS: [\n        RegionCardinality.FULL_ROWS,\n        RegionCardinality.CELLS,\n    ],\n    ROWS_ONLY: [\n        RegionCardinality.FULL_ROWS,\n    ],\n};\nexports.ColumnLoadingOption = {\n    CELLS: \"cells\",\n    HEADER: \"column-header\",\n};\nexports.RowLoadingOption = {\n    CELLS: \"cells\",\n    HEADER: \"row-header\",\n};\nexports.TableLoadingOption = {\n    CELLS: \"cells\",\n    COLUMN_HEADERS: exports.ColumnLoadingOption.HEADER,\n    ROW_HEADERS: exports.RowLoadingOption.HEADER,\n};\nvar Regions = (function () {\n    function Regions() {\n    }\n    /**\n     * Determines the cardinality of a region. We use null values to indicate\n     * an unbounded interval. Therefore, an example of a region containing the\n     * second and third columns would be:\n     *\n     *     {\n     *         rows: null,\n     *         cols: [1, 2]\n     *     }\n     *\n     * In this case, this method would return `RegionCardinality.FULL_COLUMNS`.\n     *\n     * If both rows and columns are unbounded, then the region covers the\n     * entire table. Therefore, a region like this:\n     *\n     *     {\n     *         rows: null,\n     *         cols: null\n     *     }\n     *\n     * will return `RegionCardinality.FULL_TABLE`.\n     *\n     * An example of a region containing a single cell in the table would be:\n     *\n     *     {\n     *         rows: [5, 5],\n     *         cols: [2, 2]\n     *     }\n     *\n     * In this case, this method would return `RegionCardinality.CELLS`.\n     */\n    Regions.getRegionCardinality = function (region) {\n        if (region.cols != null && region.rows != null) {\n            return RegionCardinality.CELLS;\n        }\n        else if (region.cols != null) {\n            return RegionCardinality.FULL_COLUMNS;\n        }\n        else if (region.rows != null) {\n            return RegionCardinality.FULL_ROWS;\n        }\n        else {\n            return RegionCardinality.FULL_TABLE;\n        }\n    };\n    Regions.getFocusCellCoordinatesFromRegion = function (region) {\n        var regionCardinality = Regions.getRegionCardinality(region);\n        switch (regionCardinality) {\n            case RegionCardinality.FULL_TABLE:\n                return { col: 0, row: 0 };\n            case RegionCardinality.FULL_COLUMNS:\n                return { col: region.cols[0], row: 0 };\n            case RegionCardinality.FULL_ROWS:\n                return { col: 0, row: region.rows[0] };\n            case RegionCardinality.CELLS:\n                return { col: region.cols[0], row: region.rows[0] };\n            default:\n                return null;\n        }\n    };\n    /**\n     * Returns a region containing one or more cells.\n     */\n    Regions.cell = function (row, col, row2, col2) {\n        return {\n            cols: this.normalizeInterval(col, col2),\n            rows: this.normalizeInterval(row, row2),\n        };\n    };\n    /**\n     * Returns a region containing one or more full rows.\n     */\n    Regions.row = function (row, row2) {\n        return { rows: this.normalizeInterval(row, row2) };\n    };\n    /**\n     * Returns a region containing one or more full columns.\n     */\n    Regions.column = function (col, col2) {\n        return { cols: this.normalizeInterval(col, col2) };\n    };\n    /**\n     * Returns a region containing the entire table.\n     */\n    Regions.table = function () {\n        return {};\n    };\n    /**\n     * Adds the region to the end of a cloned copy of the supplied region\n     * array.\n     */\n    Regions.add = function (regions, region) {\n        var copy = regions.slice();\n        copy.push(region);\n        return copy;\n    };\n    /**\n     * Replaces the region at the end of a cloned copy of the supplied region\n     * array.\n     */\n    Regions.update = function (regions, region) {\n        var copy = regions.slice();\n        copy.pop();\n        copy.push(region);\n        return copy;\n    };\n    /**\n     * Returns true iff the specified region is equal to the last region in\n     * the region list. This allows us to avoid immediate additive re-selection.\n     */\n    Regions.lastRegionIsEqual = function (regions, region) {\n        if (regions == null || regions.length === 0) {\n            return false;\n        }\n        var lastRegion = regions[regions.length - 1];\n        return Regions.regionsEqual(lastRegion, region);\n    };\n    /**\n     * Returns the index of the region that is equal to the supplied\n     * parameter. Returns -1 if no such region is found.\n     */\n    Regions.findMatchingRegion = function (regions, region) {\n        if (regions == null) {\n            return -1;\n        }\n        for (var i = 0; i < regions.length; i++) {\n            if (Regions.regionsEqual(regions[i], region)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * Returns the index of the region that wholly contains the supplied\n     * parameter. Returns -1 if no such region is found.\n     */\n    Regions.findContainingRegion = function (regions, region) {\n        if (regions == null) {\n            return -1;\n        }\n        for (var i = 0; i < regions.length; i++) {\n            if (Regions.regionContains(regions[i], region)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * Returns true if the regions contain a region that has FULL_COLUMNS\n     * cardinality and contains the specified column index.\n     */\n    Regions.hasFullColumn = function (regions, col) {\n        if (regions == null) {\n            return false;\n        }\n        for (var _i = 0, regions_1 = regions; _i < regions_1.length; _i++) {\n            var region = regions_1[_i];\n            var cardinality = Regions.getRegionCardinality(region);\n            if (cardinality === RegionCardinality.FULL_TABLE) {\n                return true;\n            }\n            if (cardinality === RegionCardinality.FULL_COLUMNS && Regions.intervalContainsIndex(region.cols, col)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Returns true if the regions contain a region that has FULL_ROWS\n     * cardinality and contains the specified row index.\n     */\n    Regions.hasFullRow = function (regions, row) {\n        if (regions == null) {\n            return false;\n        }\n        for (var _i = 0, regions_2 = regions; _i < regions_2.length; _i++) {\n            var region = regions_2[_i];\n            var cardinality = Regions.getRegionCardinality(region);\n            if (cardinality === RegionCardinality.FULL_TABLE) {\n                return true;\n            }\n            if (cardinality === RegionCardinality.FULL_ROWS && Regions.intervalContainsIndex(region.rows, row)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Returns true if the regions contain a region that has FULL_TABLE cardinality\n     */\n    Regions.hasFullTable = function (regions) {\n        if (regions == null) {\n            return false;\n        }\n        for (var _i = 0, regions_3 = regions; _i < regions_3.length; _i++) {\n            var region = regions_3[_i];\n            var cardinality = Regions.getRegionCardinality(region);\n            if (cardinality === RegionCardinality.FULL_TABLE) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Returns true if the regions fully contain the query region.\n     */\n    Regions.containsRegion = function (regions, query) {\n        return Regions.overlapsRegion(regions, query, false);\n    };\n    /**\n     * Returns true if the regions at least partially overlap the query region.\n     */\n    Regions.overlapsRegion = function (regions, query, allowPartialOverlap) {\n        if (allowPartialOverlap === void 0) { allowPartialOverlap = false; }\n        var intervalCompareFn = allowPartialOverlap ? Regions.intervalOverlaps : Regions.intervalContains;\n        if (regions == null || query == null) {\n            return false;\n        }\n        for (var _i = 0, regions_4 = regions; _i < regions_4.length; _i++) {\n            var region = regions_4[_i];\n            var cardinality = Regions.getRegionCardinality(region);\n            switch (cardinality) {\n                case RegionCardinality.FULL_TABLE:\n                    return true;\n                case RegionCardinality.FULL_COLUMNS:\n                    if (intervalCompareFn(region.cols, query.cols)) {\n                        return true;\n                    }\n                    continue;\n                case RegionCardinality.FULL_ROWS:\n                    if (intervalCompareFn(region.rows, query.rows)) {\n                        return true;\n                    }\n                    continue;\n                case RegionCardinality.CELLS:\n                    if (intervalCompareFn(region.cols, query.cols)\n                        && intervalCompareFn(region.rows, query.rows)) {\n                        return true;\n                    }\n                    continue;\n                default:\n                    break;\n            }\n        }\n        return false;\n    };\n    Regions.eachUniqueFullColumn = function (regions, iteratee) {\n        if (regions == null || regions.length === 0 || iteratee == null) {\n            return;\n        }\n        var seen = {};\n        regions.forEach(function (region) {\n            if (Regions.getRegionCardinality(region) === RegionCardinality.FULL_COLUMNS) {\n                var _a = region.cols, start = _a[0], end = _a[1];\n                for (var col = start; col <= end; col++) {\n                    if (!seen[col]) {\n                        seen[col] = true;\n                        iteratee(col);\n                    }\n                }\n            }\n        });\n    };\n    Regions.eachUniqueFullRow = function (regions, iteratee) {\n        if (regions == null || regions.length === 0 || iteratee == null) {\n            return;\n        }\n        var seen = {};\n        regions.forEach(function (region) {\n            if (Regions.getRegionCardinality(region) === RegionCardinality.FULL_ROWS) {\n                var _a = region.rows, start = _a[0], end = _a[1];\n                for (var row = start; row <= end; row++) {\n                    if (!seen[row]) {\n                        seen[row] = true;\n                        iteratee(row);\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Using the supplied array of non-contiguous `IRegion`s, this method\n     * returns an ordered array of every unique cell that exists in those\n     * regions.\n     */\n    Regions.enumerateUniqueCells = function (regions, numRows, numCols) {\n        if (regions == null || regions.length === 0) {\n            return [];\n        }\n        var seen = {};\n        var list = [];\n        for (var _i = 0, regions_5 = regions; _i < regions_5.length; _i++) {\n            var region = regions_5[_i];\n            Regions.eachCellInRegion(region, numRows, numCols, function (row, col) {\n                // add to list if not seen\n                var key = row + \"-\" + col;\n                if (seen[key] !== true) {\n                    seen[key] = true;\n                    list.push([row, col]);\n                }\n            });\n        }\n        // sort list by rows then columns\n        list.sort(Regions.rowFirstComparator);\n        return list;\n    };\n    /**\n     * Using the supplied region, returns an \"equivalent\" region of\n     * type CELLS that define the bounds of the given region\n     */\n    Regions.getCellRegionFromRegion = function (region, numRows, numCols) {\n        var regionCardinality = Regions.getRegionCardinality(region);\n        switch (regionCardinality) {\n            case RegionCardinality.FULL_TABLE:\n                return Regions.cell(0, 0, numRows - 1, numCols - 1);\n            case RegionCardinality.FULL_COLUMNS:\n                return Regions.cell(0, region.cols[0], numRows - 1, region.cols[1]);\n            case RegionCardinality.FULL_ROWS:\n                return Regions.cell(region.rows[0], 0, region.rows[1], numCols - 1);\n            case RegionCardinality.CELLS:\n                return Regions.cell(region.rows[0], region.cols[0], region.rows[1], region.cols[1]);\n            default:\n                return null;\n        }\n    };\n    /**\n     * Maps a dense array of cell coordinates to a sparse 2-dimensional array\n     * of cell values.\n     *\n     * We create a new 2-dimensional array representing the smallest single\n     * contiguous `IRegion` that contains all cells in the supplied array. We\n     * invoke the mapper callback only on the cells in the supplied coordinate\n     * array and store the result. Returns the resulting 2-dimensional array.\n     */\n    Regions.sparseMapCells = function (cells, mapper) {\n        var bounds = Regions.getBoundingRegion(cells);\n        if (bounds == null) {\n            return null;\n        }\n        var numRows = bounds.rows[1] + 1 - bounds.rows[0];\n        var numCols = bounds.cols[1] + 1 - bounds.cols[0];\n        var result = utils_1.Utils.times(numRows, function () { return new Array(numCols); });\n        cells.forEach(function (_a) {\n            var row = _a[0], col = _a[1];\n            result[row - bounds.rows[0]][col - bounds.cols[0]] = mapper(row, col);\n        });\n        return result;\n    };\n    /**\n     * Returns the smallest single contiguous `IRegion` that contains all cells in the\n     * supplied array.\n     */\n    Regions.getBoundingRegion = function (cells) {\n        var minRow;\n        var maxRow;\n        var minCol;\n        var maxCol;\n        for (var _i = 0, cells_1 = cells; _i < cells_1.length; _i++) {\n            var _a = cells_1[_i], row = _a[0], col = _a[1];\n            minRow = (minRow == null || row < minRow) ? row : minRow;\n            maxRow = (maxRow == null || row > maxRow) ? row : maxRow;\n            minCol = (minCol == null || col < minCol) ? col : minCol;\n            maxCol = (maxCol == null || col > maxCol) ? col : maxCol;\n        }\n        if (minRow == null) {\n            return null;\n        }\n        return {\n            cols: [minCol, maxCol],\n            rows: [minRow, maxRow],\n        };\n    };\n    Regions.isValid = function (region) {\n        if (region == null) {\n            return false;\n        }\n        if ((region.rows != null) && (region.rows[0] < 0 || region.rows[1] < 0)) {\n            return false;\n        }\n        if ((region.cols != null) && (region.cols[0] < 0 || region.cols[1] < 0)) {\n            return false;\n        }\n        return true;\n    };\n    Regions.isRegionValidForTable = function (region, numRows, numCols) {\n        if (region.rows != null && (region.rows[0] >= numRows || region.rows[1] >= numRows)) {\n            return false;\n        }\n        if (region.cols != null && (region.cols[0] >= numCols || region.cols[1] >= numCols)) {\n            return false;\n        }\n        return true;\n    };\n    Regions.joinStyledRegionGroups = function (selectedRegions, otherRegions, focusedCell) {\n        var regionGroups = [];\n        if (otherRegions != null) {\n            regionGroups = regionGroups.concat(otherRegions);\n        }\n        if (selectedRegions != null && selectedRegions.length > 0) {\n            regionGroups.push({\n                className: Classes.TABLE_SELECTION_REGION,\n                regions: selectedRegions,\n            });\n        }\n        if (focusedCell != null) {\n            regionGroups.push({\n                className: Classes.TABLE_FOCUS_REGION,\n                regions: [Regions.cell(focusedCell.row, focusedCell.col)],\n            });\n        }\n        return regionGroups;\n    };\n    Regions.regionsEqual = function (regionA, regionB) {\n        return Regions.intervalsEqual(regionA.rows, regionB.rows)\n            && Regions.intervalsEqual(regionA.cols, regionB.cols);\n    };\n    /**\n     * Expands an old region to the minimal bounding region that also contains\n     * the new region. If the regions have different cardinalities, then the new\n     * region is returned. Useful for expanding a selected region on\n     * shift+click, for instance.\n     */\n    Regions.expandRegion = function (oldRegion, newRegion) {\n        var oldRegionCardinality = Regions.getRegionCardinality(oldRegion);\n        var newRegionCardinality = Regions.getRegionCardinality(newRegion);\n        if (newRegionCardinality !== oldRegionCardinality) {\n            return newRegion;\n        }\n        switch (newRegionCardinality) {\n            case RegionCardinality.FULL_ROWS: {\n                var rowStart = Math.min(oldRegion.rows[0], newRegion.rows[0]);\n                var rowEnd = Math.max(oldRegion.rows[1], newRegion.rows[1]);\n                return Regions.row(rowStart, rowEnd);\n            }\n            case RegionCardinality.FULL_COLUMNS: {\n                var colStart = Math.min(oldRegion.cols[0], newRegion.cols[0]);\n                var colEnd = Math.max(oldRegion.cols[1], newRegion.cols[1]);\n                return Regions.column(colStart, colEnd);\n            }\n            case RegionCardinality.CELLS: {\n                var rowStart = Math.min(oldRegion.rows[0], newRegion.rows[0]);\n                var colStart = Math.min(oldRegion.cols[0], newRegion.cols[0]);\n                var rowEnd = Math.max(oldRegion.rows[1], newRegion.rows[1]);\n                var colEnd = Math.max(oldRegion.cols[1], newRegion.cols[1]);\n                return Regions.cell(rowStart, colStart, rowEnd, colEnd);\n            }\n            default:\n                return Regions.table();\n        }\n    };\n    /**\n     * Iterates over the cells within an `IRegion`, invoking the callback with\n     * each cell's coordinates.\n     */\n    Regions.eachCellInRegion = function (region, numRows, numCols, iteratee) {\n        var cardinality = Regions.getRegionCardinality(region);\n        switch (cardinality) {\n            case RegionCardinality.FULL_TABLE:\n                for (var row = 0; row < numRows; row++) {\n                    for (var col = 0; col < numCols; col++) {\n                        iteratee(row, col);\n                    }\n                }\n                break;\n            case RegionCardinality.FULL_COLUMNS:\n                for (var row = 0; row < numRows; row++) {\n                    for (var col = region.cols[0]; col <= region.cols[1]; col++) {\n                        iteratee(row, col);\n                    }\n                }\n                break;\n            case RegionCardinality.FULL_ROWS:\n                for (var row = region.rows[0]; row <= region.rows[1]; row++) {\n                    for (var col = 0; col < numCols; col++) {\n                        iteratee(row, col);\n                    }\n                }\n                break;\n            case RegionCardinality.CELLS:\n                for (var row = region.rows[0]; row <= region.rows[1]; row++) {\n                    for (var col = region.cols[0]; col <= region.cols[1]; col++) {\n                        iteratee(row, col);\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n    };\n    Regions.regionContains = function (regionA, regionB) {\n        // containsRegion expects an array of regions as the first param\n        return Regions.overlapsRegion([regionA], regionB, false);\n    };\n    Regions.intervalsEqual = function (ivalA, ivalB) {\n        if (ivalA == null) {\n            return ivalB == null;\n        }\n        else if (ivalB == null) {\n            return false;\n        }\n        else {\n            return ivalA[0] === ivalB[0] && ivalA[1] === ivalB[1];\n        }\n    };\n    Regions.intervalContainsIndex = function (interval, index) {\n        if (interval == null) {\n            return false;\n        }\n        return interval[0] <= index && interval[1] >= index;\n    };\n    Regions.intervalContains = function (ivalA, ivalB) {\n        if (ivalA == null || ivalB == null) {\n            return false;\n        }\n        return ivalA[0] <= ivalB[0] && ivalB[1] <= ivalA[1];\n    };\n    Regions.intervalOverlaps = function (ivalA, ivalB) {\n        if (ivalA == null || ivalB == null) {\n            return false;\n        }\n        if (ivalA[1] < ivalB[0] || ivalA[0] > ivalB[1]) {\n            return false;\n        }\n        return true;\n    };\n    Regions.rowFirstComparator = function (a, b) {\n        var rowDiff = a[0] - b[0];\n        return rowDiff === 0 ? a[1] - b[1] : rowDiff;\n    };\n    Regions.numericalComparator = function (a, b) {\n        return a - b;\n    };\n    Regions.normalizeInterval = function (coord, coord2) {\n        if (coord2 == null) {\n            coord2 = coord;\n        }\n        var interval = [coord, coord2];\n        interval.sort(Regions.numericalComparator);\n        return interval;\n    };\n    return Regions;\n}());\nexports.Regions = Regions;\n\n//# sourceMappingURL=regions.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/regions.js\n// module id = 24\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// HACKHACK: workaround for https://github.com/palantir/tslint/issues/1768\n// tslint:disable adjacent-overload-signatures\n/**\n * A simple object for storing the client bounds of HTMLElements. Since\n * ClientRects are immutable, this object enables editing and some simple\n * manipulation methods.\n */\nvar Rect = (function () {\n    function Rect(left, top, width, height) {\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n    }\n    /**\n     * Returns the smallest Rect that entirely contains the supplied rects\n     */\n    Rect.union = function (anyRect0, anyRect1) {\n        var rect0 = Rect.wrap(anyRect0);\n        var rect1 = Rect.wrap(anyRect1);\n        var top = Math.min(rect0.top, rect1.top);\n        var left = Math.min(rect0.left, rect1.left);\n        var bottom = Math.max(rect0.top + rect0.height, rect1.top + rect1.height);\n        var right = Math.max(rect0.left + rect0.width, rect1.left + rect1.width);\n        var height = bottom - top;\n        var width = right - left;\n        return new Rect(left, top, width, height);\n    };\n    /**\n     * Returns a new Rect that subtracts the origin of the second argument\n     * from the first.\n     */\n    Rect.subtractOrigin = function (anyRect0, anyRect1) {\n        var rect0 = Rect.wrap(anyRect0);\n        var rect1 = Rect.wrap(anyRect1);\n        return new Rect(rect0.left - rect1.left, rect0.top - rect1.top, rect0.width, rect0.height);\n    };\n    /**\n     * Returns the CSS properties representing the absolute positioning of\n     * this Rect.\n     */\n    Rect.style = function (rect) {\n        return {\n            height: rect.height + \"px\",\n            left: rect.left + \"px\",\n            position: \"absolute\",\n            top: rect.top + \"px\",\n            width: rect.width + \"px\",\n        };\n    };\n    /**\n     * Given a ClientRect or Rect object, returns a Rect object.\n     */\n    Rect.wrap = function (rect) {\n        if (rect instanceof Rect) {\n            return rect;\n        }\n        else {\n            return new Rect(rect.left, rect.top, rect.width, rect.height);\n        }\n    };\n    Rect.prototype.subtractOrigin = function (anyRect) {\n        return Rect.subtractOrigin(this, anyRect);\n    };\n    Rect.prototype.union = function (anyRect) {\n        return Rect.union(this, anyRect);\n    };\n    Rect.prototype.style = function () {\n        return Rect.style(this);\n    };\n    Rect.prototype.sizeStyle = function () {\n        return {\n            height: this.height + \"px\",\n            width: this.width + \"px\",\n        };\n    };\n    Rect.prototype.containsX = function (clientX) {\n        return clientX >= this.left && clientX <= this.left + this.width;\n    };\n    Rect.prototype.containsY = function (clientY) {\n        return clientY >= this.top && clientY <= this.top + this.height;\n    };\n    Rect.prototype.equals = function (rect) {\n        return rect != null\n            && this.left === rect.left\n            && this.top === rect.top\n            && this.width === rect.width\n            && this.height === rect.height;\n    };\n    return Rect;\n}());\nRect.ORIGIN = new Rect(0, 0, 0, 0);\nexports.Rect = Rect;\n\n//# sourceMappingURL=rect.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/rect.js\n// module id = 25\n// module chunks = 0","/**\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved. Licensed\n * under the BSD-3 License as modified (the “License”); you may obtain a copy of\n * the license at https://github.com/palantir/blueprint/blob/master/LICENSE and\n * https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RenderMode;\n(function (RenderMode) {\n    /**\n     * Renders cells in batches across multiple animation frames. This improves\n     * performance by spreading out work to keep a high FPS and avoid blocking\n     * the UI, but it also introduces a noticeable scan-line rendering artifact\n     * as successive batches of cells finish rendering.\n     */\n    RenderMode[RenderMode[\"BATCH\"] = 0] = \"BATCH\";\n    /**\n     * Disables the batch-rendering behavior, rendering all cells synchronously\n     * at once. This may result in degraded performance on large tables and/or\n     * on tables with complex cells.\n     */\n    RenderMode[RenderMode[\"NONE\"] = 1] = \"NONE\";\n})(RenderMode = exports.RenderMode || (exports.RenderMode = {}));\n;\n\n//# sourceMappingURL=renderMode.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/renderMode.js\n// module id = 26\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar React = require(\"react\");\nvar Classes = require(\"./classes\");\n/**\n * A React component that measures and rounds the size of its only child. This\n * is necessary due to a Chrome bug that prevents scrolling when the size is\n * changed to a fractional value. See this JSFiddle for a repro of the issue:\n * https://jsfiddle.net/2rmz7p1d/5/\n */\nvar RoundSize = (function (_super) {\n    tslib_1.__extends(RoundSize, _super);\n    function RoundSize() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.setInternalRef = function (ref) { return _this.internalElement = ref; };\n        _this.setContainerRef = function (ref) { return _this.containerElement = ref; };\n        return _this;\n    }\n    RoundSize.prototype.render = function () {\n        return (React.createElement(\"div\", { className: Classes.TABLE_ROUNDED_LAYOUT, ref: this.setContainerRef },\n            React.createElement(\"div\", { className: Classes.TABLE_NO_LAYOUT, ref: this.setInternalRef }, React.Children.only(this.props.children))));\n    };\n    RoundSize.prototype.componentDidMount = function () {\n        this.copyRoundedSize();\n    };\n    RoundSize.prototype.componentDidUpdate = function () {\n        this.copyRoundedSize();\n    };\n    RoundSize.prototype.copyRoundedSize = function () {\n        if (this.internalElement == null || this.containerElement == null) {\n            return;\n        }\n        // measure the size of the internal children\n        var width = Math.round(this.internalElement.clientWidth) + \"px\";\n        var height = Math.round(this.internalElement.clientHeight) + \"px\";\n        // set the size of the container element with rounded values\n        this.containerElement.style.width = width;\n        this.containerElement.style.height = height;\n    };\n    return RoundSize;\n}(React.Component));\nexports.RoundSize = RoundSize;\n\n//# sourceMappingURL=roundSize.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/roundSize.js\n// module id = 27\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./copyCellsMenuItem\"));\n__export(require(\"./menuContext\"));\n\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/interactions/menus/index.js\n// module id = 28\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar PureRender = require(\"pure-render-decorator\");\nvar React = require(\"react\");\nvar clipboard_1 = require(\"../../common/clipboard\");\nvar regions_1 = require(\"../../regions\");\nvar CopyCellsMenuItem = (function (_super) {\n    tslib_1.__extends(CopyCellsMenuItem, _super);\n    function CopyCellsMenuItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClick = function () {\n            var _a = _this.props, context = _a.context, getCellData = _a.getCellData, onCopy = _a.onCopy;\n            var cells = context.getUniqueCells();\n            var sparse = regions_1.Regions.sparseMapCells(cells, getCellData);\n            var success = clipboard_1.Clipboard.copyCells(sparse);\n            if (onCopy != null) {\n                onCopy(success);\n            }\n        };\n        return _this;\n    }\n    CopyCellsMenuItem.prototype.render = function () {\n        return React.createElement(core_1.MenuItem, tslib_1.__assign({}, this.props, { onClick: this.handleClick }));\n    };\n    return CopyCellsMenuItem;\n}(React.Component));\nCopyCellsMenuItem = tslib_1.__decorate([\n    PureRender\n], CopyCellsMenuItem);\nexports.CopyCellsMenuItem = CopyCellsMenuItem;\n\n//# sourceMappingURL=copyCellsMenuItem.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/interactions/menus/copyCellsMenuItem.js\n// module id = 29\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar regions_1 = require(\"../../regions\");\nvar MenuContext = (function () {\n    function MenuContext(target, selectedRegions, numRows, numCols) {\n        this.target = target;\n        this.selectedRegions = selectedRegions;\n        this.numRows = numRows;\n        this.numCols = numCols;\n        this.regions = regions_1.Regions.overlapsRegion(selectedRegions, target) ? selectedRegions : [target];\n    }\n    MenuContext.prototype.getTarget = function () {\n        return this.target;\n    };\n    MenuContext.prototype.getSelectedRegions = function () {\n        return this.selectedRegions;\n    };\n    MenuContext.prototype.getRegions = function () {\n        return this.regions;\n    };\n    MenuContext.prototype.getUniqueCells = function () {\n        return regions_1.Regions.enumerateUniqueCells(this.regions, this.numRows, this.numCols);\n    };\n    return MenuContext;\n}());\nexports.MenuContext = MenuContext;\n\n//# sourceMappingURL=menuContext.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/interactions/menus/menuContext.js\n// module id = 30\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar classNames = require(\"classnames\");\nvar PureRender = require(\"pure-render-decorator\");\nvar React = require(\"react\");\nvar Classes = require(\"../common/classes\");\nvar draggable_1 = require(\"./draggable\");\nvar Orientation;\n(function (Orientation) {\n    Orientation[Orientation[\"HORIZONTAL\"] = 1] = \"HORIZONTAL\";\n    Orientation[Orientation[\"VERTICAL\"] = 0] = \"VERTICAL\";\n})(Orientation = exports.Orientation || (exports.Orientation = {}));\nvar ResizeHandle = (function (_super) {\n    tslib_1.__extends(ResizeHandle, _super);\n    function ResizeHandle() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            isDragging: false,\n        };\n        _this.handleActivate = function (event) {\n            _this.setState({ isDragging: true });\n            _this.props.onLayoutLock(true);\n            event.stopPropagation();\n            event.stopImmediatePropagation();\n            return true;\n        };\n        _this.handleDragMove = function (_event, coords) {\n            var orientationIndex = _this.props.orientation;\n            if (_this.props.onResizeMove != null) {\n                _this.props.onResizeMove(coords.offset[orientationIndex], coords.delta[orientationIndex]);\n            }\n        };\n        _this.handleDragEnd = function (_event, coords) {\n            var orientationIndex = _this.props.orientation;\n            _this.setState({ isDragging: false });\n            _this.props.onLayoutLock(false);\n            if (_this.props.onResizeMove != null) {\n                _this.props.onResizeMove(coords.offset[orientationIndex], coords.delta[orientationIndex]);\n            }\n            if (_this.props.onResizeEnd != null) {\n                _this.props.onResizeEnd(coords.offset[orientationIndex]);\n            }\n        };\n        _this.handleClick = function (_event) {\n            _this.setState({ isDragging: false });\n            _this.props.onLayoutLock(false);\n        };\n        _this.handleDoubleClick = function (_event) {\n            _this.setState({ isDragging: false });\n            _this.props.onLayoutLock(false);\n            if (_this.props.onDoubleClick != null) {\n                _this.props.onDoubleClick();\n            }\n        };\n        return _this;\n    }\n    ResizeHandle.prototype.render = function () {\n        var _a = this.props, onResizeMove = _a.onResizeMove, onResizeEnd = _a.onResizeEnd, onDoubleClick = _a.onDoubleClick, orientation = _a.orientation;\n        if (onResizeMove == null && onResizeEnd == null && onDoubleClick == null) {\n            return undefined;\n        }\n        var targetClasses = classNames(Classes.TABLE_RESIZE_HANDLE_TARGET, (_b = {},\n            _b[Classes.TABLE_DRAGGING] = this.state.isDragging,\n            _b[Classes.TABLE_RESIZE_HORIZONTAL] = orientation === Orientation.HORIZONTAL,\n            _b[Classes.TABLE_RESIZE_VERTICAL] = orientation === Orientation.VERTICAL,\n            _b));\n        var handleClasses = classNames(Classes.TABLE_RESIZE_HANDLE, (_c = {},\n            _c[Classes.TABLE_DRAGGING] = this.state.isDragging,\n            _c));\n        return (React.createElement(draggable_1.Draggable, { onActivate: this.handleActivate, onClick: this.handleClick, onDoubleClick: this.handleDoubleClick, onDragEnd: this.handleDragEnd, onDragMove: this.handleDragMove },\n            React.createElement(\"div\", { className: targetClasses },\n                React.createElement(\"div\", { className: handleClasses }))));\n        var _b, _c;\n    };\n    return ResizeHandle;\n}(React.Component));\nResizeHandle = tslib_1.__decorate([\n    PureRender\n], ResizeHandle);\nexports.ResizeHandle = ResizeHandle;\n\n//# sourceMappingURL=resizeHandle.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/interactions/resizeHandle.js\n// module id = 31\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar PureRender = require(\"pure-render-decorator\");\nvar React = require(\"react\");\nvar FocusedCellUtils = require(\"../common/internal/focusedCellUtils\");\nvar utils_1 = require(\"../common/utils\");\nvar dragEvents_1 = require(\"../interactions/dragEvents\");\nvar draggable_1 = require(\"../interactions/draggable\");\nvar regions_1 = require(\"../regions\");\nvar DragSelectable = (function (_super) {\n    tslib_1.__extends(DragSelectable, _super);\n    function DragSelectable() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.didExpandSelectionOnActivate = false;\n        _this.handleActivate = function (event) {\n            var _a = _this.props, locateClick = _a.locateClick, selectedRegions = _a.selectedRegions, selectedRegionTransform = _a.selectedRegionTransform;\n            if (_this.shouldIgnoreMouseDown(event)) {\n                return false;\n            }\n            var region = locateClick(event);\n            if (!regions_1.Regions.isValid(region)) {\n                return false;\n            }\n            if (selectedRegionTransform != null) {\n                region = selectedRegionTransform(region, event);\n            }\n            var foundIndex = regions_1.Regions.findMatchingRegion(selectedRegions, region);\n            var matchesExistingSelection = foundIndex !== -1;\n            if (matchesExistingSelection) {\n                _this.handleUpdateExistingSelection(foundIndex, event);\n                // no need to listen for subsequent drags\n                return false;\n            }\n            else if (_this.shouldExpandSelection(event)) {\n                _this.handleExpandSelection(region);\n            }\n            else if (_this.shouldAddDisjointSelection(event)) {\n                _this.handleAddDisjointSelection(region);\n            }\n            else {\n                _this.handleReplaceSelection(region);\n            }\n            return true;\n        };\n        _this.handleDragMove = function (event, coords) {\n            var _a = _this.props, allowMultipleSelection = _a.allowMultipleSelection, focusedCell = _a.focusedCell, locateClick = _a.locateClick, locateDrag = _a.locateDrag, selectedRegions = _a.selectedRegions, selectedRegionTransform = _a.selectedRegionTransform;\n            var region = allowMultipleSelection\n                ? locateDrag(event, coords, /* returnEndOnly? */ _this.didExpandSelectionOnActivate)\n                : locateClick(event);\n            if (!regions_1.Regions.isValid(region)) {\n                return;\n            }\n            else if (selectedRegionTransform != null) {\n                region = selectedRegionTransform(region, event, coords);\n            }\n            var nextSelectedRegions = _this.didExpandSelectionOnActivate\n                ? _this.expandSelectedRegions(selectedRegions, region, focusedCell)\n                : regions_1.Regions.update(selectedRegions, region);\n            _this.maybeInvokeSelectionCallback(nextSelectedRegions);\n            if (!allowMultipleSelection) {\n                // move the focused cell with the selected region\n                var lastIndex = nextSelectedRegions.length - 1;\n                var mostRecentRegion = nextSelectedRegions[lastIndex];\n                _this.invokeOnFocusCallbackForRegion(mostRecentRegion, lastIndex);\n            }\n        };\n        _this.handleDragEnd = function () {\n            _this.finishInteraction();\n        };\n        _this.handleClick = function () {\n            _this.finishInteraction();\n        };\n        // Boolean checks\n        // ==============\n        _this.shouldExpandSelection = function (event) {\n            var allowMultipleSelection = _this.props.allowMultipleSelection;\n            return allowMultipleSelection && event.shiftKey;\n        };\n        _this.shouldAddDisjointSelection = function (event) {\n            var allowMultipleSelection = _this.props.allowMultipleSelection;\n            return allowMultipleSelection && dragEvents_1.DragEvents.isAdditive(event);\n        };\n        // Update logic\n        // ============\n        _this.handleUpdateExistingSelection = function (selectedRegionIndex, event) {\n            var _a = _this.props, onSelection = _a.onSelection, selectedRegions = _a.selectedRegions;\n            if (dragEvents_1.DragEvents.isAdditive(event)) {\n                // remove just the clicked region, leaving other selected regions in place\n                var nextSelectedRegions = selectedRegions.slice();\n                nextSelectedRegions.splice(selectedRegionIndex, 1);\n                onSelection(nextSelectedRegions);\n                // if there are still any selections, move the focused cell to the\n                // most recent selection. otherwise, don't update it.\n                if (nextSelectedRegions.length > 0) {\n                    var lastIndex = nextSelectedRegions.length - 1;\n                    _this.invokeOnFocusCallbackForRegion(nextSelectedRegions[lastIndex], lastIndex);\n                }\n            }\n            else {\n                // clear all selections, but don't update the focused cell\n                onSelection([]);\n            }\n        };\n        _this.handleExpandSelection = function (region) {\n            var _a = _this.props, focusedCell = _a.focusedCell, onSelection = _a.onSelection, selectedRegions = _a.selectedRegions;\n            _this.didExpandSelectionOnActivate = true;\n            // there should be only one selected region after expanding. do not\n            // update the focused cell.\n            var nextSelectedRegions = _this.expandSelectedRegions(selectedRegions, region, focusedCell);\n            onSelection(nextSelectedRegions);\n            // move the focused cell into the new region if there were no selections before\n            if (selectedRegions == null || selectedRegions.length === 0) {\n                _this.invokeOnFocusCallbackForRegion(region);\n            }\n        };\n        _this.handleAddDisjointSelection = function (region) {\n            var _a = _this.props, onSelection = _a.onSelection, selectedRegions = _a.selectedRegions;\n            // add the new region to the existing selections\n            var nextSelectedRegions = regions_1.Regions.add(selectedRegions, region);\n            onSelection(nextSelectedRegions);\n            // put the focused cell in the new region\n            _this.invokeOnFocusCallbackForRegion(region, nextSelectedRegions.length - 1);\n        };\n        _this.handleReplaceSelection = function (region) {\n            var onSelection = _this.props.onSelection;\n            // clear all selections and retain only the new one\n            var nextSelectedRegions = [region];\n            onSelection(nextSelectedRegions);\n            // move the focused cell into the new selection\n            _this.invokeOnFocusCallbackForRegion(region);\n        };\n        _this.invokeOnFocusCallbackForRegion = function (focusRegion, focusSelectionIndex) {\n            if (focusSelectionIndex === void 0) { focusSelectionIndex = 0; }\n            var onFocus = _this.props.onFocus;\n            var focusedCellCoords = regions_1.Regions.getFocusCellCoordinatesFromRegion(focusRegion);\n            onFocus(FocusedCellUtils.toFullCoordinates(focusedCellCoords, focusSelectionIndex));\n        };\n        // Other\n        // =====\n        _this.finishInteraction = function () {\n            core_1.Utils.safeInvoke(_this.props.onSelectionEnd, _this.props.selectedRegions);\n            _this.didExpandSelectionOnActivate = false;\n        };\n        return _this;\n    }\n    DragSelectable.prototype.render = function () {\n        var draggableProps = this.getDraggableProps();\n        return (React.createElement(draggable_1.Draggable, tslib_1.__assign({}, draggableProps, { preventDefault: false }), this.props.children));\n    };\n    DragSelectable.prototype.getDraggableProps = function () {\n        return this.props.onSelection == null ? {} : {\n            onActivate: this.handleActivate,\n            onClick: this.handleClick,\n            onDragEnd: this.handleDragEnd,\n            onDragMove: this.handleDragMove,\n        };\n    };\n    DragSelectable.prototype.shouldIgnoreMouseDown = function (event) {\n        var _a = this.props.ignoredSelectors, ignoredSelectors = _a === void 0 ? [] : _a;\n        var element = event.target;\n        return !utils_1.Utils.isLeftClick(event)\n            || this.props.disabled\n            || ignoredSelectors.some(function (selector) { return element.closest(selector) != null; });\n    };\n    // Callbacks\n    // =========\n    DragSelectable.prototype.maybeInvokeSelectionCallback = function (nextSelectedRegions) {\n        var _a = this.props, onSelection = _a.onSelection, selectedRegions = _a.selectedRegions;\n        // invoke only if the selection changed. this is useful only on\n        // mousemove; there's special handling for mousedown interactions that\n        // target an already-selected region.\n        if (!utils_1.Utils.deepCompareKeys(selectedRegions, nextSelectedRegions)) {\n            onSelection(nextSelectedRegions);\n        }\n    };\n    DragSelectable.prototype.expandSelectedRegions = function (regions, region, focusedCell) {\n        if (regions.length === 0) {\n            return [region];\n        }\n        else if (focusedCell != null) {\n            var expandedRegion = FocusedCellUtils.expandFocusedRegion(focusedCell, region);\n            return regions_1.Regions.update(regions, expandedRegion);\n        }\n        else {\n            var expandedRegion = regions_1.Regions.expandRegion(regions[regions.length - 1], region);\n            return regions_1.Regions.update(regions, expandedRegion);\n        }\n    };\n    return DragSelectable;\n}(React.Component));\nDragSelectable.defaultProps = {\n    allowMultipleSelection: false,\n    disabled: false,\n    selectedRegions: [],\n};\nDragSelectable = tslib_1.__decorate([\n    PureRender\n], DragSelectable);\nexports.DragSelectable = DragSelectable;\n\n//# sourceMappingURL=selectable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/interactions/selectable.js\n// module id = 32\n// module chunks = 0","/**\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar regions_1 = require(\"../../regions\");\nvar Errors = require(\"../errors\");\n/**\n * Returns the proper focused cell for the given set of initial conditions.\n */\nfunction getInitialFocusedCell(enableFocus, focusedCellFromProps, focusedCellFromState, selectedRegions) {\n    if (!enableFocus) {\n        return undefined;\n    }\n    else if (focusedCellFromProps != null) {\n        // controlled mode\n        return focusedCellFromProps;\n    }\n    else if (focusedCellFromState != null) {\n        // use the current focused cell from state\n        return focusedCellFromState;\n    }\n    else if (selectedRegions.length > 0) {\n        // focus the top-left cell of the last selection\n        var lastIndex = selectedRegions.length - 1;\n        return tslib_1.__assign({}, regions_1.Regions.getFocusCellCoordinatesFromRegion(selectedRegions[lastIndex]), { focusSelectionIndex: lastIndex });\n    }\n    else {\n        // focus the top-left cell of the table\n        return { col: 0, row: 0, focusSelectionIndex: 0 };\n    }\n}\nexports.getInitialFocusedCell = getInitialFocusedCell;\n/**\n * Returns a new cell-coordinates object that includes a focusSelectionIndex property.\n * The returned object will have the proper IFocusedCellCoordinates type.\n */\nfunction toFullCoordinates(cellCoords, focusSelectionIndex) {\n    if (focusSelectionIndex === void 0) { focusSelectionIndex = 0; }\n    return tslib_1.__assign({}, cellCoords, { focusSelectionIndex: focusSelectionIndex });\n}\nexports.toFullCoordinates = toFullCoordinates;\n/**\n * Expands an existing region to new region based on the current focused cell.\n * The focused cell is an invariant and should not move as a result of this\n * operation. This function is used, for instance, to expand a selected region\n * on shift+click.\n */\nfunction expandFocusedRegion(focusedCell, newRegion) {\n    switch (regions_1.Regions.getRegionCardinality(newRegion)) {\n        case regions_1.RegionCardinality.FULL_COLUMNS: {\n            var _a = getExpandedRegionIndices(focusedCell, newRegion, \"col\", \"cols\"), indexStart = _a[0], indexEnd = _a[1];\n            return regions_1.Regions.column(indexStart, indexEnd);\n        }\n        case regions_1.RegionCardinality.FULL_ROWS: {\n            var _b = getExpandedRegionIndices(focusedCell, newRegion, \"row\", \"rows\"), indexStart = _b[0], indexEnd = _b[1];\n            return regions_1.Regions.row(indexStart, indexEnd);\n        }\n        case regions_1.RegionCardinality.CELLS:\n            var _c = getExpandedRegionIndices(focusedCell, newRegion, \"row\", \"rows\"), rowIndexStart = _c[0], rowIndexEnd = _c[1];\n            var _d = getExpandedRegionIndices(focusedCell, newRegion, \"col\", \"cols\"), colIndexStart = _d[0], colIndexEnd = _d[1];\n            return regions_1.Regions.cell(rowIndexStart, colIndexStart, rowIndexEnd, colIndexEnd);\n        default:\n            return regions_1.Regions.table();\n    }\n}\nexports.expandFocusedRegion = expandFocusedRegion;\nfunction getExpandedRegionIndices(focusedCell, newRegion, focusedCellDimension, regionDimension) {\n    var sourceIndex = focusedCell[focusedCellDimension];\n    var _a = newRegion[regionDimension], destinationIndex = _a[0], destinationIndexEnd = _a[1];\n    if (destinationIndex !== destinationIndexEnd) {\n        if (regionDimension === \"rows\") {\n            throw new Error(Errors.TABLE_EXPAND_FOCUSED_REGION_MULTI_ROW_REGION);\n        }\n        else if (regionDimension === \"cols\") {\n            throw new Error(Errors.TABLE_EXPAND_FOCUSED_REGION_MULTI_COLUMN_REGION);\n        }\n    }\n    return sourceIndex <= destinationIndex\n        ? [sourceIndex, destinationIndex]\n        : [destinationIndex, sourceIndex];\n}\n\n//# sourceMappingURL=focusedCellUtils.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/internal/focusedCellUtils.js\n// module id = 33\n// module chunks = 0","/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ns = \"[Blueprint Table]\";\nvar deprec = ns + \" DEPRECATION:\";\nexports.COLUMN_HEADER_CELL_MENU_DEPRECATED = deprec + \" <ColumnHeaderCell> menu is deprecated. Use renderMenu instead.\";\nexports.ROW_HEADER_CELL_MENU_DEPRECATED = deprec + \" <RowHeaderCell> menu is deprecated. Use renderMenu instead.\";\nexports.QUADRANT_ON_SCROLL_UNNECESSARILY_DEFINED = ns + \" <TableQuadrant> onScroll need not be defined for any quadrant aside from the MAIN quadrant.\";\nexports.TABLE_NON_COLUMN_CHILDREN_WARNING = ns + \" <Table> Children of Table must be Columns\\\"\";\nexports.TABLE_NUM_FROZEN_COLUMNS_BOUND_WARNING = ns + \" <Table> numFrozenColumns must be in [0, number of columns]\";\nexports.TABLE_NUM_FROZEN_ROWS_BOUND_WARNING = ns + \" <Table> numFrozenRows must be in [0, numRows]\";\nexports.TABLE_EXPAND_FOCUSED_REGION_MULTI_ROW_REGION = ns + \" <Table> Cannot expand a FULL_COLUMNS selection using a multi-row region\";\nexports.TABLE_EXPAND_FOCUSED_REGION_MULTI_COLUMN_REGION = ns + \" <Table> Cannot expand a FULL_COLUMNS selection using a multi-column region\";\n\n//# sourceMappingURL=errors.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/errors.js\n// module id = 34\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar Classes = require(\"../common/classes\");\nvar Errors = require(\"../common/errors\");\nvar loadableContent_1 = require(\"../common/loadableContent\");\nvar headerCell_1 = require(\"./headerCell\");\nfunction HorizontalCellDivider() {\n    return React.createElement(\"div\", { className: Classes.TABLE_HORIZONTAL_CELL_DIVIDER });\n}\nexports.HorizontalCellDivider = HorizontalCellDivider;\nvar ColumnHeaderCell = (function (_super) {\n    tslib_1.__extends(ColumnHeaderCell, _super);\n    function ColumnHeaderCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            isActive: false,\n        };\n        _this.handlePopoverDidOpen = function () {\n            _this.setState({ isActive: true });\n        };\n        _this.handlePopoverWillClose = function () {\n            _this.setState({ isActive: false });\n        };\n        return _this;\n    }\n    /**\n     * This method determines if a `MouseEvent` was triggered on a target that\n     * should be used as the header click/drag target. This enables users of\n     * this component to render fully interactive components in their header\n     * cells without worry of selection or resize operations from capturing\n     * their mouse events.\n     */\n    ColumnHeaderCell.isHeaderMouseTarget = function (target) {\n        return target.classList.contains(Classes.TABLE_HEADER)\n            || target.classList.contains(Classes.TABLE_COLUMN_NAME)\n            || target.classList.contains(Classes.TABLE_INTERACTION_BAR)\n            || target.classList.contains(Classes.TABLE_HEADER_CONTENT);\n    };\n    ColumnHeaderCell.prototype.render = function () {\n        var _a = this.props, \n        // from IColumnHeaderCellProps\n        isColumnReorderable = _a.isColumnReorderable, isColumnSelected = _a.isColumnSelected, menuIconName = _a.menuIconName, \n        // from IColumnNameProps\n        name = _a.name, renderName = _a.renderName, useInteractionBar = _a.useInteractionBar, \n        // from IHeaderProps\n        spreadableProps = tslib_1.__rest(_a, [\"isColumnReorderable\", \"isColumnSelected\", \"menuIconName\", \"name\", \"renderName\", \"useInteractionBar\"]);\n        var classes = classNames(spreadableProps.className, Classes.TABLE_COLUMN_HEADER_CELL, (_b = {},\n            _b[Classes.TABLE_HAS_INTERACTION_BAR] = useInteractionBar,\n            _b[Classes.TABLE_HAS_REORDER_HANDLE] = this.props.reorderHandle != null,\n            _b));\n        return (React.createElement(headerCell_1.HeaderCell, tslib_1.__assign({ isReorderable: this.props.isColumnReorderable, isSelected: this.props.isColumnSelected }, spreadableProps, { className: classes }),\n            this.renderName(),\n            this.maybeRenderContent(),\n            this.props.loading ? undefined : this.props.resizeHandle));\n        var _b;\n    };\n    ColumnHeaderCell.prototype.validateProps = function (nextProps) {\n        if (nextProps.menu != null) {\n            // throw this warning from the publicly exported, higher-order *HeaderCell components\n            // rather than HeaderCell, so consumers know exactly which components are receiving the\n            // offending prop\n            console.warn(Errors.COLUMN_HEADER_CELL_MENU_DEPRECATED);\n        }\n    };\n    ColumnHeaderCell.prototype.renderName = function () {\n        var _a = this.props, index = _a.index, loading = _a.loading, name = _a.name, renderName = _a.renderName, reorderHandle = _a.reorderHandle, useInteractionBar = _a.useInteractionBar;\n        var dropdownMenu = this.maybeRenderDropdownMenu();\n        var defaultName = React.createElement(\"div\", { className: Classes.TABLE_TRUNCATED_TEXT }, name);\n        var nameComponent = (React.createElement(loadableContent_1.LoadableContent, { loading: loading, variableLength: true }, renderName == null ? defaultName : renderName(name, index)));\n        if (useInteractionBar) {\n            return (React.createElement(\"div\", { className: Classes.TABLE_COLUMN_NAME, title: name },\n                React.createElement(\"div\", { className: Classes.TABLE_INTERACTION_BAR },\n                    reorderHandle,\n                    dropdownMenu),\n                React.createElement(HorizontalCellDivider, null),\n                React.createElement(\"div\", { className: Classes.TABLE_COLUMN_NAME_TEXT }, nameComponent)));\n        }\n        else {\n            return (React.createElement(\"div\", { className: Classes.TABLE_COLUMN_NAME, title: name },\n                reorderHandle,\n                dropdownMenu,\n                React.createElement(\"div\", { className: Classes.TABLE_COLUMN_NAME_TEXT }, nameComponent)));\n        }\n    };\n    ColumnHeaderCell.prototype.maybeRenderContent = function () {\n        if (this.props.children === null) {\n            return undefined;\n        }\n        return (React.createElement(\"div\", { className: Classes.TABLE_HEADER_CONTENT }, this.props.children));\n    };\n    ColumnHeaderCell.prototype.maybeRenderDropdownMenu = function () {\n        var _a = this.props, index = _a.index, menu = _a.menu, menuIconName = _a.menuIconName, renderMenu = _a.renderMenu;\n        if (renderMenu == null && menu == null) {\n            return undefined;\n        }\n        var constraints = [{\n                attachment: \"together\",\n                pin: true,\n                to: \"window\",\n            }];\n        var classes = classNames(Classes.TABLE_TH_MENU_CONTAINER, (_b = {},\n            _b[Classes.TABLE_TH_MENU_OPEN] = this.state.isActive,\n            _b));\n        // prefer renderMenu if it's defined\n        var content = core_1.Utils.isFunction(renderMenu)\n            ? renderMenu(index)\n            : menu;\n        return (React.createElement(\"div\", { className: classes },\n            React.createElement(\"div\", { className: Classes.TABLE_TH_MENU_CONTAINER_BACKGROUND }),\n            React.createElement(core_1.Popover, { tetherOptions: { constraints: constraints }, content: content, position: core_1.Position.BOTTOM, className: Classes.TABLE_TH_MENU, popoverDidOpen: this.handlePopoverDidOpen, popoverWillClose: this.handlePopoverWillClose, useSmartArrowPositioning: true },\n                React.createElement(core_1.Icon, { iconName: menuIconName }))));\n        var _b;\n    };\n    return ColumnHeaderCell;\n}(core_1.AbstractComponent));\nColumnHeaderCell.defaultProps = {\n    isActive: false,\n    menuIconName: \"chevron-down\",\n    useInteractionBar: false,\n};\nexports.ColumnHeaderCell = ColumnHeaderCell;\n\n//# sourceMappingURL=columnHeaderCell.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/headers/columnHeaderCell.js\n// module id = 35\n// module chunks = 0","/**\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar Classes = require(\"../common/classes\");\nvar utils_1 = require(\"../common/utils\");\nvar HeaderCell = (function (_super) {\n    tslib_1.__extends(HeaderCell, _super);\n    function HeaderCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            isActive: false,\n        };\n        return _this;\n    }\n    HeaderCell.prototype.shouldComponentUpdate = function (nextProps) {\n        return !utils_1.Utils.shallowCompareKeys(this.props, nextProps, { exclude: [\"style\"] })\n            || !utils_1.Utils.deepCompareKeys(this.props, nextProps, [\"style\"]);\n    };\n    HeaderCell.prototype.renderContextMenu = function (_event) {\n        var renderMenu = this.props.renderMenu;\n        if (core_1.Utils.isFunction(renderMenu)) {\n            // the preferred way (a consistent function instance that won't cause as many re-renders)\n            return renderMenu(this.props.index);\n        }\n        else {\n            // the deprecated way (leads to lots of unnecessary re-renders because of menu-item\n            // callbacks needing access to the index of the right-clicked cell, which demands that\n            // new callback functions and JSX elements be recreated on each render of the parent)\n            return this.props.menu;\n        }\n    };\n    HeaderCell.prototype.render = function () {\n        var classes = classNames(Classes.TABLE_HEADER, (_a = {},\n            _a[Classes.TABLE_HEADER_ACTIVE] = this.props.isActive || this.state.isActive,\n            _a[Classes.TABLE_HEADER_SELECTED] = this.props.isSelected,\n            _a[core_1.Classes.LOADING] = this.props.loading,\n            _a), this.props.className);\n        return (React.createElement(\"div\", { className: classes, style: this.props.style }, this.props.children));\n        var _a;\n    };\n    return HeaderCell;\n}(React.Component));\nHeaderCell = tslib_1.__decorate([\n    core_1.ContextMenuTarget\n], HeaderCell);\nexports.HeaderCell = HeaderCell;\n\n//# sourceMappingURL=headerCell.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/headers/headerCell.js\n// module id = 36\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar Classes = require(\"../common/classes\");\nvar Errors = require(\"../common/errors\");\nvar loadableContent_1 = require(\"../common/loadableContent\");\nvar headerCell_1 = require(\"./headerCell\");\nvar RowHeaderCell = (function (_super) {\n    tslib_1.__extends(RowHeaderCell, _super);\n    function RowHeaderCell() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RowHeaderCell.prototype.render = function () {\n        var loadableContentDivClasses = classNames(Classes.TABLE_ROW_NAME_TEXT, Classes.TABLE_TRUNCATED_TEXT);\n        var _a = this.props, \n        // from IRowHeaderCellProps\n        isRowReorderable = _a.isRowReorderable, isRowSelected = _a.isRowSelected, \n        // from IHeaderProps\n        spreadableProps = tslib_1.__rest(_a, [\"isRowReorderable\", \"isRowSelected\"]);\n        return (React.createElement(headerCell_1.HeaderCell, tslib_1.__assign({ isReorderable: this.props.isRowReorderable, isSelected: this.props.isRowSelected }, spreadableProps),\n            React.createElement(\"div\", { className: Classes.TABLE_ROW_NAME },\n                React.createElement(loadableContent_1.LoadableContent, { loading: spreadableProps.loading },\n                    React.createElement(\"div\", { className: loadableContentDivClasses }, spreadableProps.name))),\n            this.props.children,\n            spreadableProps.loading ? undefined : spreadableProps.resizeHandle));\n    };\n    RowHeaderCell.prototype.validateProps = function (nextProps) {\n        if (nextProps.menu != null) {\n            // throw this warning from the publicly exported, higher-order *HeaderCell components\n            // rather than HeaderCell, so consumers know exactly which components are receiving the\n            // offending prop\n            console.warn(Errors.ROW_HEADER_CELL_MENU_DEPRECATED);\n        }\n    };\n    return RowHeaderCell;\n}(core_1.AbstractComponent));\nexports.RowHeaderCell = RowHeaderCell;\n\n//# sourceMappingURL=rowHeaderCell.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/headers/rowHeaderCell.js\n// module id = 37\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar classNames = require(\"classnames\");\nvar PureRender = require(\"pure-render-decorator\");\nvar React = require(\"react\");\nvar Classes = require(\"../common/classes\");\nvar EditableName = (function (_super) {\n    tslib_1.__extends(EditableName, _super);\n    function EditableName() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EditableName.prototype.render = function () {\n        var _a = this.props, className = _a.className, intent = _a.intent, name = _a.name, onCancel = _a.onCancel, onChange = _a.onChange, onConfirm = _a.onConfirm;\n        return (React.createElement(core_1.EditableText, { className: classNames(className, Classes.TABLE_EDITABLE_NAME), defaultValue: name, intent: intent, minWidth: null, onCancel: onCancel, onChange: onChange, onConfirm: onConfirm, placeholder: \"\", selectAllOnFocus: true }));\n    };\n    return EditableName;\n}(React.Component));\nEditableName = tslib_1.__decorate([\n    PureRender\n], EditableName);\nexports.EditableName = EditableName;\n\n//# sourceMappingURL=editableName.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/headers/editableName.js\n// module id = 38\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar core_2 = require(\"@blueprintjs/core\");\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar column_1 = require(\"./column\");\nvar Classes = require(\"./common/classes\");\nvar clipboard_1 = require(\"./common/clipboard\");\nvar Errors = require(\"./common/errors\");\nvar grid_1 = require(\"./common/grid\");\nvar FocusedCellUtils = require(\"./common/internal/focusedCellUtils\");\nvar ScrollUtils = require(\"./common/internal/scrollUtils\");\nvar rect_1 = require(\"./common/rect\");\nvar renderMode_1 = require(\"./common/renderMode\");\nvar utils_1 = require(\"./common/utils\");\nvar columnHeader_1 = require(\"./headers/columnHeader\");\nvar columnHeaderCell_1 = require(\"./headers/columnHeaderCell\");\nvar rowHeader_1 = require(\"./headers/rowHeader\");\nvar resizeSensor_1 = require(\"./interactions/resizeSensor\");\nvar guides_1 = require(\"./layers/guides\");\nvar regions_1 = require(\"./layers/regions\");\nvar locator_1 = require(\"./locator\");\nvar tableQuadrant_1 = require(\"./quadrants/tableQuadrant\");\nvar tableQuadrantStack_1 = require(\"./quadrants/tableQuadrantStack\");\nvar regions_2 = require(\"./regions\");\nvar tableBody_1 = require(\"./tableBody\");\nvar Table = Table_1 = (function (_super) {\n    tslib_1.__extends(Table, _super);\n    function Table(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        _this.refHandlers = {\n            columnHeader: function (ref) { return _this.columnHeaderElement = ref; },\n            mainQuadrant: function (ref) { return _this.mainQuadrantElement = ref; },\n            quadrantStack: function (ref) { return _this.quadrantStackInstance = ref; },\n            rowHeader: function (ref) { return _this.rowHeaderElement = ref; },\n            scrollContainer: function (ref) { return _this.scrollContainerElement = ref; },\n        };\n        _this.handleCopy = function (e) {\n            var grid = _this.grid;\n            var _a = _this.props, getCellClipboardData = _a.getCellClipboardData, onCopy = _a.onCopy;\n            var selectedRegions = _this.state.selectedRegions;\n            if (getCellClipboardData == null) {\n                return;\n            }\n            // prevent \"real\" copy from being called\n            e.preventDefault();\n            e.stopPropagation();\n            var cells = regions_2.Regions.enumerateUniqueCells(selectedRegions, grid.numRows, grid.numCols);\n            var sparse = regions_2.Regions.sparseMapCells(cells, getCellClipboardData);\n            if (sparse != null) {\n                var success = clipboard_1.Clipboard.copyCells(sparse);\n                core_1.Utils.safeInvoke(onCopy, success);\n            }\n        };\n        _this.renderMenu = function (refHandler) {\n            var classes = classNames(Classes.TABLE_MENU, (_a = {},\n                _a[Classes.TABLE_SELECTION_ENABLED] = _this.isSelectionModeEnabled(regions_2.RegionCardinality.FULL_TABLE),\n                _a));\n            return (React.createElement(\"div\", { className: classes, ref: refHandler, onMouseDown: _this.handleMenuMouseDown }, _this.maybeRenderRegions(_this.styleMenuRegion)));\n            var _a;\n        };\n        _this.handleMenuMouseDown = function (e) {\n            // the shift+click interaction expands the region from the focused cell.\n            // thus, if shift is pressed we shouldn't move the focused cell.\n            _this.selectAll(!e.shiftKey);\n        };\n        _this.selectAll = function (shouldUpdateFocusedCell) {\n            var selectionHandler = _this.getEnabledSelectionHandler(regions_2.RegionCardinality.FULL_TABLE);\n            // clicking on upper left hand corner sets selection to \"all\"\n            // regardless of current selection state (clicking twice does not deselect table)\n            selectionHandler([regions_2.Regions.table()]);\n            if (shouldUpdateFocusedCell) {\n                var newFocusedCellCoordinates = regions_2.Regions.getFocusCellCoordinatesFromRegion(regions_2.Regions.table());\n                _this.handleFocus(FocusedCellUtils.toFullCoordinates(newFocusedCellCoordinates));\n            }\n        };\n        _this.handleSelectAllHotkey = function (e) {\n            // prevent \"real\" select all from happening as well\n            e.preventDefault();\n            e.stopPropagation();\n            // selecting-all via the keyboard should not move the focused cell.\n            _this.selectAll(false);\n        };\n        _this.columnHeaderCellRenderer = function (columnIndex) {\n            var props = _this.getColumnProps(columnIndex);\n            var id = props.id, loadingOptions = props.loadingOptions, renderCell = props.renderCell, renderColumnHeader = props.renderColumnHeader, spreadableProps = tslib_1.__rest(props, [\"id\", \"loadingOptions\", \"renderCell\", \"renderColumnHeader\"]);\n            var columnLoading = _this.hasLoadingOption(loadingOptions, regions_2.ColumnLoadingOption.HEADER);\n            if (renderColumnHeader != null) {\n                var columnHeader = renderColumnHeader(columnIndex);\n                var columnHeaderLoading = columnHeader.props.loading;\n                return React.cloneElement(columnHeader, {\n                    loading: columnHeaderLoading != null ? columnHeaderLoading : columnLoading,\n                });\n            }\n            var baseProps = tslib_1.__assign({ index: columnIndex, loading: columnLoading }, spreadableProps);\n            if (props.name != null) {\n                return React.createElement(columnHeaderCell_1.ColumnHeaderCell, tslib_1.__assign({}, baseProps));\n            }\n            else {\n                return React.createElement(columnHeaderCell_1.ColumnHeaderCell, tslib_1.__assign({}, baseProps, { name: utils_1.Utils.toBase26Alpha(columnIndex) }));\n            }\n        };\n        _this.renderColumnHeader = function (refHandler, resizeHandler, reorderingHandler, showFrozenColumnsOnly) {\n            if (showFrozenColumnsOnly === void 0) { showFrozenColumnsOnly = false; }\n            var _a = _this, grid = _a.grid, locator = _a.locator;\n            var _b = _this.state, focusedCell = _b.focusedCell, selectedRegions = _b.selectedRegions, viewportRect = _b.viewportRect;\n            var _c = _this.props, allowMultipleSelection = _c.allowMultipleSelection, fillBodyWithGhostCells = _c.fillBodyWithGhostCells, isColumnReorderable = _c.isColumnReorderable, isColumnResizable = _c.isColumnResizable, loadingOptions = _c.loadingOptions, maxColumnWidth = _c.maxColumnWidth, minColumnWidth = _c.minColumnWidth, selectedRegionTransform = _c.selectedRegionTransform;\n            var classes = classNames(Classes.TABLE_COLUMN_HEADERS, (_d = {},\n                _d[Classes.TABLE_SELECTION_ENABLED] = _this.isSelectionModeEnabled(regions_2.RegionCardinality.FULL_COLUMNS),\n                _d));\n            var columnIndices = grid.getColumnIndicesInRect(viewportRect, fillBodyWithGhostCells);\n            var columnIndexStart = showFrozenColumnsOnly ? 0 : columnIndices.columnIndexStart;\n            var columnIndexEnd = showFrozenColumnsOnly ? _this.getMaxFrozenColumnIndex() : columnIndices.columnIndexEnd;\n            return (React.createElement(\"div\", { className: classes, ref: refHandler },\n                React.createElement(columnHeader_1.ColumnHeader, { allowMultipleSelection: allowMultipleSelection, cellRenderer: _this.columnHeaderCellRenderer, focusedCell: focusedCell, grid: grid, isReorderable: isColumnReorderable, isResizable: isColumnResizable, loading: _this.hasLoadingOption(loadingOptions, regions_2.TableLoadingOption.COLUMN_HEADERS), locator: locator, maxColumnWidth: maxColumnWidth, minColumnWidth: minColumnWidth, onColumnWidthChanged: _this.handleColumnWidthChanged, onFocus: _this.handleFocus, onLayoutLock: _this.handleLayoutLock, onReordered: _this.handleColumnsReordered, onReordering: reorderingHandler, onResizeGuide: resizeHandler, onSelection: _this.getEnabledSelectionHandler(regions_2.RegionCardinality.FULL_COLUMNS), selectedRegions: selectedRegions, selectedRegionTransform: selectedRegionTransform, columnIndexStart: columnIndexStart, columnIndexEnd: columnIndexEnd }, _this.props.children),\n                _this.maybeRenderRegions(_this.styleColumnHeaderRegion)));\n            var _d;\n        };\n        _this.renderRowHeader = function (refHandler, resizeHandler, reorderingHandler, showFrozenRowsOnly) {\n            if (showFrozenRowsOnly === void 0) { showFrozenRowsOnly = false; }\n            var _a = _this, grid = _a.grid, locator = _a.locator;\n            var _b = _this.state, focusedCell = _b.focusedCell, selectedRegions = _b.selectedRegions, viewportRect = _b.viewportRect;\n            var _c = _this.props, allowMultipleSelection = _c.allowMultipleSelection, fillBodyWithGhostCells = _c.fillBodyWithGhostCells, isRowReorderable = _c.isRowReorderable, isRowResizable = _c.isRowResizable, loadingOptions = _c.loadingOptions, maxRowHeight = _c.maxRowHeight, minRowHeight = _c.minRowHeight, renderRowHeader = _c.renderRowHeader, selectedRegionTransform = _c.selectedRegionTransform;\n            var classes = classNames(Classes.TABLE_ROW_HEADERS, (_d = {},\n                _d[Classes.TABLE_SELECTION_ENABLED] = _this.isSelectionModeEnabled(regions_2.RegionCardinality.FULL_ROWS),\n                _d));\n            var rowIndices = grid.getRowIndicesInRect(viewportRect, fillBodyWithGhostCells);\n            var rowIndexStart = showFrozenRowsOnly ? 0 : rowIndices.rowIndexStart;\n            var rowIndexEnd = showFrozenRowsOnly ? _this.getMaxFrozenRowIndex() : rowIndices.rowIndexEnd;\n            return (React.createElement(\"div\", { className: classes, ref: refHandler },\n                React.createElement(rowHeader_1.RowHeader, { allowMultipleSelection: allowMultipleSelection, focusedCell: focusedCell, grid: grid, locator: locator, isReorderable: isRowReorderable, isResizable: isRowResizable, loading: _this.hasLoadingOption(loadingOptions, regions_2.TableLoadingOption.ROW_HEADERS), maxRowHeight: maxRowHeight, minRowHeight: minRowHeight, onFocus: _this.handleFocus, onLayoutLock: _this.handleLayoutLock, onResizeGuide: resizeHandler, onReordered: _this.handleRowsReordered, onReordering: reorderingHandler, onRowHeightChanged: _this.handleRowHeightChanged, onSelection: _this.getEnabledSelectionHandler(regions_2.RegionCardinality.FULL_ROWS), renderRowHeader: renderRowHeader, selectedRegions: selectedRegions, selectedRegionTransform: selectedRegionTransform, rowIndexStart: rowIndexStart, rowIndexEnd: rowIndexEnd }),\n                _this.maybeRenderRegions(_this.styleRowHeaderRegion)));\n            var _d;\n        };\n        _this.bodyCellRenderer = function (rowIndex, columnIndex) {\n            var columnProps = _this.getColumnProps(columnIndex);\n            var cell = columnProps.renderCell(rowIndex, columnIndex);\n            var cellLoading = cell.props.loading;\n            var loading = cellLoading != null\n                ? cellLoading\n                : _this.hasLoadingOption(columnProps.loadingOptions, regions_2.ColumnLoadingOption.CELLS);\n            return React.cloneElement(cell, tslib_1.__assign({}, columnProps, { loading: loading }));\n        };\n        _this.renderBody = function (quadrantType, showFrozenRowsOnly, showFrozenColumnsOnly) {\n            if (showFrozenRowsOnly === void 0) { showFrozenRowsOnly = false; }\n            if (showFrozenColumnsOnly === void 0) { showFrozenColumnsOnly = false; }\n            var _a = _this, grid = _a.grid, locator = _a.locator;\n            var _b = _this.state, focusedCell = _b.focusedCell, selectedRegions = _b.selectedRegions, viewportRect = _b.viewportRect;\n            var _c = _this.props, allowMultipleSelection = _c.allowMultipleSelection, fillBodyWithGhostCells = _c.fillBodyWithGhostCells, loadingOptions = _c.loadingOptions, renderBodyContextMenu = _c.renderBodyContextMenu, renderMode = _c.renderMode, selectedRegionTransform = _c.selectedRegionTransform;\n            var numFrozenColumns = _this.getNumFrozenColumnsClamped();\n            var numFrozenRows = _this.getNumFrozenRowsClamped();\n            var rowIndices = grid.getRowIndicesInRect(viewportRect, fillBodyWithGhostCells);\n            var columnIndices = grid.getColumnIndicesInRect(viewportRect, fillBodyWithGhostCells);\n            var columnIndexStart = showFrozenColumnsOnly ? 0 : columnIndices.columnIndexStart;\n            var columnIndexEnd = showFrozenColumnsOnly ? numFrozenColumns : columnIndices.columnIndexEnd;\n            var rowIndexStart = showFrozenRowsOnly ? 0 : rowIndices.rowIndexStart;\n            var rowIndexEnd = showFrozenRowsOnly ? numFrozenRows : rowIndices.rowIndexEnd;\n            // the main quadrant contains all cells in the table, so listen only to that quadrant\n            var onCompleteRender = quadrantType === tableQuadrant_1.QuadrantType.MAIN\n                ? _this.handleCompleteRender\n                : undefined;\n            return (React.createElement(\"div\", null,\n                React.createElement(tableBody_1.TableBody, { allowMultipleSelection: allowMultipleSelection, cellRenderer: _this.bodyCellRenderer, focusedCell: focusedCell, grid: grid, loading: _this.hasLoadingOption(loadingOptions, regions_2.TableLoadingOption.CELLS), locator: locator, onCompleteRender: onCompleteRender, onFocus: _this.handleFocus, onSelection: _this.getEnabledSelectionHandler(regions_2.RegionCardinality.CELLS), renderBodyContextMenu: renderBodyContextMenu, renderMode: renderMode, selectedRegions: selectedRegions, selectedRegionTransform: selectedRegionTransform, viewportRect: viewportRect, columnIndexStart: columnIndexStart, columnIndexEnd: columnIndexEnd, rowIndexStart: rowIndexStart, rowIndexEnd: rowIndexEnd, numFrozenColumns: showFrozenColumnsOnly ? numFrozenColumns : undefined, numFrozenRows: showFrozenRowsOnly ? numFrozenRows : undefined }),\n                _this.maybeRenderRegions(_this.styleBodyRegion, quadrantType)));\n        };\n        _this.handleCompleteRender = function () {\n            // the first onCompleteRender is triggered before the viewportRect is\n            // defined and the second after the viewportRect has been set. the cells\n            // will only actually render once the viewportRect is defined though, so\n            // we defer invoking onCompleteRender until that check passes.\n            if (_this.state.viewportRect != null) {\n                core_1.Utils.safeInvoke(_this.props.onCompleteRender);\n            }\n        };\n        _this.handleFocusMoveLeft = function (e) { return _this.handleFocusMove(e, \"left\"); };\n        _this.handleFocusMoveLeftInternal = function (e) { return _this.handleFocusMoveInternal(e, \"left\"); };\n        _this.handleFocusMoveRight = function (e) { return _this.handleFocusMove(e, \"right\"); };\n        _this.handleFocusMoveRightInternal = function (e) { return _this.handleFocusMoveInternal(e, \"right\"); };\n        _this.handleFocusMoveUp = function (e) { return _this.handleFocusMove(e, \"up\"); };\n        _this.handleFocusMoveUpInternal = function (e) { return _this.handleFocusMoveInternal(e, \"up\"); };\n        _this.handleFocusMoveDown = function (e) { return _this.handleFocusMove(e, \"down\"); };\n        _this.handleFocusMoveDownInternal = function (e) { return _this.handleFocusMoveInternal(e, \"down\"); };\n        _this.styleBodyRegion = function (region, quadrantType) {\n            var numFrozenColumns = _this.props.numFrozenColumns;\n            var cardinality = regions_2.Regions.getRegionCardinality(region);\n            var style = _this.grid.getRegionStyle(region);\n            // ensure we're not showing borders at the boundary of the frozen-columns area\n            var canHideRightBorder = (quadrantType === tableQuadrant_1.QuadrantType.TOP_LEFT || quadrantType === tableQuadrant_1.QuadrantType.LEFT)\n                && numFrozenColumns != null && numFrozenColumns > 0;\n            var fixedHeight = _this.grid.getHeight();\n            var fixedWidth = _this.grid.getWidth();\n            // include a correction in some cases to hide borders along quadrant boundaries\n            var alignmentCorrection = 1;\n            var alignmentCorrectionString = \"-\" + alignmentCorrection + \"px\";\n            switch (cardinality) {\n                case regions_2.RegionCardinality.CELLS:\n                    return style;\n                case regions_2.RegionCardinality.FULL_COLUMNS:\n                    style.top = alignmentCorrectionString;\n                    style.height = fixedHeight + alignmentCorrection;\n                    return style;\n                case regions_2.RegionCardinality.FULL_ROWS:\n                    style.left = alignmentCorrectionString;\n                    style.width = fixedWidth + alignmentCorrection;\n                    if (canHideRightBorder) {\n                        style.right = alignmentCorrectionString;\n                    }\n                    return style;\n                case regions_2.RegionCardinality.FULL_TABLE:\n                    style.left = alignmentCorrectionString;\n                    style.top = alignmentCorrectionString;\n                    style.width = fixedWidth + alignmentCorrection;\n                    style.height = fixedHeight + alignmentCorrection;\n                    if (canHideRightBorder) {\n                        style.right = alignmentCorrectionString;\n                    }\n                    return style;\n                default:\n                    return { display: \"none\" };\n            }\n        };\n        _this.styleMenuRegion = function (region) {\n            var grid = _this.grid;\n            var viewportRect = _this.state.viewportRect;\n            if (viewportRect == null) {\n                return {};\n            }\n            var cardinality = regions_2.Regions.getRegionCardinality(region);\n            var style = grid.getRegionStyle(region);\n            switch (cardinality) {\n                case regions_2.RegionCardinality.FULL_TABLE:\n                    style.right = \"0px\";\n                    style.bottom = \"0px\";\n                    style.top = \"0px\";\n                    style.left = \"0px\";\n                    style.borderBottom = \"none\";\n                    style.borderRight = \"none\";\n                    return style;\n                default:\n                    return { display: \"none\" };\n            }\n        };\n        _this.styleColumnHeaderRegion = function (region) {\n            var grid = _this.grid;\n            var viewportRect = _this.state.viewportRect;\n            if (viewportRect == null) {\n                return {};\n            }\n            var cardinality = regions_2.Regions.getRegionCardinality(region);\n            var style = grid.getRegionStyle(region);\n            switch (cardinality) {\n                case regions_2.RegionCardinality.FULL_TABLE:\n                    style.left = \"-1px\";\n                    style.borderLeft = \"none\";\n                    style.bottom = \"-1px\";\n                    return style;\n                case regions_2.RegionCardinality.FULL_COLUMNS:\n                    style.bottom = \"-1px\";\n                    return style;\n                default:\n                    return { display: \"none\" };\n            }\n        };\n        _this.styleRowHeaderRegion = function (region) {\n            var grid = _this.grid;\n            var viewportRect = _this.state.viewportRect;\n            if (viewportRect == null) {\n                return {};\n            }\n            var cardinality = regions_2.Regions.getRegionCardinality(region);\n            var style = grid.getRegionStyle(region);\n            switch (cardinality) {\n                case regions_2.RegionCardinality.FULL_TABLE:\n                    style.top = \"-1px\";\n                    style.borderTop = \"none\";\n                    style.right = \"-1px\";\n                    return style;\n                case regions_2.RegionCardinality.FULL_ROWS:\n                    style.right = \"-1px\";\n                    return style;\n                default:\n                    return { display: \"none\" };\n            }\n        };\n        _this.handleColumnWidthChanged = function (columnIndex, width) {\n            var selectedRegions = _this.state.selectedRegions;\n            var columnWidths = _this.state.columnWidths.slice();\n            if (regions_2.Regions.hasFullTable(selectedRegions)) {\n                for (var col = 0; col < columnWidths.length; col++) {\n                    columnWidths[col] = width;\n                }\n            }\n            if (regions_2.Regions.hasFullColumn(selectedRegions, columnIndex)) {\n                regions_2.Regions.eachUniqueFullColumn(selectedRegions, function (col) {\n                    columnWidths[col] = width;\n                });\n            }\n            else {\n                columnWidths[columnIndex] = width;\n            }\n            _this.invalidateGrid();\n            _this.setState({ columnWidths: columnWidths });\n            var onColumnWidthChanged = _this.props.onColumnWidthChanged;\n            if (onColumnWidthChanged != null) {\n                onColumnWidthChanged(columnIndex, width);\n            }\n        };\n        _this.handleRowHeightChanged = function (rowIndex, height) {\n            var selectedRegions = _this.state.selectedRegions;\n            var rowHeights = _this.state.rowHeights.slice();\n            if (regions_2.Regions.hasFullTable(selectedRegions)) {\n                for (var row = 0; row < rowHeights.length; row++) {\n                    rowHeights[row] = height;\n                }\n            }\n            if (regions_2.Regions.hasFullRow(selectedRegions, rowIndex)) {\n                regions_2.Regions.eachUniqueFullRow(selectedRegions, function (row) {\n                    rowHeights[row] = height;\n                });\n            }\n            else {\n                rowHeights[rowIndex] = height;\n            }\n            _this.invalidateGrid();\n            _this.setState({ rowHeights: rowHeights });\n            var onRowHeightChanged = _this.props.onRowHeightChanged;\n            if (onRowHeightChanged != null) {\n                onRowHeightChanged(rowIndex, height);\n            }\n        };\n        _this.handleRootScroll = function (_event) {\n            // Bug #211 - Native browser text selection events can cause the root\n            // element to scroll even though it has a overflow:hidden style. The\n            // only viable solution to this is to unscroll the element after the\n            // browser scrolls it.\n            if (_this.rootTableElement != null) {\n                _this.rootTableElement.scrollLeft = 0;\n                _this.rootTableElement.scrollTop = 0;\n            }\n        };\n        _this.handleBodyScroll = function (event) {\n            // Prevent the event from propagating to avoid a resize event on the\n            // resize sensor.\n            event.stopPropagation();\n            if (_this.locator != null && !_this.state.isLayoutLocked) {\n                var viewportRect = _this.locator.getViewportRect();\n                _this.updateViewportRect(viewportRect);\n            }\n        };\n        _this.clearSelection = function (_selectedRegions) {\n            _this.handleSelection([]);\n        };\n        // no good way to call arrow-key keyboard events from tests\n        /* istanbul ignore next */\n        _this.handleFocusMove = function (e, direction) {\n            e.preventDefault();\n            e.stopPropagation();\n            var focusedCell = _this.state.focusedCell;\n            if (focusedCell == null) {\n                // halt early if we have a selectedRegionTransform or something else in play that nixes\n                // the focused cell.\n                return;\n            }\n            var newFocusedCell = { col: focusedCell.col, row: focusedCell.row, focusSelectionIndex: 0 };\n            var grid = _this.grid;\n            switch (direction) {\n                case \"up\":\n                    newFocusedCell.row -= 1;\n                    break;\n                case \"down\":\n                    newFocusedCell.row += 1;\n                    break;\n                case \"left\":\n                    newFocusedCell.col -= 1;\n                    break;\n                case \"right\":\n                    newFocusedCell.col += 1;\n                    break;\n                default:\n                    break;\n            }\n            if (newFocusedCell.row < 0 || newFocusedCell.row >= grid.numRows ||\n                newFocusedCell.col < 0 || newFocusedCell.col >= grid.numCols) {\n                return;\n            }\n            // change selection to match new focus cell location\n            var newSelectionRegions = [regions_2.Regions.cell(newFocusedCell.row, newFocusedCell.col)];\n            _this.handleSelection(newSelectionRegions);\n            _this.handleFocus(newFocusedCell);\n            // keep the focused cell in view\n            _this.scrollBodyToFocusedCell(newFocusedCell);\n        };\n        // no good way to call arrow-key keyboard events from tests\n        /* istanbul ignore next */\n        _this.handleFocusMoveInternal = function (e, direction) {\n            e.preventDefault();\n            e.stopPropagation();\n            var _a = _this.state, focusedCell = _a.focusedCell, selectedRegions = _a.selectedRegions;\n            var grid = _this.grid;\n            if (focusedCell == null) {\n                // halt early if we have a selectedRegionTransform or something else in play that nixes\n                // the focused cell.\n                return;\n            }\n            var newFocusedCell = {\n                col: focusedCell.col,\n                focusSelectionIndex: focusedCell.focusSelectionIndex,\n                row: focusedCell.row,\n            };\n            // if we're not in any particular focus cell region, and one exists, go to the first cell of the first one\n            if (focusedCell.focusSelectionIndex == null && selectedRegions.length > 0) {\n                var focusCellRegion = regions_2.Regions.getCellRegionFromRegion(selectedRegions[0], grid.numRows, grid.numCols);\n                newFocusedCell = {\n                    col: focusCellRegion.cols[0],\n                    focusSelectionIndex: 0,\n                    row: focusCellRegion.rows[0],\n                };\n            }\n            else {\n                if (selectedRegions.length === 0) {\n                    _this.handleFocusMove(e, direction);\n                    return;\n                }\n                var focusCellRegion = regions_2.Regions.getCellRegionFromRegion(selectedRegions[focusedCell.focusSelectionIndex], grid.numRows, grid.numCols);\n                if (focusCellRegion.cols[0] === focusCellRegion.cols[1]\n                    && focusCellRegion.rows[0] === focusCellRegion.rows[1]\n                    && selectedRegions.length === 1) {\n                    _this.handleFocusMove(e, direction);\n                    return;\n                }\n                switch (direction) {\n                    case \"up\":\n                        newFocusedCell = _this.moveFocusCell(\"row\", \"col\", true, newFocusedCell, focusCellRegion);\n                        break;\n                    case \"left\":\n                        newFocusedCell = _this.moveFocusCell(\"col\", \"row\", true, newFocusedCell, focusCellRegion);\n                        break;\n                    case \"down\":\n                        newFocusedCell = _this.moveFocusCell(\"row\", \"col\", false, newFocusedCell, focusCellRegion);\n                        break;\n                    case \"right\":\n                        newFocusedCell = _this.moveFocusCell(\"col\", \"row\", false, newFocusedCell, focusCellRegion);\n                        break;\n                    default:\n                        break;\n                }\n            }\n            if (newFocusedCell.row < 0 || newFocusedCell.row >= grid.numRows ||\n                newFocusedCell.col < 0 || newFocusedCell.col >= grid.numCols) {\n                return;\n            }\n            _this.handleFocus(newFocusedCell);\n            // keep the focused cell in view\n            _this.scrollBodyToFocusedCell(newFocusedCell);\n        };\n        _this.scrollBodyToFocusedCell = function (focusedCell) {\n            var row = focusedCell.row, col = focusedCell.col;\n            var viewportRect = _this.state.viewportRect;\n            // sort keys in normal CSS position order (per the trusty TRBL/\"trouble\" acronym)\n            // tslint:disable:object-literal-sort-keys\n            var viewportBounds = {\n                top: viewportRect.top,\n                right: viewportRect.left + viewportRect.width,\n                bottom: viewportRect.top + viewportRect.height,\n                left: viewportRect.left,\n            };\n            var focusedCellBounds = {\n                top: _this.grid.getCumulativeHeightBefore(row),\n                right: _this.grid.getCumulativeWidthAt(col),\n                bottom: _this.grid.getCumulativeHeightAt(row),\n                left: _this.grid.getCumulativeWidthBefore(col),\n            };\n            // tslint:enable:object-literal-sort-keys\n            var focusedCellWidth = focusedCellBounds.right - focusedCellBounds.left;\n            var focusedCellHeight = focusedCellBounds.bottom - focusedCellBounds.top;\n            var isFocusedCellWiderThanViewport = focusedCellWidth > viewportRect.width;\n            var isFocusedCellTallerThanViewport = focusedCellHeight > viewportRect.height;\n            var nextScrollTop = viewportRect.top;\n            var nextScrollLeft = viewportRect.left;\n            // keep the top end of an overly tall focused cell in view when moving left and right\n            // (without this OR check, the body seesaws to fit the top end, then the bottom end, etc.)\n            if (focusedCellBounds.top < viewportBounds.top || isFocusedCellTallerThanViewport) {\n                // scroll up (minus one pixel to avoid clipping the focused-cell border)\n                nextScrollTop = Math.max(0, focusedCellBounds.top - 1);\n            }\n            else if (focusedCellBounds.bottom > viewportBounds.bottom) {\n                // scroll down\n                var scrollDelta = focusedCellBounds.bottom - viewportBounds.bottom;\n                nextScrollTop = viewportBounds.top + scrollDelta;\n            }\n            // keep the left end of an overly wide focused cell in view when moving up and down\n            if (focusedCellBounds.left < viewportBounds.left || isFocusedCellWiderThanViewport) {\n                // scroll left (again minus one additional pixel)\n                nextScrollLeft = Math.max(0, focusedCellBounds.left - 1);\n            }\n            else if (focusedCellBounds.right > viewportBounds.right) {\n                // scroll right\n                var scrollDelta = focusedCellBounds.right - viewportBounds.right;\n                nextScrollLeft = viewportBounds.left + scrollDelta;\n            }\n            _this.syncViewportPosition(nextScrollLeft, nextScrollTop);\n        };\n        _this.handleFocus = function (focusedCell) {\n            if (!_this.props.enableFocus) {\n                // don't set focus state if focus is not allowed\n                return;\n            }\n            // only set focused cell state if not specified in props\n            if (_this.props.focusedCell == null) {\n                _this.setState({ focusedCell: focusedCell });\n            }\n            core_1.Utils.safeInvoke(_this.props.onFocus, focusedCell);\n        };\n        _this.handleSelection = function (selectedRegions) {\n            // only set selectedRegions state if not specified in props\n            if (_this.props.selectedRegions == null) {\n                _this.setState({ selectedRegions: selectedRegions });\n            }\n            var onSelection = _this.props.onSelection;\n            if (onSelection != null) {\n                onSelection(selectedRegions);\n            }\n        };\n        _this.handleColumnsReordering = function (verticalGuides) {\n            _this.setState({ isReordering: true, verticalGuides: verticalGuides });\n        };\n        _this.handleColumnsReordered = function (oldIndex, newIndex, length) {\n            _this.setState({ isReordering: false, verticalGuides: undefined });\n            core_1.Utils.safeInvoke(_this.props.onColumnsReordered, oldIndex, newIndex, length);\n        };\n        _this.handleRowsReordering = function (horizontalGuides) {\n            _this.setState({ isReordering: true, horizontalGuides: horizontalGuides });\n        };\n        _this.handleRowsReordered = function (oldIndex, newIndex, length) {\n            _this.setState({ isReordering: false, horizontalGuides: undefined });\n            core_1.Utils.safeInvoke(_this.props.onRowsReordered, oldIndex, newIndex, length);\n        };\n        _this.handleLayoutLock = function (isLayoutLocked) {\n            if (isLayoutLocked === void 0) { isLayoutLocked = false; }\n            _this.setState({ isLayoutLocked: isLayoutLocked });\n        };\n        _this.hasLoadingOption = function (loadingOptions, loadingOption) {\n            if (loadingOptions == null) {\n                return undefined;\n            }\n            return loadingOptions.indexOf(loadingOption) >= 0;\n        };\n        _this.updateViewportRect = function (nextViewportRect) {\n            _this.setState({ viewportRect: nextViewportRect });\n            var viewportRect = _this.state.viewportRect;\n            var didViewportChange = (viewportRect != null && !viewportRect.equals(nextViewportRect))\n                || (viewportRect == null && nextViewportRect != null);\n            if (didViewportChange) {\n                _this.invokeOnVisibleCellsChangeCallback(nextViewportRect);\n            }\n        };\n        _this.getMaxFrozenColumnIndex = function () {\n            var numFrozenColumns = _this.getNumFrozenColumnsClamped();\n            return (numFrozenColumns != null) ? numFrozenColumns - 1 : undefined;\n        };\n        _this.getMaxFrozenRowIndex = function () {\n            var numFrozenRows = _this.getNumFrozenRowsClamped();\n            return (numFrozenRows != null) ? numFrozenRows - 1 : undefined;\n        };\n        _this.handleColumnResizeGuide = function (verticalGuides) {\n            _this.setState({ verticalGuides: verticalGuides });\n        };\n        _this.handleRowResizeGuide = function (horizontalGuides) {\n            _this.setState({ horizontalGuides: horizontalGuides });\n        };\n        _this.setBodyRef = function (ref) { return _this.bodyElement = ref; };\n        _this.setRootTableRef = function (ref) { return _this.rootTableElement = ref; };\n        var _a = _this.props, children = _a.children, columnWidths = _a.columnWidths, defaultRowHeight = _a.defaultRowHeight, defaultColumnWidth = _a.defaultColumnWidth, numRows = _a.numRows, rowHeights = _a.rowHeights;\n        _this.childrenArray = React.Children.toArray(children);\n        _this.columnIdToIndex = Table_1.createColumnIdIndex(_this.childrenArray);\n        // Create height/width arrays using the lengths from props and\n        // children, the default values from props, and finally any sparse\n        // arrays passed into props.\n        var newColumnWidths = _this.childrenArray.map(function () { return defaultColumnWidth; });\n        newColumnWidths = utils_1.Utils.assignSparseValues(newColumnWidths, columnWidths);\n        var newRowHeights = utils_1.Utils.times(numRows, function () { return defaultRowHeight; });\n        newRowHeights = utils_1.Utils.assignSparseValues(newRowHeights, rowHeights);\n        var selectedRegions = (props.selectedRegions == null) ? [] : props.selectedRegions;\n        var focusedCell = FocusedCellUtils.getInitialFocusedCell(props.enableFocus, props.focusedCell, undefined, selectedRegions);\n        _this.state = {\n            columnWidths: newColumnWidths,\n            focusedCell: focusedCell,\n            isLayoutLocked: false,\n            isReordering: false,\n            rowHeights: newRowHeights,\n            selectedRegions: selectedRegions,\n        };\n        return _this;\n    }\n    Table.createColumnIdIndex = function (children) {\n        var columnIdToIndex = {};\n        for (var i = 0; i < children.length; i++) {\n            var key = children[i].props.id;\n            if (key != null) {\n                columnIdToIndex[String(key)] = i;\n            }\n        }\n        return columnIdToIndex;\n    };\n    // Instance methods\n    // ================\n    /**\n     * Resize all rows in the table to the height of the tallest visible cell in the specified columns.\n     * If no indices are provided, default to using the tallest visible cell from all columns in view.\n     */\n    Table.prototype.resizeRowsByTallestCell = function (columnIndices) {\n        var _this = this;\n        var tallest = 0;\n        if (columnIndices == null) {\n            // Consider all columns currently in viewport\n            var viewportColumnIndices = this.grid.getColumnIndicesInRect(this.state.viewportRect);\n            for (var col = viewportColumnIndices.columnIndexStart; col <= viewportColumnIndices.columnIndexEnd; col++) {\n                tallest = Math.max(tallest, this.locator.getTallestVisibleCellInColumn(col));\n            }\n        }\n        else {\n            var columnIndicesArray = Array.isArray(columnIndices) ? columnIndices : [columnIndices];\n            var tallestByColumns = columnIndicesArray.map(function (col) { return _this.locator.getTallestVisibleCellInColumn(col); });\n            tallest = Math.max.apply(Math, tallestByColumns);\n        }\n        var rowHeights = Array(this.state.rowHeights.length).fill(tallest);\n        this.invalidateGrid();\n        this.setState({ rowHeights: rowHeights });\n    };\n    /**\n     * Scrolls the table to the target region in a fashion appropriate to the target region's\n     * cardinality:\n     *\n     * - CELLS: Scroll the top-left cell in the target region to the top-left corner of the viewport.\n     * - FULL_ROWS: Scroll the top-most row in the target region to the top of the viewport.\n     * - FULL_COLUMNS: Scroll the left-most column in the target region to the left side of the viewport.\n     * - FULL_TABLE: Scroll the top-left cell in the table to the top-left corner of the viewport.\n     *\n     * If there are active frozen rows and/or columns, the target region will be positioned in the\n     * top-left corner of the non-frozen area (unless the target region itself is in the frozen\n     * area).\n     *\n     * If the target region is close to the bottom-right corner of the table, this function will\n     * simply scroll the target region as close to the top-left as possible until the bottom-right\n     * corner is reached.\n     */\n    Table.prototype.scrollToRegion = function (region) {\n        var _a = this.state.viewportRect, currScrollLeft = _a.left, currScrollTop = _a.top;\n        var numFrozenRows = this.getNumFrozenRowsClamped();\n        var numFrozenColumns = this.getNumFrozenColumnsClamped();\n        var _b = ScrollUtils.getScrollPositionForRegion(region, currScrollLeft, currScrollTop, this.grid.getCumulativeWidthBefore, this.grid.getCumulativeHeightBefore, numFrozenRows, numFrozenColumns), scrollLeft = _b.scrollLeft, scrollTop = _b.scrollTop;\n        var correctedScrollLeft = this.shouldDisableHorizontalScroll() ? 0 : scrollLeft;\n        var correctedScrollTop = this.shouldDisableVerticalScroll() ? 0 : scrollTop;\n        // defer to the quadrant stack to keep all quadrant positions in sync\n        this.quadrantStackInstance.scrollToPosition(correctedScrollLeft, correctedScrollTop);\n    };\n    // React lifecycle\n    // ===============\n    Table.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        var propKeysBlacklist = { exclude: Table_1.SHALLOW_COMPARE_PROP_KEYS_BLACKLIST };\n        var stateKeysBlacklist = { exclude: Table_1.SHALLOW_COMPARE_STATE_KEYS_BLACKLIST };\n        return !utils_1.Utils.shallowCompareKeys(this.props, nextProps, propKeysBlacklist)\n            || !utils_1.Utils.shallowCompareKeys(this.state, nextState, stateKeysBlacklist)\n            || !utils_1.Utils.deepCompareKeys(this.props, nextProps, Table_1.SHALLOW_COMPARE_PROP_KEYS_BLACKLIST)\n            || !utils_1.Utils.deepCompareKeys(this.state, nextState, Table_1.SHALLOW_COMPARE_STATE_KEYS_BLACKLIST);\n    };\n    Table.prototype.componentWillReceiveProps = function (nextProps) {\n        var _this = this;\n        var children = nextProps.children, columnWidths = nextProps.columnWidths, defaultColumnWidth = nextProps.defaultColumnWidth, defaultRowHeight = nextProps.defaultRowHeight, enableFocus = nextProps.enableFocus, focusedCell = nextProps.focusedCell, numRows = nextProps.numRows, rowHeights = nextProps.rowHeights, selectedRegions = nextProps.selectedRegions, selectionModes = nextProps.selectionModes;\n        var newChildArray = React.Children.toArray(children);\n        var numCols = newChildArray.length;\n        // Try to maintain widths of columns by looking up the width of the\n        // column that had the same `ID` prop. If none is found, use the\n        // previous width at the same index.\n        var previousColumnWidths = newChildArray.map(function (child, index) {\n            var mappedIndex = _this.columnIdToIndex[child.props.id];\n            return _this.state.columnWidths[mappedIndex != null ? mappedIndex : index];\n        });\n        // Make sure the width/height arrays have the correct length, but keep\n        // as many existing widths/heights when possible. Also, apply the\n        // sparse width/heights from props.\n        var newColumnWidths = this.state.columnWidths;\n        newColumnWidths = utils_1.Utils.arrayOfLength(newColumnWidths, numCols, defaultColumnWidth);\n        newColumnWidths = utils_1.Utils.assignSparseValues(newColumnWidths, previousColumnWidths);\n        newColumnWidths = utils_1.Utils.assignSparseValues(newColumnWidths, columnWidths);\n        var newRowHeights = this.state.rowHeights;\n        newRowHeights = utils_1.Utils.arrayOfLength(newRowHeights, numRows, defaultRowHeight);\n        newRowHeights = utils_1.Utils.assignSparseValues(newRowHeights, rowHeights);\n        var newSelectedRegions = selectedRegions;\n        if (selectedRegions == null) {\n            // if we're in uncontrolled mode, filter out all selected regions that don't\n            // fit in the current new table dimensions\n            newSelectedRegions = this.state.selectedRegions.filter(function (region) {\n                var regionCardinality = regions_2.Regions.getRegionCardinality(region);\n                var isSelectionModeEnabled = selectionModes.indexOf(regionCardinality) >= 0;\n                return isSelectionModeEnabled && regions_2.Regions.isRegionValidForTable(region, numRows, numCols);\n            });\n        }\n        var newFocusedCell = FocusedCellUtils.getInitialFocusedCell(enableFocus, focusedCell, this.state.focusedCell, newSelectedRegions);\n        this.childrenArray = newChildArray;\n        this.columnIdToIndex = Table_1.createColumnIdIndex(this.childrenArray);\n        this.invalidateGrid();\n        this.setState({\n            columnWidths: newColumnWidths,\n            focusedCell: newFocusedCell,\n            rowHeights: newRowHeights,\n            selectedRegions: newSelectedRegions,\n        });\n    };\n    Table.prototype.render = function () {\n        var _a = this.props, className = _a.className, isRowHeaderShown = _a.isRowHeaderShown;\n        var _b = this.state, horizontalGuides = _b.horizontalGuides, verticalGuides = _b.verticalGuides;\n        this.validateGrid();\n        var classes = classNames(Classes.TABLE_CONTAINER, (_c = {},\n            _c[Classes.TABLE_REORDERING] = this.state.isReordering,\n            _c[Classes.TABLE_NO_VERTICAL_SCROLL] = this.shouldDisableVerticalScroll(),\n            _c[Classes.TABLE_NO_HORIZONTAL_SCROLL] = this.shouldDisableHorizontalScroll(),\n            _c[Classes.TABLE_SELECTION_ENABLED] = this.isSelectionModeEnabled(regions_2.RegionCardinality.CELLS),\n            _c), className);\n        return (React.createElement(\"div\", { className: classes, ref: this.setRootTableRef, onScroll: this.handleRootScroll },\n            React.createElement(tableQuadrantStack_1.TableQuadrantStack, { bodyRef: this.setBodyRef, columnHeaderRef: this.refHandlers.columnHeader, grid: this.grid, handleColumnResizeGuide: this.handleColumnResizeGuide, handleColumnsReordering: this.handleColumnsReordering, handleRowResizeGuide: this.handleRowResizeGuide, handleRowsReordering: this.handleRowsReordering, isHorizontalScrollDisabled: this.shouldDisableHorizontalScroll(), isRowHeaderShown: isRowHeaderShown, isVerticalScrollDisabled: this.shouldDisableVerticalScroll(), numFrozenColumns: this.getNumFrozenColumnsClamped(), numFrozenRows: this.getNumFrozenRowsClamped(), onScroll: this.handleBodyScroll, quadrantRef: this.refHandlers.mainQuadrant, ref: this.refHandlers.quadrantStack, renderBody: this.renderBody, renderColumnHeader: this.renderColumnHeader, renderMenu: this.renderMenu, renderRowHeader: this.renderRowHeader, rowHeaderRef: this.refHandlers.rowHeader, scrollContainerRef: this.refHandlers.scrollContainer }),\n            React.createElement(\"div\", { className: classNames(Classes.TABLE_OVERLAY_LAYER, \"bp-table-reordering-cursor-overlay\") }),\n            React.createElement(guides_1.GuideLayer, { className: Classes.TABLE_RESIZE_GUIDES, verticalGuides: verticalGuides, horizontalGuides: horizontalGuides })));\n        var _c;\n    };\n    Table.prototype.renderHotkeys = function () {\n        var hotkeys = [this.maybeRenderCopyHotkey(), this.maybeRenderSelectAllHotkey(), this.maybeRenderFocusHotkeys()];\n        return (React.createElement(core_2.Hotkeys, null, hotkeys.filter(function (element) { return element !== undefined; })));\n    };\n    /**\n     * When the component mounts, the HTML Element refs will be available, so\n     * we constructor the Locator, which queries the elements' bounding\n     * ClientRects.\n     */\n    Table.prototype.componentDidMount = function () {\n        var _this = this;\n        this.validateGrid();\n        this.locator = new locator_1.Locator(this.mainQuadrantElement, this.scrollContainerElement);\n        this.updateLocator();\n        this.updateViewportRect(this.locator.getViewportRect());\n        this.resizeSensorDetach = resizeSensor_1.ResizeSensor.attach(this.rootTableElement, function () {\n            if (!_this.state.isLayoutLocked) {\n                _this.updateViewportRect(_this.locator.getViewportRect());\n            }\n        });\n    };\n    Table.prototype.componentWillUnmount = function () {\n        if (this.resizeSensorDetach != null) {\n            this.resizeSensorDetach();\n            delete this.resizeSensorDetach;\n        }\n    };\n    Table.prototype.componentDidUpdate = function () {\n        if (this.locator != null) {\n            this.validateGrid();\n            this.updateLocator();\n        }\n        this.maybeScrollTableIntoView();\n    };\n    Table.prototype.validateProps = function (props) {\n        var children = props.children, numFrozenColumns = props.numFrozenColumns, numFrozenRows = props.numFrozenRows, numRows = props.numRows;\n        var numColumns = React.Children.count(children);\n        React.Children.forEach(children, function (child) {\n            // save as a variable so that union type narrowing works\n            var childType = child.type;\n            if (typeof childType === \"string\") {\n                console.warn(Errors.TABLE_NON_COLUMN_CHILDREN_WARNING);\n            }\n            else {\n                var isColumn = childType.prototype === column_1.Column.prototype || column_1.Column.prototype.isPrototypeOf(childType);\n                if (!isColumn) {\n                    console.warn(Errors.TABLE_NON_COLUMN_CHILDREN_WARNING);\n                }\n            }\n        });\n        if (numFrozenColumns != null && (numFrozenColumns < 0 || numFrozenColumns > numColumns)) {\n            console.warn(Errors.TABLE_NUM_FROZEN_COLUMNS_BOUND_WARNING);\n        }\n        if (numFrozenRows != null && (numFrozenRows < 0 || (numRows != null && numFrozenRows > numRows))) {\n            console.warn(Errors.TABLE_NUM_FROZEN_ROWS_BOUND_WARNING);\n        }\n    };\n    // Quadrant refs\n    // =============\n    Table.prototype.moveFocusCell = function (primaryAxis, secondaryAxis, isUpOrLeft, newFocusedCell, focusCellRegion) {\n        var grid = this.grid;\n        var selectedRegions = this.state.selectedRegions;\n        var primaryAxisPlural = primaryAxis === \"row\" ? \"rows\" : \"cols\";\n        var secondaryAxisPlural = secondaryAxis === \"row\" ? \"rows\" : \"cols\";\n        var movementDirection = isUpOrLeft ? -1 : +1;\n        var regionIntervalIndex = isUpOrLeft ? 1 : 0;\n        // try moving the cell in the direction along the primary axis\n        newFocusedCell[primaryAxis] += movementDirection;\n        var isPrimaryIndexOutOfBounds = isUpOrLeft\n            ? newFocusedCell[primaryAxis] < focusCellRegion[primaryAxisPlural][0]\n            : newFocusedCell[primaryAxis] > focusCellRegion[primaryAxisPlural][1];\n        if (isPrimaryIndexOutOfBounds) {\n            // if we moved outside the bounds of selection region,\n            // move to the start (or end) of the primary axis, and move one along the secondary\n            newFocusedCell[primaryAxis] = focusCellRegion[primaryAxisPlural][regionIntervalIndex];\n            newFocusedCell[secondaryAxis] += movementDirection;\n            var isSecondaryIndexOutOfBounds = isUpOrLeft\n                ? newFocusedCell[secondaryAxis] < focusCellRegion[secondaryAxisPlural][0]\n                : newFocusedCell[secondaryAxis] > focusCellRegion[secondaryAxisPlural][1];\n            if (isSecondaryIndexOutOfBounds) {\n                // if moving along the secondary also moves us outside\n                // go to the start (or end) of the next (or previous region)\n                // (note that if there's only one region you'll be moving to the opposite corner, which is fine)\n                var newFocusCellSelectionIndex = newFocusedCell.focusSelectionIndex + movementDirection;\n                // newFocusCellSelectionIndex should be one more (or less), unless we need to wrap around\n                if (isUpOrLeft\n                    ? newFocusCellSelectionIndex < 0\n                    : newFocusCellSelectionIndex >= selectedRegions.length) {\n                    newFocusCellSelectionIndex = isUpOrLeft\n                        ? selectedRegions.length - 1\n                        : 0;\n                }\n                var newFocusCellRegion = regions_2.Regions.getCellRegionFromRegion(selectedRegions[newFocusCellSelectionIndex], grid.numRows, grid.numCols);\n                newFocusedCell = {\n                    col: newFocusCellRegion.cols[regionIntervalIndex],\n                    focusSelectionIndex: newFocusCellSelectionIndex,\n                    row: newFocusCellRegion.rows[regionIntervalIndex],\n                };\n            }\n        }\n        return newFocusedCell;\n    };\n    Table.prototype.shouldDisableVerticalScroll = function () {\n        var fillBodyWithGhostCells = this.props.fillBodyWithGhostCells;\n        var viewportRect = this.state.viewportRect;\n        var rowIndices = this.grid.getRowIndicesInRect(viewportRect, fillBodyWithGhostCells);\n        var isViewportUnscrolledVertically = viewportRect != null && viewportRect.top === 0;\n        var areRowHeadersLoading = this.hasLoadingOption(this.props.loadingOptions, regions_2.TableLoadingOption.ROW_HEADERS);\n        var areGhostRowsVisible = fillBodyWithGhostCells && this.grid.isGhostIndex(rowIndices.rowIndexEnd, 0);\n        return areGhostRowsVisible && (isViewportUnscrolledVertically || areRowHeadersLoading);\n    };\n    Table.prototype.shouldDisableHorizontalScroll = function () {\n        var fillBodyWithGhostCells = this.props.fillBodyWithGhostCells;\n        var viewportRect = this.state.viewportRect;\n        var columnIndices = this.grid.getColumnIndicesInRect(viewportRect, fillBodyWithGhostCells);\n        var isViewportUnscrolledHorizontally = viewportRect != null && viewportRect.left === 0;\n        var areGhostColumnsVisible = fillBodyWithGhostCells && this.grid.isGhostIndex(0, columnIndices.columnIndexEnd);\n        var areColumnHeadersLoading = this.hasLoadingOption(this.props.loadingOptions, regions_2.TableLoadingOption.COLUMN_HEADERS);\n        return areGhostColumnsVisible && (isViewportUnscrolledHorizontally || areColumnHeadersLoading);\n    };\n    Table.prototype.maybeScrollTableIntoView = function () {\n        var viewportRect = this.state.viewportRect;\n        var tableBottom = this.grid.getCumulativeHeightAt(this.grid.numRows - 1);\n        var tableRight = this.grid.getCumulativeWidthAt(this.grid.numCols - 1);\n        var nextScrollTop = (tableBottom < viewportRect.top + viewportRect.height)\n            ? Math.max(0, tableBottom - viewportRect.height)\n            : viewportRect.top;\n        var nextScrollLeft = (tableRight < viewportRect.left + viewportRect.width)\n            ? Math.max(0, tableRight - viewportRect.width)\n            : viewportRect.left;\n        this.syncViewportPosition(nextScrollLeft, nextScrollTop);\n    };\n    Table.prototype.getColumnProps = function (columnIndex) {\n        var column = this.childrenArray[columnIndex];\n        return column.props;\n    };\n    Table.prototype.isGuidesShowing = function () {\n        return this.state.verticalGuides != null || this.state.horizontalGuides != null;\n    };\n    Table.prototype.isSelectionModeEnabled = function (selectionMode) {\n        return this.props.selectionModes.indexOf(selectionMode) >= 0;\n    };\n    Table.prototype.getEnabledSelectionHandler = function (selectionMode) {\n        if (!this.isSelectionModeEnabled(selectionMode)) {\n            // If the selection mode isn't enabled, return a callback that\n            // will clear the selection. For example, if row selection is\n            // disabled, clicking on the row header will clear the table's\n            // selection. If all selection modes are enabled, clicking on the\n            // same region twice will clear the selection.\n            return this.clearSelection;\n        }\n        else {\n            return this.handleSelection;\n        }\n    };\n    Table.prototype.invalidateGrid = function () {\n        this.grid = null;\n    };\n    Table.prototype.validateGrid = function () {\n        if (this.grid == null) {\n            var _a = this.props, defaultRowHeight = _a.defaultRowHeight, defaultColumnWidth = _a.defaultColumnWidth;\n            var _b = this.state, rowHeights = _b.rowHeights, columnWidths = _b.columnWidths;\n            this.grid = new grid_1.Grid(rowHeights, columnWidths, grid_1.Grid.DEFAULT_BLEED, defaultRowHeight, defaultColumnWidth);\n            this.invokeOnVisibleCellsChangeCallback(this.state.viewportRect);\n        }\n    };\n    /**\n     * Renders a `RegionLayer`, applying styles to the regions using the\n     * supplied `IRegionStyler`. `RegionLayer` is a `PureRender` component, so\n     * the `IRegionStyler` should be a new instance on every render if we\n     * intend to redraw the region layer.\n     */\n    Table.prototype.maybeRenderRegions = function (getRegionStyle, quadrantType) {\n        if (this.isGuidesShowing() && !this.state.isReordering) {\n            // we want to show guides *and* the selection styles when reordering rows or columns\n            return undefined;\n        }\n        var regionGroups = regions_2.Regions.joinStyledRegionGroups(this.state.selectedRegions, this.props.styledRegionGroups, this.state.focusedCell);\n        return regionGroups.map(function (regionGroup, index) {\n            var regionStyles = regionGroup.regions.map(function (region) { return getRegionStyle(region, quadrantType); });\n            return (React.createElement(regions_1.RegionLayer, { className: classNames(regionGroup.className), key: index, regions: regionGroup.regions, regionStyles: regionStyles }));\n        });\n    };\n    Table.prototype.maybeRenderCopyHotkey = function () {\n        var getCellClipboardData = this.props.getCellClipboardData;\n        if (getCellClipboardData != null) {\n            return (React.createElement(core_2.Hotkey, { key: \"copy-hotkey\", label: \"Copy selected table cells\", group: \"Table\", combo: \"mod+c\", onKeyDown: this.handleCopy }));\n        }\n        else {\n            return undefined;\n        }\n    };\n    Table.prototype.maybeRenderFocusHotkeys = function () {\n        var enableFocus = this.props.enableFocus;\n        if (enableFocus != null) {\n            return [\n                React.createElement(core_2.Hotkey, { key: \"move left\", label: \"Move focus cell left\", group: \"Table\", combo: \"left\", onKeyDown: this.handleFocusMoveLeft }),\n                React.createElement(core_2.Hotkey, { key: \"move right\", label: \"Move focus cell right\", group: \"Table\", combo: \"right\", onKeyDown: this.handleFocusMoveRight }),\n                React.createElement(core_2.Hotkey, { key: \"move up\", label: \"Move focus cell up\", group: \"Table\", combo: \"up\", onKeyDown: this.handleFocusMoveUp }),\n                React.createElement(core_2.Hotkey, { key: \"move down\", label: \"Move focus cell down\", group: \"Table\", combo: \"down\", onKeyDown: this.handleFocusMoveDown }),\n                React.createElement(core_2.Hotkey, { key: \"move tab\", label: \"Move focus cell tab\", group: \"Table\", combo: \"tab\", onKeyDown: this.handleFocusMoveRightInternal }),\n                React.createElement(core_2.Hotkey, { key: \"move shift-tab\", label: \"Move focus cell shift tab\", group: \"Table\", combo: \"shift+tab\", onKeyDown: this.handleFocusMoveLeftInternal }),\n                React.createElement(core_2.Hotkey, { key: \"move enter\", label: \"Move focus cell enter\", group: \"Table\", combo: \"enter\", onKeyDown: this.handleFocusMoveDownInternal }),\n                React.createElement(core_2.Hotkey, { key: \"move shift-enter\", label: \"Move focus cell shift enter\", group: \"Table\", combo: \"shift+enter\", onKeyDown: this.handleFocusMoveUpInternal }),\n            ];\n        }\n        else {\n            return [];\n        }\n    };\n    Table.prototype.maybeRenderSelectAllHotkey = function () {\n        if (this.isSelectionModeEnabled(regions_2.RegionCardinality.FULL_TABLE)) {\n            return (React.createElement(core_2.Hotkey, { key: \"select-all-hotkey\", label: \"Select all\", group: \"Table\", combo: \"mod+a\", onKeyDown: this.handleSelectAllHotkey }));\n        }\n        else {\n            return undefined;\n        }\n    };\n    Table.prototype.syncViewportPosition = function (nextScrollLeft, nextScrollTop) {\n        var viewportRect = this.state.viewportRect;\n        var didScrollTopChange = nextScrollTop !== viewportRect.top;\n        var didScrollLeftChange = nextScrollLeft !== viewportRect.left;\n        if (didScrollTopChange || didScrollLeftChange) {\n            // we need to modify the scroll container explicitly for the viewport to shift. in so\n            // doing, we add the size of the header elements, which are not technically part of the\n            // \"grid\" concept (the grid only consists of body cells at present).\n            if (didScrollTopChange) {\n                var topCorrection = this.shouldDisableVerticalScroll() ? 0 : this.columnHeaderElement.clientHeight;\n                this.scrollContainerElement.scrollTop = nextScrollTop + topCorrection;\n            }\n            if (didScrollLeftChange) {\n                var leftCorrection = this.shouldDisableHorizontalScroll() ? 0 : this.rowHeaderElement.clientWidth;\n                this.scrollContainerElement.scrollLeft = nextScrollLeft + leftCorrection;\n            }\n            var nextViewportRect = new rect_1.Rect(nextScrollLeft, nextScrollTop, viewportRect.width, viewportRect.height);\n            this.updateViewportRect(nextViewportRect);\n        }\n    };\n    Table.prototype.updateLocator = function () {\n        var rowHeaderWidth = this.rowHeaderElement == null ? 0 : this.rowHeaderElement.getBoundingClientRect().width;\n        var columnHeaderHeight = this.columnHeaderElement == null ? 0 : this.columnHeaderElement.getBoundingClientRect().height;\n        this.locator.setGrid(this.grid)\n            .setNumFrozenRows(this.getNumFrozenRowsClamped())\n            .setNumFrozenColumns(this.getNumFrozenColumnsClamped())\n            .setRowHeaderWidth(rowHeaderWidth)\n            .setColumnHeaderHeight(columnHeaderHeight);\n    };\n    Table.prototype.invokeOnVisibleCellsChangeCallback = function (viewportRect) {\n        var columnIndices = this.grid.getColumnIndicesInRect(viewportRect);\n        var rowIndices = this.grid.getRowIndicesInRect(viewportRect);\n        core_1.Utils.safeInvoke(this.props.onVisibleCellsChange, rowIndices, columnIndices);\n    };\n    Table.prototype.getNumFrozenColumnsClamped = function (props) {\n        if (props === void 0) { props = this.props; }\n        var numFrozenColumns = props.numFrozenColumns;\n        var numColumns = React.Children.count(props.children);\n        return utils_1.Utils.clamp(numFrozenColumns, 0, numColumns);\n    };\n    Table.prototype.getNumFrozenRowsClamped = function (props) {\n        if (props === void 0) { props = this.props; }\n        var numFrozenRows = props.numFrozenRows, numRows = props.numRows;\n        return utils_1.Utils.clamp(numFrozenRows, 0, numRows);\n    };\n    return Table;\n}(core_1.AbstractComponent));\nTable.defaultProps = {\n    allowMultipleSelection: true,\n    defaultColumnWidth: 150,\n    defaultRowHeight: 20,\n    enableFocus: false,\n    fillBodyWithGhostCells: false,\n    isRowHeaderShown: true,\n    loadingOptions: [],\n    minColumnWidth: 50,\n    minRowHeight: 20,\n    numRows: 0,\n    renderMode: renderMode_1.RenderMode.BATCH,\n    renderRowHeader: rowHeader_1.renderDefaultRowHeader,\n    selectionModes: regions_2.SelectionModes.ALL,\n};\nTable.SHALLOW_COMPARE_PROP_KEYS_BLACKLIST = [\n    \"selectedRegions\",\n];\nTable.SHALLOW_COMPARE_STATE_KEYS_BLACKLIST = [\n    \"selectedRegions\",\n    \"viewportRect\",\n];\nTable = Table_1 = tslib_1.__decorate([\n    core_2.HotkeysTarget\n], Table);\nexports.Table = Table;\nvar Table_1;\n\n//# sourceMappingURL=table.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/table.js\n// module id = 39\n// module chunks = 0","/**\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar regions_1 = require(\"../../regions\");\nfunction getScrollPositionForRegion(region, currScrollLeft, currScrollTop, getLeftOffset, getTopOffset, numFrozenRows, numFrozenColumns) {\n    if (numFrozenRows === void 0) { numFrozenRows = 0; }\n    if (numFrozenColumns === void 0) { numFrozenColumns = 0; }\n    var cardinality = regions_1.Regions.getRegionCardinality(region);\n    var scrollTop = currScrollTop;\n    var scrollLeft = currScrollLeft;\n    // if these were max-frozen-index values, we would have added 1 before passing to the get*Offset\n    // functions, but the counts are already 1-indexed, so we can just pass those.\n    var frozenColumnsCumulativeWidth = getLeftOffset(numFrozenColumns);\n    var frozenRowsCumulativeHeight = getTopOffset(numFrozenRows);\n    switch (cardinality) {\n        case regions_1.RegionCardinality.CELLS: {\n            // scroll to the top-left corner of the block of cells\n            var topOffset = getTopOffset(region.rows[0]);\n            var leftOffset = getLeftOffset(region.cols[0]);\n            scrollTop = getClampedScrollPosition(topOffset, frozenRowsCumulativeHeight);\n            scrollLeft = getClampedScrollPosition(leftOffset, frozenColumnsCumulativeWidth);\n            break;\n        }\n        case regions_1.RegionCardinality.FULL_ROWS: {\n            // scroll to the top of the row block\n            var topOffset = getTopOffset(region.rows[0]);\n            scrollTop = getClampedScrollPosition(topOffset, frozenRowsCumulativeHeight);\n            break;\n        }\n        case regions_1.RegionCardinality.FULL_COLUMNS: {\n            // scroll to the left side of the column block\n            var leftOffset = getLeftOffset(region.cols[0]);\n            scrollLeft = getClampedScrollPosition(leftOffset, frozenColumnsCumulativeWidth);\n            break;\n        }\n        default: {\n            // if it's a FULL_TABLE region, scroll back to the top-left cell of the table\n            scrollTop = 0;\n            scrollLeft = 0;\n            break;\n        }\n    }\n    return { scrollLeft: scrollLeft, scrollTop: scrollTop };\n}\nexports.getScrollPositionForRegion = getScrollPositionForRegion;\n/**\n * Adjust the scroll position to align content just beyond the frozen region, if necessary.\n */\nfunction getClampedScrollPosition(scrollOffset, frozenRegionCumulativeSize) {\n    // if the new scroll offset falls within the frozen region, clamp it to 0\n    return Math.max(scrollOffset - frozenRegionCumulativeSize, 0);\n}\n\n//# sourceMappingURL=scrollUtils.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/internal/scrollUtils.js\n// module id = 40\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar Classes = require(\"../common/classes\");\nvar index_1 = require(\"../common/index\");\nvar resizeHandle_1 = require(\"../interactions/resizeHandle\");\nvar regions_1 = require(\"../regions\");\nvar columnHeaderCell_1 = require(\"./columnHeaderCell\");\nvar header_1 = require(\"./header\");\nvar ColumnHeader = (function (_super) {\n    tslib_1.__extends(ColumnHeader, _super);\n    function ColumnHeader() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.wrapCells = function (cells) {\n            var _a = _this.props, columnIndexStart = _a.columnIndexStart, grid = _a.grid;\n            var tableWidth = grid.getRect().width;\n            var scrollLeftCorrection = _this.props.grid.getCumulativeWidthBefore(columnIndexStart);\n            var style = {\n                // only header cells in view will render, but we need to reposition them to stay in view\n                // as we scroll horizontally.\n                transform: \"translateX(\" + (scrollLeftCorrection || 0) + \"px)\",\n                // reduce the width to clamp the sliding window as we approach the final headers; otherwise,\n                // we'll have tons of useless whitespace at the end.\n                width: tableWidth - scrollLeftCorrection,\n            };\n            var classes = classNames(Classes.TABLE_THEAD, Classes.TABLE_COLUMN_HEADER_TR);\n            // add a wrapper set to the full-table width to ensure container styles stretch from the first\n            // cell all the way to the last\n            return (React.createElement(\"div\", { style: { width: tableWidth } },\n                React.createElement(\"div\", { style: style, className: classes }, cells)));\n        };\n        _this.convertPointToColumn = function (clientXOrY, useMidpoint) {\n            var locator = _this.props.locator;\n            return locator != null ? locator.convertPointToColumn(clientXOrY, useMidpoint) : null;\n        };\n        _this.getCellExtremaClasses = function (index, indexEnd) {\n            return _this.props.grid.getExtremaClasses(0, index, 1, indexEnd);\n        };\n        _this.getColumnWidth = function (index) {\n            return _this.props.grid.getColumnRect(index).width;\n        };\n        _this.getDragCoordinate = function (clientCoords) {\n            return clientCoords[0]; // x-coordinate\n        };\n        _this.getMouseCoordinate = function (event) {\n            return event.clientX;\n        };\n        _this.handleResizeEnd = function (index, size) {\n            _this.props.onResizeGuide(null);\n            _this.props.onColumnWidthChanged(index, size);\n        };\n        _this.handleResizeDoubleClick = function (index) {\n            var _a = _this.props, minColumnWidth = _a.minColumnWidth, maxColumnWidth = _a.maxColumnWidth;\n            var width = _this.props.locator.getWidestVisibleCellInColumn(index);\n            var clampedWidth = index_1.Utils.clamp(width, minColumnWidth, maxColumnWidth);\n            _this.props.onResizeGuide(null);\n            _this.props.onColumnWidthChanged(index, clampedWidth);\n        };\n        _this.handleSizeChanged = function (index, size) {\n            var rect = _this.props.grid.getColumnRect(index);\n            _this.props.onResizeGuide([rect.left + size]);\n        };\n        _this.isCellSelected = function (index) {\n            return regions_1.Regions.hasFullColumn(_this.props.selectedRegions, index);\n        };\n        _this.isGhostIndex = function (index) {\n            return _this.props.grid.isGhostIndex(-1, index);\n        };\n        _this.renderGhostCell = function (index, extremaClasses) {\n            var _a = _this.props, grid = _a.grid, loading = _a.loading;\n            var rect = grid.getGhostCellRect(0, index);\n            var style = {\n                flexBasis: rect.width + \"px\",\n                width: rect.width + \"px\",\n            };\n            return (React.createElement(columnHeaderCell_1.ColumnHeaderCell, { className: classNames(extremaClasses), index: index, key: Classes.columnIndexClass(index), loading: loading, style: style }));\n        };\n        _this.toRegion = function (index1, index2) {\n            return regions_1.Regions.column(index1, index2);\n        };\n        return _this;\n    }\n    ColumnHeader.prototype.render = function () {\n        var _a = this.props, \n        // from IColumnHeaderProps\n        renderHeaderCell = _a.cellRenderer, onColumnWidthChanged = _a.onColumnWidthChanged, \n        // from IColumnWidths\n        minSize = _a.minColumnWidth, maxSize = _a.maxColumnWidth, defaultColumnWidth = _a.defaultColumnWidth, \n        // from IColumnIndices\n        indexStart = _a.columnIndexStart, indexEnd = _a.columnIndexEnd, \n        // from IHeaderProps\n        spreadableProps = tslib_1.__rest(_a, [\"cellRenderer\", \"onColumnWidthChanged\", \"minColumnWidth\", \"maxColumnWidth\", \"defaultColumnWidth\", \"columnIndexStart\", \"columnIndexEnd\"]);\n        return (React.createElement(header_1.Header, tslib_1.__assign({ convertPointToIndex: this.convertPointToColumn, fullRegionCardinality: regions_1.RegionCardinality.FULL_COLUMNS, getCellExtremaClasses: this.getCellExtremaClasses, getCellIndexClass: Classes.columnCellIndexClass, getCellSize: this.getColumnWidth, getDragCoordinate: this.getDragCoordinate, getIndexClass: Classes.columnIndexClass, getMouseCoordinate: this.getMouseCoordinate, handleResizeDoubleClick: this.handleResizeDoubleClick, handleResizeEnd: this.handleResizeEnd, handleSizeChanged: this.handleSizeChanged, headerCellIsReorderablePropName: \"isColumnReorderable\", headerCellIsSelectedPropName: \"isColumnSelected\", indexEnd: indexEnd, indexStart: indexStart, isCellSelected: this.isCellSelected, isGhostIndex: this.isGhostIndex, maxSize: maxSize, minSize: minSize, renderGhostCell: this.renderGhostCell, renderHeaderCell: renderHeaderCell, resizeOrientation: resizeHandle_1.Orientation.VERTICAL, toRegion: this.toRegion, wrapCells: this.wrapCells }, spreadableProps)));\n    };\n    return ColumnHeader;\n}(React.Component));\nColumnHeader.defaultProps = {\n    isReorderable: false,\n    isResizable: true,\n    loading: false,\n};\nexports.ColumnHeader = ColumnHeader;\n\n//# sourceMappingURL=columnHeader.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/headers/columnHeader.js\n// module id = 41\n// module chunks = 0","/**\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar batcher_1 = require(\"../common/batcher\");\nvar Classes = require(\"../common/classes\");\nvar utils_1 = require(\"../common/utils\");\nvar reorderable_1 = require(\"../interactions/reorderable\");\nvar resizable_1 = require(\"../interactions/resizable\");\nvar selectable_1 = require(\"../interactions/selectable\");\nvar regions_1 = require(\"../regions\");\nvar SHALLOW_COMPARE_PROP_KEYS_BLACKLIST = [\n    \"focusedCell\",\n    \"selectedRegions\",\n];\nvar RESET_CELL_KEYS_BLACKLIST = [\n    \"indexEnd\",\n    \"indexStart\",\n];\nvar Header = (function (_super) {\n    tslib_1.__extends(Header, _super);\n    function Header(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        _this.state = {\n            hasSelectionEnded: false,\n        };\n        _this.batcher = new batcher_1.Batcher();\n        _this.locateClick = function (event) {\n            var coord = _this.props.getMouseCoordinate(event);\n            _this.activationIndex = _this.props.convertPointToIndex(coord);\n            return _this.props.toRegion(_this.activationIndex);\n        };\n        _this.locateDragForSelection = function (_event, coords, returnEndOnly) {\n            if (returnEndOnly === void 0) { returnEndOnly = false; }\n            var coord = _this.props.getDragCoordinate(coords.current);\n            var indexStart = _this.activationIndex;\n            var indexEnd = _this.props.convertPointToIndex(coord);\n            return returnEndOnly\n                ? _this.props.toRegion(indexEnd)\n                : _this.props.toRegion(indexStart, indexEnd);\n        };\n        _this.locateDragForReordering = function (_event, coords) {\n            var coord = _this.props.getDragCoordinate(coords.current);\n            var guideIndex = _this.props.convertPointToIndex(coord, true);\n            return (guideIndex < 0) ? undefined : guideIndex;\n        };\n        _this.renderCells = function () {\n            var _a = _this.props, indexStart = _a.indexStart, indexEnd = _a.indexEnd;\n            _this.batcher.startNewBatch();\n            for (var index = indexStart; index <= indexEnd; index++) {\n                _this.batcher.addArgsToBatch(index);\n            }\n            _this.batcher.removeOldAddNew(_this.renderNewCell);\n            if (!_this.batcher.isDone()) {\n                _this.batcher.idleCallback(function () { return _this.forceUpdate(); });\n            }\n            return _this.batcher.getList();\n        };\n        _this.renderNewCell = function (index) {\n            var extremaClasses = _this.props.getCellExtremaClasses(index, _this.props.indexEnd);\n            var renderer = _this.props.isGhostIndex(index)\n                ? _this.props.renderGhostCell\n                : _this.renderCell;\n            return renderer(index, extremaClasses);\n        };\n        _this.renderCell = function (index, extremaClasses) {\n            var _a = _this.props, getIndexClass = _a.getIndexClass, selectedRegions = _a.selectedRegions;\n            var cell = _this.props.renderHeaderCell(index);\n            var isLoading = cell.props.loading != null ? cell.props.loading : _this.props.loading;\n            var isSelected = _this.props.isCellSelected(index);\n            var isEntireCellTargetReorderable = _this.isEntireCellTargetReorderable(isSelected);\n            var className = classNames(extremaClasses, (_b = {},\n                _b[Classes.TABLE_HEADER_REORDERABLE] = isEntireCellTargetReorderable,\n                _b), _this.props.getCellIndexClass(index), cell.props.className);\n            var cellProps = (_c = {\n                    className: className,\n                    index: index\n                },\n                _c[_this.props.headerCellIsSelectedPropName] = isSelected,\n                _c[_this.props.headerCellIsReorderablePropName] = isEntireCellTargetReorderable,\n                _c.loading = isLoading,\n                _c.reorderHandle = _this.maybeRenderReorderHandle(index),\n                _c);\n            var modifiedHandleSizeChanged = function (size) { return _this.props.handleSizeChanged(index, size); };\n            var modifiedHandleResizeEnd = function (size) { return _this.props.handleResizeEnd(index, size); };\n            var modifiedHandleResizeHandleDoubleClick = function () { return _this.props.handleResizeDoubleClick(index); };\n            var baseChildren = (React.createElement(selectable_1.DragSelectable, { allowMultipleSelection: _this.props.allowMultipleSelection, disabled: isEntireCellTargetReorderable, focusedCell: _this.props.focusedCell, ignoredSelectors: [\".\" + Classes.TABLE_REORDER_HANDLE_TARGET], key: getIndexClass(index), locateClick: _this.locateClick, locateDrag: _this.locateDragForSelection, onFocus: _this.props.onFocus, onSelection: _this.handleDragSelectableSelection, onSelectionEnd: _this.handleDragSelectableSelectionEnd, selectedRegions: selectedRegions, selectedRegionTransform: _this.props.selectedRegionTransform },\n                React.createElement(resizable_1.Resizable, { isResizable: _this.props.isResizable, maxSize: _this.props.maxSize, minSize: _this.props.minSize, onDoubleClick: modifiedHandleResizeHandleDoubleClick, onLayoutLock: _this.props.onLayoutLock, onResizeEnd: modifiedHandleResizeEnd, onSizeChanged: modifiedHandleSizeChanged, orientation: _this.props.resizeOrientation, size: _this.props.getCellSize(index) }, React.cloneElement(cell, cellProps))));\n            return _this.isReorderHandleEnabled()\n                ? baseChildren // reordering will be handled by interacting with the reorder handle\n                : _this.wrapInDragReorderable(index, baseChildren, !isEntireCellTargetReorderable);\n            var _b, _c;\n        };\n        _this.handleDragSelectableSelection = function (selectedRegions) {\n            _this.props.onSelection(selectedRegions);\n            _this.setState({ hasSelectionEnded: false });\n        };\n        _this.handleDragSelectableSelectionEnd = function () {\n            _this.activationIndex = null; // not strictly required, but good practice\n            _this.setState({ hasSelectionEnded: true });\n        };\n        _this.isEntireCellTargetReorderable = function (isSelected) {\n            var selectedRegions = _this.props.selectedRegions;\n            // although reordering may be generally enabled for this row/column (via props.isReorderable), the\n            // row/column shouldn't actually become reorderable from a user perspective until a few other\n            // conditions are true:\n            return _this.props.isReorderable\n                && isSelected\n                && _this.state.hasSelectionEnded\n                && regions_1.Regions.getRegionCardinality(selectedRegions[0]) === _this.props.fullRegionCardinality\n                && selectedRegions.length === 1\n                && !_this.isReorderHandleEnabled();\n        };\n        return _this;\n    }\n    Header.prototype.componentDidMount = function () {\n        if (this.props.selectedRegions != null && this.props.selectedRegions.length > 0) {\n            // we already have a selection defined, so we'll want to enable reordering interactions\n            // right away if other criteria are satisfied too.\n            this.setState({ hasSelectionEnded: true });\n        }\n    };\n    Header.prototype.componentWillUnmount = function () {\n        this.batcher.cancelOutstandingCallback();\n    };\n    Header.prototype.componentWillReceiveProps = function (nextProps) {\n        if (nextProps.selectedRegions != null && nextProps.selectedRegions.length > 0) {\n            this.setState({ hasSelectionEnded: true });\n        }\n        else {\n            this.setState({ hasSelectionEnded: false });\n        }\n    };\n    Header.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        return !utils_1.Utils.shallowCompareKeys(this.state, nextState)\n            || !utils_1.Utils.shallowCompareKeys(this.props, nextProps, { exclude: SHALLOW_COMPARE_PROP_KEYS_BLACKLIST })\n            || !utils_1.Utils.deepCompareKeys(this.props, nextProps, SHALLOW_COMPARE_PROP_KEYS_BLACKLIST);\n    };\n    Header.prototype.componentWillUpdate = function (nextProps, nextState) {\n        var resetKeysBlacklist = { exclude: RESET_CELL_KEYS_BLACKLIST };\n        var shouldResetBatcher = !utils_1.Utils.shallowCompareKeys(this.props, nextProps, resetKeysBlacklist);\n        shouldResetBatcher = shouldResetBatcher || !utils_1.Utils.shallowCompareKeys(this.state, nextState);\n        if (shouldResetBatcher) {\n            this.batcher.reset();\n        }\n    };\n    Header.prototype.render = function () {\n        return this.props.wrapCells(this.renderCells());\n    };\n    Header.prototype.isReorderHandleEnabled = function () {\n        // the reorder handle can only appear in the column interaction bar\n        return this.isColumnHeader() && this.props.isReorderable;\n    };\n    Header.prototype.maybeRenderReorderHandle = function (index) {\n        return !this.isReorderHandleEnabled()\n            ? undefined\n            : this.wrapInDragReorderable(index, React.createElement(\"div\", { className: Classes.TABLE_REORDER_HANDLE_TARGET },\n                React.createElement(\"div\", { className: Classes.TABLE_REORDER_HANDLE },\n                    React.createElement(\"span\", { className: classNames(core_1.Classes.ICON_STANDARD, core_1.IconClasses.DRAG_HANDLE_VERTICAL) }))));\n    };\n    Header.prototype.isColumnHeader = function () {\n        return this.props.fullRegionCardinality === regions_1.RegionCardinality.FULL_COLUMNS;\n    };\n    Header.prototype.wrapInDragReorderable = function (index, children, disabled) {\n        return (React.createElement(reorderable_1.DragReorderable, { disabled: disabled, key: this.props.getIndexClass(index), locateClick: this.locateClick, locateDrag: this.locateDragForReordering, onReordered: this.props.onReordered, onReordering: this.props.onReordering, onSelection: this.props.onSelection, onFocus: this.props.onFocus, selectedRegions: this.props.selectedRegions, toRegion: this.props.toRegion }, children));\n    };\n    return Header;\n}(React.Component));\nexports.Header = Header;\n\n//# sourceMappingURL=header.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/headers/header.js\n// module id = 42\n// module chunks = 0","/**\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@blueprintjs/core\");\nvar requestIdleCallback_1 = require(\"./requestIdleCallback\");\n/**\n * This class helps batch updates to large lists.\n *\n * For example, if your React component has many children, updating them all at\n * once may cause jank when reconciling the DOM. This class helps you update\n * only a few children per frame.\n *\n * A typical usage would be:\n *\n * ```tsx\n * public renderChildren = (allChildrenKeys: string[]) => {\n *\n *     batcher.startNewBatch();\n *\n *     allChildrenKeys.forEach((prop1: string, index: number) => {\n *         batcher.addArgsToBatch(prop1, \"prop2\", index);\n *     });\n *\n *     batcher.removeOldAddNew((prop1: string, prop2: string, other: number) => {\n *         return <Child prop1={prop1} prop2={prop2} other={other} />;\n *     });\n *\n *     if (!batcher.isDone()) {\n *         batcher.idleCallback(this.forceUpdate());\n *     }\n *\n *     const currentChildren = batcher.getList();\n *     return currentChildren;\n * }\n *\n * ```\n */\nvar Batcher = (function () {\n    function Batcher() {\n        var _this = this;\n        this.currentObjects = {};\n        this.oldObjects = {};\n        this.batchArgs = {};\n        this.done = true;\n        this.handleIdleCallback = function () {\n            var callback = _this.callback;\n            delete _this.callback;\n            core_1.Utils.safeInvoke(callback);\n        };\n        this.mapCurrentObjectKey = function (key) {\n            return _this.currentObjects[key];\n        };\n    }\n    /**\n     * Resets the \"batch\" and \"current\" sets. This essentially clears the cache\n     * and prevents accidental re-use of \"current\" objects.\n     */\n    Batcher.prototype.reset = function () {\n        this.batchArgs = {};\n        this.oldObjects = this.currentObjects;\n        this.currentObjects = {};\n    };\n    /**\n     * Starts a new \"batch\" argument set\n     */\n    Batcher.prototype.startNewBatch = function () {\n        this.batchArgs = {};\n    };\n    /**\n     * Stores the variadic arguments to be later batched together.\n     *\n     * The arguments must be simple stringifyable objects.\n     */\n    Batcher.prototype.addArgsToBatch = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.batchArgs[args.join(Batcher.ARG_DELIMITER)] = args;\n    };\n    /**\n     * Compares the set of \"batch\" arguments to the \"current\" set. Creates any\n     * new objects using the callback as a factory. Removes old objects.\n     *\n     * Arguments that are in the \"current\" set but were not part of the last\n     * \"batch\" set are considered candidates for removal. Similarly, Arguments\n     * that are part of the \"batch\" set but not the \"current\" set are candidates\n     * for addition.\n     *\n     * The number of objects added and removed may be limited with the\n     * `...Limit` parameters.\n     *\n     * Finally, the batcher determines if the batching is complete if the\n     * \"current\" arguments match the \"batch\" arguments.\n     */\n    Batcher.prototype.removeOldAddNew = function (callback, addNewLimit, removeOldLimit, updateLimit) {\n        var _this = this;\n        if (addNewLimit === void 0) { addNewLimit = Batcher.DEFAULT_ADD_LIMIT; }\n        if (removeOldLimit === void 0) { removeOldLimit = Batcher.DEFAULT_REMOVE_LIMIT; }\n        if (updateLimit === void 0) { updateLimit = Batcher.DEFAULT_UPDATE_LIMIT; }\n        // remove old\n        var keysToRemove = this.setKeysDifference(this.currentObjects, this.batchArgs, removeOldLimit);\n        keysToRemove.forEach(function (key) { return delete _this.currentObjects[key]; });\n        // remove ALL old objects not in batch\n        var keysToRemoveOld = this.setKeysDifference(this.oldObjects, this.batchArgs, -1);\n        keysToRemoveOld.forEach(function (key) { return delete _this.oldObjects[key]; });\n        // copy ALL old objects into current objects if not defined\n        var keysToShallowCopy = Object.keys(this.oldObjects);\n        keysToShallowCopy.forEach(function (key) {\n            if (_this.currentObjects[key] == null) {\n                _this.currentObjects[key] = _this.oldObjects[key];\n            }\n        });\n        // update old objects with factory\n        var keysToUpdate = this.setKeysIntersection(this.oldObjects, this.currentObjects, updateLimit);\n        keysToUpdate.forEach(function (key) {\n            delete _this.oldObjects[key];\n            _this.currentObjects[key] = callback.apply(undefined, _this.batchArgs[key]);\n        });\n        // add new objects with factory\n        var keysToAdd = this.setKeysDifference(this.batchArgs, this.currentObjects, addNewLimit);\n        keysToAdd.forEach(function (key) { return _this.currentObjects[key] = callback.apply(undefined, _this.batchArgs[key]); });\n        // set `done` to true of sets match exactly after add/remove and there\n        // are no \"old objects\" remaining\n        this.done = this.setHasSameKeys(this.batchArgs, this.currentObjects)\n            && Object.keys(this.oldObjects).length === 0;\n    };\n    /**\n     * Returns true of the \"current\" set matches the \"batch\" set.\n     */\n    Batcher.prototype.isDone = function () {\n        return this.done;\n    };\n    /**\n     * Returns all the objects in the \"current\" set.\n     */\n    Batcher.prototype.getList = function () {\n        return Object.keys(this.currentObjects).map(this.mapCurrentObjectKey);\n    };\n    /**\n     * Registers a callback to be invoked on the next idle frame. If a callback\n     * has already been registered, we do not register a new one.\n     */\n    Batcher.prototype.idleCallback = function (callback) {\n        if (!this.callback) {\n            this.callback = callback;\n            requestIdleCallback_1.requestIdleCallback(this.handleIdleCallback);\n        }\n    };\n    Batcher.prototype.cancelOutstandingCallback = function () {\n        delete this.callback;\n    };\n    Batcher.prototype.setKeysDifference = function (a, b, limit) {\n        return this.setKeysOperation(a, b, \"difference\", limit);\n    };\n    Batcher.prototype.setKeysIntersection = function (a, b, limit) {\n        return this.setKeysOperation(a, b, \"intersect\", limit);\n    };\n    /**\n     * Compares the keys of A from B -- and performs an \"intersection\" or\n     * \"difference\" operation on the keys.\n     *\n     * Note that the order of operands A and B matters for the \"difference\"\n     * operation.\n     *\n     * Returns an array of at most `limit` keys.\n     */\n    Batcher.prototype.setKeysOperation = function (a, b, operation, limit) {\n        var result = [];\n        var aKeys = Object.keys(a);\n        for (var i = 0; i < aKeys.length && (limit < 0 || result.length < limit); i++) {\n            var key = aKeys[i];\n            if ((operation === \"difference\" && a[key] && !b[key]) ||\n                (operation === \"intersect\" && a[key] && b[key])) {\n                result.push(key);\n            }\n        }\n        return result;\n    };\n    /**\n     * Returns true of objects `a` and `b` have exactly the same keys.\n     */\n    Batcher.prototype.setHasSameKeys = function (a, b) {\n        var aKeys = Object.keys(a);\n        var bKeys = Object.keys(b);\n        if (aKeys.length !== bKeys.length) {\n            return false;\n        }\n        for (var _i = 0, aKeys_1 = aKeys; _i < aKeys_1.length; _i++) {\n            var aKey = aKeys_1[_i];\n            if (b[aKey] === undefined) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return Batcher;\n}());\nBatcher.DEFAULT_ADD_LIMIT = 20;\nBatcher.DEFAULT_UPDATE_LIMIT = 20;\nBatcher.DEFAULT_REMOVE_LIMIT = 20;\nBatcher.ARG_DELIMITER = \"|\";\nexports.Batcher = Batcher;\n\n//# sourceMappingURL=batcher.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/batcher.js\n// module id = 43\n// module chunks = 0","/**\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Event name for `postMessage`\n */\nvar MESSAGE_EVENT_DATA = \"blueprint-table-post-message\";\n/**\n * Object that holds state for managing idle callbacks\n */\nvar IDLE_STATE = {\n    callbacks: [],\n    triggered: false,\n};\nvar handleIdle = function (event) {\n    if (event.source !== window || event.data !== MESSAGE_EVENT_DATA) {\n        return;\n    }\n    IDLE_STATE.triggered = false;\n    var callback = null;\n    if (IDLE_STATE.callbacks.length > 0) {\n        callback = IDLE_STATE.callbacks.shift();\n    }\n    if (IDLE_STATE.callbacks.length > 0) {\n        triggerIdleFrame();\n    }\n    // finally, invoke the callback. exceptions will be propagated\n    if (callback) {\n        callback();\n    }\n};\n// check for window since we might be in a headless server environment\nif (typeof window !== \"undefined\") {\n    if (window.addEventListener != null) {\n        window.addEventListener(\"message\", handleIdle, false);\n    }\n}\nvar triggerIdleFrame = function () {\n    if (IDLE_STATE.triggered) {\n        return;\n    }\n    IDLE_STATE.triggered = true;\n    /**\n     * This is the magic that will wait for the browser to be \"idle\" before\n     * invoking the callback.\n     *\n     * First, we use nested calls to `requestAnimationFrame` which will cause\n     * the inner callback to be invoked on the NEXT FRAME.\n     *\n     * Then, we call to `postMessage` to invoke the `handleIdle` method only\n     * once the current stack frame is empty.\n     *\n     * With this approach, the idle callback will be invoked at most once per\n     * frame and only after the stack frame is empty.\n     */\n    requestAnimationFrame(function () {\n        requestAnimationFrame(function () {\n            postMessage(MESSAGE_EVENT_DATA, \"*\");\n        });\n    });\n};\n/**\n * Invokes the provided callback on the next available frame after the stack\n * frame is empty.\n *\n * At most one callback per frame is invoked, and the callback may be delayed\n * multiple frames until the page is idle.\n *\n * TODO: return a token from this method that allows you to cancel the callback\n * (otherwise the callback list may increase without bound).\n */\nexports.requestIdleCallback = function (callback) {\n    IDLE_STATE.callbacks.push(callback);\n    triggerIdleFrame();\n};\n\n//# sourceMappingURL=requestIdleCallback.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/requestIdleCallback.js\n// module id = 44\n// module chunks = 0","/**\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar PureRender = require(\"pure-render-decorator\");\nvar React = require(\"react\");\nvar utils_1 = require(\"../common/utils\");\nvar draggable_1 = require(\"../interactions/draggable\");\nvar regions_1 = require(\"../regions\");\nvar DragReorderable = (function (_super) {\n    tslib_1.__extends(DragReorderable, _super);\n    function DragReorderable() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleActivate = function (event) {\n            if (!utils_1.Utils.isLeftClick(event) || _this.props.disabled) {\n                return false;\n            }\n            var region = _this.props.locateClick(event);\n            if (!regions_1.Regions.isValid(region)) {\n                return false;\n            }\n            var cardinality = regions_1.Regions.getRegionCardinality(region);\n            var isColumnHeader = cardinality === regions_1.RegionCardinality.FULL_COLUMNS;\n            var isRowHeader = cardinality === regions_1.RegionCardinality.FULL_ROWS;\n            if (!isColumnHeader && !isRowHeader) {\n                return false;\n            }\n            var selectedRegions = _this.props.selectedRegions;\n            var selectedRegionIndex = regions_1.Regions.findContainingRegion(selectedRegions, region);\n            if (selectedRegionIndex >= 0) {\n                var selectedRegion = selectedRegions[selectedRegionIndex];\n                if (regions_1.Regions.getRegionCardinality(selectedRegion) !== cardinality) {\n                    // ignore FULL_TABLE selections\n                    return false;\n                }\n                // cache for easy access later in the lifecycle\n                var selectedInterval = isRowHeader ? selectedRegion.rows : selectedRegion.cols;\n                _this.selectedRegionStartIndex = selectedInterval[0];\n                // add 1 because the selected interval is inclusive, which simple subtraction doesn't\n                // account for (e.g. in a FULL_COLUMNS range from 3 to 6, 6 - 3 = 3, but the selection\n                // actually includes four columns: 3, 4, 5, and 6)\n                _this.selectedRegionLength = selectedInterval[1] - selectedInterval[0] + 1;\n            }\n            else {\n                // select the new region to avoid complex and unintuitive UX w/r/t the existing selection\n                _this.maybeSelectRegion(region);\n                var regionRange = isRowHeader ? region.rows : region.cols;\n                _this.selectedRegionStartIndex = regionRange[0];\n                _this.selectedRegionLength = regionRange[1] - regionRange[0] + 1;\n            }\n            return true;\n        };\n        _this.handleDragMove = function (event, coords) {\n            var oldIndex = _this.selectedRegionStartIndex;\n            var guideIndex = _this.props.locateDrag(event, coords);\n            var length = _this.selectedRegionLength;\n            var reorderedIndex = utils_1.Utils.guideIndexToReorderedIndex(oldIndex, guideIndex, length);\n            _this.props.onReordering(oldIndex, reorderedIndex, length);\n        };\n        _this.handleDragEnd = function (event, coords) {\n            var oldIndex = _this.selectedRegionStartIndex;\n            var guideIndex = _this.props.locateDrag(event, coords);\n            var length = _this.selectedRegionLength;\n            var reorderedIndex = utils_1.Utils.guideIndexToReorderedIndex(oldIndex, guideIndex, length);\n            _this.props.onReordered(oldIndex, reorderedIndex, length);\n            // the newly reordered region becomes the only selection\n            var newRegion = _this.props.toRegion(reorderedIndex, reorderedIndex + length - 1);\n            _this.maybeSelectRegion(newRegion);\n            // resetting is not strictly required, but it's cleaner\n            _this.selectedRegionStartIndex = undefined;\n            _this.selectedRegionLength = undefined;\n        };\n        return _this;\n    }\n    DragReorderable.prototype.render = function () {\n        var draggableProps = this.getDraggableProps();\n        return (React.createElement(draggable_1.Draggable, tslib_1.__assign({}, draggableProps, { preventDefault: false }), this.props.children));\n    };\n    DragReorderable.prototype.getDraggableProps = function () {\n        return this.props.onReordered == null ? {} : {\n            onActivate: this.handleActivate,\n            onDragEnd: this.handleDragEnd,\n            onDragMove: this.handleDragMove,\n        };\n    };\n    DragReorderable.prototype.maybeSelectRegion = function (region) {\n        var nextSelectedRegions = [region];\n        if (!utils_1.Utils.deepCompareKeys(nextSelectedRegions, this.props.selectedRegions)) {\n            this.props.onSelection(nextSelectedRegions);\n            // move the focused cell into the newly selected region\n            this.props.onFocus(tslib_1.__assign({}, regions_1.Regions.getFocusCellCoordinatesFromRegion(region), { focusSelectionIndex: 0 }));\n        }\n    };\n    return DragReorderable;\n}(React.Component));\nDragReorderable.defaultProps = {\n    selectedRegions: [],\n};\nDragReorderable = tslib_1.__decorate([\n    PureRender\n], DragReorderable);\nexports.DragReorderable = DragReorderable;\n\n//# sourceMappingURL=reorderable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/interactions/reorderable.js\n// module id = 45\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar PureRender = require(\"pure-render-decorator\");\nvar React = require(\"react\");\nvar index_1 = require(\"../common/index\");\nvar resizeHandle_1 = require(\"./resizeHandle\");\nvar Resizable = (function (_super) {\n    tslib_1.__extends(Resizable, _super);\n    function Resizable(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        _this.onResizeMove = function (_offset, delta) {\n            _this.offsetSize(delta);\n            if (_this.props.onSizeChanged != null) {\n                _this.props.onSizeChanged(_this.state.size);\n            }\n        };\n        _this.onResizeEnd = function (_offset) {\n            // reset \"unclamped\" size on end\n            _this.setState({ unclampedSize: _this.state.size });\n            if (_this.props.onResizeEnd != null) {\n                _this.props.onResizeEnd(_this.state.size);\n            }\n        };\n        var size = props.size;\n        _this.state = {\n            size: size,\n            unclampedSize: size,\n        };\n        return _this;\n    }\n    Resizable.prototype.componentWillReceiveProps = function (nextProps) {\n        var size = nextProps.size;\n        this.setState({\n            size: size,\n            unclampedSize: size,\n        });\n    };\n    Resizable.prototype.render = function () {\n        var child = React.Children.only(this.props.children);\n        var style = tslib_1.__assign({}, child.props.style, this.getStyle());\n        if (this.props.isResizable === false) {\n            return React.cloneElement(child, { style: style });\n        }\n        var resizeHandle = this.renderResizeHandle();\n        return React.cloneElement(child, { style: style, resizeHandle: resizeHandle });\n    };\n    Resizable.prototype.renderResizeHandle = function () {\n        var _a = this.props, onLayoutLock = _a.onLayoutLock, onDoubleClick = _a.onDoubleClick, orientation = _a.orientation;\n        return (React.createElement(resizeHandle_1.ResizeHandle, { key: \"resize-handle\", onDoubleClick: onDoubleClick, onLayoutLock: onLayoutLock, onResizeEnd: this.onResizeEnd, onResizeMove: this.onResizeMove, orientation: orientation }));\n    };\n    /**\n     * Returns the CSS style to apply to the child element given the state's\n     * size value.\n     */\n    Resizable.prototype.getStyle = function () {\n        if (this.props.orientation === resizeHandle_1.Orientation.VERTICAL) {\n            return {\n                flexBasis: this.state.size + \"px\",\n                minWidth: \"0px\",\n                width: this.state.size + \"px\",\n            };\n        }\n        else {\n            return {\n                flexBasis: this.state.size + \"px\",\n                height: this.state.size + \"px\",\n                minHeight: \"0px\",\n            };\n        }\n    };\n    Resizable.prototype.offsetSize = function (offset) {\n        var unclampedSize = this.state.unclampedSize + offset;\n        this.setState({\n            size: index_1.Utils.clamp(unclampedSize, this.props.minSize, this.props.maxSize),\n            unclampedSize: unclampedSize,\n        });\n    };\n    return Resizable;\n}(React.Component));\nResizable.defaultProps = {\n    isResizable: true,\n    minSize: 0,\n};\nResizable = tslib_1.__decorate([\n    PureRender\n], Resizable);\nexports.Resizable = Resizable;\n\n//# sourceMappingURL=resizable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/interactions/resizable.js\n// module id = 46\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar Classes = require(\"../common/classes\");\nvar resizeHandle_1 = require(\"../interactions/resizeHandle\");\nvar regions_1 = require(\"../regions\");\nvar header_1 = require(\"./header\");\nvar rowHeaderCell_1 = require(\"./rowHeaderCell\");\nvar RowHeader = (function (_super) {\n    tslib_1.__extends(RowHeader, _super);\n    function RowHeader() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.defaultProps = {\n            renderRowHeader: renderDefaultRowHeader,\n        };\n        _this.wrapCells = function (cells) {\n            var _a = _this.props, rowIndexStart = _a.rowIndexStart, grid = _a.grid;\n            var tableHeight = grid.getRect().height;\n            var scrollTopCorrection = _this.props.grid.getCumulativeHeightBefore(rowIndexStart);\n            var style = {\n                // reduce the height to clamp the sliding window as we approach the final headers; otherwise,\n                // we'll have tons of useless whitespace at the end.\n                height: tableHeight - scrollTopCorrection,\n                // only header cells in view will render, but we need to reposition them to stay in view\n                // as we scroll vertically.\n                transform: \"translateY(\" + (scrollTopCorrection || 0) + \"px)\",\n            };\n            // add a wrapper set to the full-table height to ensure container styles stretch from the first\n            // cell all the way to the last\n            return (React.createElement(\"div\", { style: { height: tableHeight } },\n                React.createElement(\"div\", { className: Classes.TABLE_ROW_HEADERS_CELLS_CONTAINER, style: style }, cells)));\n        };\n        _this.convertPointToRow = function (clientXOrY, useMidpoint) {\n            var locator = _this.props.locator;\n            return locator != null ? locator.convertPointToRow(clientXOrY, useMidpoint) : null;\n        };\n        _this.getCellExtremaClasses = function (index, indexEnd) {\n            return _this.props.grid.getExtremaClasses(index, 0, indexEnd, 1);\n        };\n        _this.getRowHeight = function (index) {\n            return _this.props.grid.getRowRect(index).height;\n        };\n        _this.getDragCoordinate = function (clientCoords) {\n            return clientCoords[1]; // y-coordinate\n        };\n        _this.getMouseCoordinate = function (event) {\n            return event.clientY;\n        };\n        _this.handleResizeEnd = function (index, size) {\n            _this.props.onResizeGuide(null);\n            _this.props.onRowHeightChanged(index, size);\n        };\n        _this.handleSizeChanged = function (index, size) {\n            var rect = _this.props.grid.getRowRect(index);\n            _this.props.onResizeGuide([rect.top + size]);\n        };\n        _this.isCellSelected = function (index) {\n            return regions_1.Regions.hasFullRow(_this.props.selectedRegions, index);\n        };\n        _this.isGhostIndex = function (index) {\n            return _this.props.grid.isGhostIndex(index, -1);\n        };\n        _this.renderGhostCell = function (index, extremaClasses) {\n            var rect = _this.props.grid.getGhostCellRect(index, 0);\n            return (React.createElement(rowHeaderCell_1.RowHeaderCell, { className: classNames(extremaClasses), index: index, key: Classes.rowIndexClass(index), loading: _this.props.loading, style: { height: rect.height + \"px\" } }));\n        };\n        _this.toRegion = function (index1, index2) {\n            // the `this` value is messed up for Regions.row, so we have to have a wrapper function here\n            return regions_1.Regions.row(index1, index2);\n        };\n        return _this;\n    }\n    RowHeader.prototype.render = function () {\n        var _a = this.props, \n        // from IRowHeaderProps\n        onRowHeightChanged = _a.onRowHeightChanged, renderHeaderCell = _a.renderRowHeader, \n        // from IRowHeights\n        minSize = _a.minRowHeight, maxSize = _a.maxRowHeight, defaultRowHeight = _a.defaultRowHeight, \n        // from IRowIndices\n        indexStart = _a.rowIndexStart, indexEnd = _a.rowIndexEnd, \n        // from IHeaderProps\n        spreadableProps = tslib_1.__rest(_a, [\"onRowHeightChanged\", \"renderRowHeader\", \"minRowHeight\", \"maxRowHeight\", \"defaultRowHeight\", \"rowIndexStart\", \"rowIndexEnd\"]);\n        return (React.createElement(header_1.Header, tslib_1.__assign({ convertPointToIndex: this.convertPointToRow, fullRegionCardinality: regions_1.RegionCardinality.FULL_ROWS, getCellExtremaClasses: this.getCellExtremaClasses, getCellIndexClass: Classes.rowCellIndexClass, getCellSize: this.getRowHeight, getDragCoordinate: this.getDragCoordinate, getIndexClass: Classes.rowIndexClass, getMouseCoordinate: this.getMouseCoordinate, handleResizeEnd: this.handleResizeEnd, handleSizeChanged: this.handleSizeChanged, headerCellIsReorderablePropName: \"isRowReorderable\", headerCellIsSelectedPropName: \"isRowSelected\", indexEnd: indexEnd, indexStart: indexStart, isCellSelected: this.isCellSelected, isGhostIndex: this.isGhostIndex, maxSize: maxSize, minSize: minSize, renderGhostCell: this.renderGhostCell, renderHeaderCell: renderHeaderCell, resizeOrientation: resizeHandle_1.Orientation.HORIZONTAL, toRegion: this.toRegion, wrapCells: this.wrapCells }, spreadableProps)));\n    };\n    return RowHeader;\n}(React.Component));\nexports.RowHeader = RowHeader;\n/**\n * A default implementation of `IRowHeaderRenderer` that displays 1-indexed\n * numbers for each row.\n */\nfunction renderDefaultRowHeader(rowIndex) {\n    return React.createElement(rowHeaderCell_1.RowHeaderCell, { index: rowIndex, name: \"\" + (rowIndex + 1) });\n}\nexports.renderDefaultRowHeader = renderDefaultRowHeader;\n\n//# sourceMappingURL=rowHeader.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/headers/rowHeader.js\n// module id = 47\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Classes = require(\"../common/classes\");\n/**\n * Efficiently detect when an HTMLElement is resized.\n *\n * Attaches an invisible \"resize-sensor\" div to the element. Then it checks\n * the element's offsetWidth and offsetHeight whenever a scroll event is\n * triggered on the \"resize-sensor\" children. These events are further\n * debounced using requestAnimationFrame.\n *\n * Inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js\n */\nvar ResizeSensor = (function () {\n    function ResizeSensor() {\n    }\n    ResizeSensor.attach = function (element, callback) {\n        var lifecycle = ResizeSensor.debounce(callback);\n        var resizeSensor = document.createElement(\"div\");\n        resizeSensor.className = Classes.TABLE_RESIZE_SENSOR;\n        resizeSensor.style.cssText = ResizeSensor.RESIZE_SENSOR_STYLE;\n        resizeSensor.innerHTML = ResizeSensor.RESIZE_SENSOR_HTML;\n        element.appendChild(resizeSensor);\n        if (getComputedStyle(element, null).getPropertyValue(\"position\") === \"static\") {\n            element.style.position = \"relative\";\n        }\n        var expand = resizeSensor.childNodes[0];\n        var expandChild = expand.childNodes[0];\n        var shrink = resizeSensor.childNodes[1];\n        var reset = function () {\n            expandChild.style.width = \"100000px\";\n            expandChild.style.height = \"100000px\";\n            expand.scrollLeft = 100000;\n            expand.scrollTop = 100000;\n            shrink.scrollLeft = 100000;\n            shrink.scrollTop = 100000;\n        };\n        reset();\n        var lastWidth;\n        var lastHeight;\n        var onScroll = function () {\n            var currentWidth = element.offsetWidth;\n            var currentHeight = element.offsetHeight;\n            if (currentWidth !== lastWidth || currentHeight !== lastHeight) {\n                lastWidth = currentWidth;\n                lastHeight = currentHeight;\n                lifecycle.trigger();\n            }\n            reset();\n        };\n        expand.addEventListener(\"scroll\", onScroll);\n        shrink.addEventListener(\"scroll\", onScroll);\n        return function () {\n            element.removeChild(resizeSensor);\n            lifecycle.cancelled = true;\n        };\n    };\n    ResizeSensor.debounce = function (callback) {\n        var scope = {\n            cancelled: false,\n            trigger: function () {\n                if (scope.triggered || scope.cancelled) {\n                    return;\n                }\n                scope.triggered = true;\n                requestAnimationFrame(function () {\n                    scope.triggered = false;\n                    if (!scope.cancelled) {\n                        callback();\n                    }\n                });\n            },\n            triggered: false,\n        };\n        return scope;\n    };\n    return ResizeSensor;\n}());\nResizeSensor.RESIZE_SENSOR_STYLE = \"position: absolute; left: 0; top: 0; right: 0; \" +\n    \"bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\nResizeSensor.RESIZE_SENSOR_HTML = \"<div class=\\\"\" + Classes.TABLE_RESIZE_SENSOR_EXPAND + \"\\\"\\n        style=\\\"\" + ResizeSensor.RESIZE_SENSOR_STYLE + \"\\\"><div style=\\\"position: absolute; left: 0; top: 0; transition: 0s;\\\"\\n        ></div></div><div class=\\\"\" + Classes.TABLE_RESIZE_SENSOR_SHRINK + \"\\\" style=\\\"\" + ResizeSensor.RESIZE_SENSOR_STYLE + \"\\\"\\n        ><div style=\\\"position: absolute; left: 0; top: 0; transition: 0s; width: 200%; height: 200%;\\\"></div></div>\";\nexports.ResizeSensor = ResizeSensor;\n\n//# sourceMappingURL=resizeSensor.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/interactions/resizeSensor.js\n// module id = 48\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar Classes = require(\"../common/classes\");\nvar utils_1 = require(\"../common/utils\");\nvar GuideLayer = (function (_super) {\n    tslib_1.__extends(GuideLayer, _super);\n    function GuideLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.renderVerticalGuide = function (offset, index) {\n            var style = {\n                left: offset + \"px\",\n            };\n            var className = classNames(Classes.TABLE_OVERLAY, Classes.TABLE_VERTICAL_GUIDE, {\n                \"bp-table-vertical-guide-flush-left\": offset === 0,\n            });\n            return (React.createElement(\"div\", { className: className, key: index, style: style }));\n        };\n        _this.renderHorizontalGuide = function (offset, index) {\n            var style = {\n                top: offset + \"px\",\n            };\n            var className = classNames(Classes.TABLE_OVERLAY, Classes.TABLE_HORIZONTAL_GUIDE, {\n                \"bp-table-horizontal-guide-flush-top\": offset === 0,\n            });\n            return (React.createElement(\"div\", { className: className, key: index, style: style }));\n        };\n        return _this;\n    }\n    GuideLayer.prototype.shouldComponentUpdate = function (nextProps) {\n        if (this.props.className !== nextProps.className) {\n            return true;\n        }\n        // shallow-comparing guide arrays leads to tons of unnecessary re-renders, so we check the\n        // array contents explicitly.\n        return !utils_1.Utils.arraysEqual(this.props.verticalGuides, nextProps.verticalGuides)\n            || !utils_1.Utils.arraysEqual(this.props.horizontalGuides, nextProps.horizontalGuides);\n    };\n    GuideLayer.prototype.render = function () {\n        var _a = this.props, verticalGuides = _a.verticalGuides, horizontalGuides = _a.horizontalGuides, className = _a.className;\n        var verticals = (verticalGuides == null) ? undefined : verticalGuides.map(this.renderVerticalGuide);\n        var horizontals = (horizontalGuides == null) ? undefined : horizontalGuides.map(this.renderHorizontalGuide);\n        return (React.createElement(\"div\", { className: classNames(className, Classes.TABLE_OVERLAY_LAYER) },\n            verticals,\n            horizontals));\n    };\n    return GuideLayer;\n}(React.Component));\nexports.GuideLayer = GuideLayer;\n\n//# sourceMappingURL=guides.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/layers/guides.js\n// module id = 49\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar Classes = require(\"../common/classes\");\nvar utils_1 = require(\"../common/utils\");\nvar regions_1 = require(\"../regions\");\n// don't include \"regions\" or \"regionStyles\" in here, because they can't be shallowly compared\nvar UPDATE_PROPS_KEYS = [\n    \"className\",\n];\nvar RegionLayer = (function (_super) {\n    tslib_1.__extends(RegionLayer, _super);\n    function RegionLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.renderRegion = function (_region, index) {\n            var _a = _this.props, className = _a.className, regionStyles = _a.regionStyles;\n            return (React.createElement(\"div\", { className: classNames(Classes.TABLE_OVERLAY, Classes.TABLE_REGION, className), key: index, style: regionStyles[index] }));\n        };\n        return _this;\n    }\n    RegionLayer.prototype.shouldComponentUpdate = function (nextProps) {\n        // shallowly comparable props like \"className\" tend not to change in the default table\n        // implementation, so do that check last with hope that we return earlier and avoid it\n        // altogether.\n        return !utils_1.Utils.arraysEqual(this.props.regions, nextProps.regions, regions_1.Regions.regionsEqual)\n            || !utils_1.Utils.arraysEqual(this.props.regionStyles, nextProps.regionStyles, utils_1.Utils.shallowCompareKeys)\n            || !utils_1.Utils.shallowCompareKeys(this.props, nextProps, { include: UPDATE_PROPS_KEYS });\n    };\n    RegionLayer.prototype.render = function () {\n        return React.createElement(\"div\", { className: Classes.TABLE_OVERLAY_LAYER }, this.renderRegionChildren());\n    };\n    RegionLayer.prototype.renderRegionChildren = function () {\n        var regions = this.props.regions;\n        if (regions == null) {\n            return undefined;\n        }\n        return regions.map(this.renderRegion);\n    };\n    return RegionLayer;\n}(React.Component));\nexports.RegionLayer = RegionLayer;\n\n//# sourceMappingURL=regions.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/layers/regions.js\n// module id = 50\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Classes = require(\"./common/classes\");\nvar rect_1 = require(\"./common/rect\");\nvar utils_1 = require(\"./common/utils\");\nvar Locator = (function () {\n    function Locator(tableElement, bodyElement) {\n        var _this = this;\n        this.tableElement = tableElement;\n        this.bodyElement = bodyElement;\n        this.rowHeaderWidth = 0;\n        this.columnHeaderHeight = 0;\n        this.numFrozenRows = 0;\n        this.numFrozenColumns = 0;\n        this.convertCellIndexToClientX = function (index) {\n            return _this.grid.getCumulativeWidthAt(index);\n        };\n        this.convertCellMidpointToClientX = function (index) {\n            var cellLeft = _this.grid.getCumulativeWidthBefore(index);\n            var cellRight = _this.grid.getCumulativeWidthAt(index);\n            return (cellLeft + cellRight) / 2;\n        };\n        this.convertCellIndexToClientY = function (index) {\n            return _this.grid.getCumulativeHeightAt(index);\n        };\n        this.convertCellMidpointToClientY = function (index) {\n            var cellTop = _this.grid.getCumulativeHeightBefore(index);\n            var cellBottom = _this.grid.getCumulativeHeightAt(index);\n            return (cellTop + cellBottom) / 2;\n        };\n        this.toGridX = function (clientX) {\n            var tableOffsetFromPageLeft = _this.tableElement.getBoundingClientRect().left;\n            var cursorOffsetFromTableLeft = clientX - tableOffsetFromPageLeft;\n            var cursorOffsetFromGridLeft = cursorOffsetFromTableLeft - _this.rowHeaderWidth;\n            var scrollOffsetFromTableLeft = _this.bodyElement.scrollLeft;\n            var isCursorWithinFrozenColumns = _this.numFrozenColumns != null\n                && _this.numFrozenColumns > 0\n                && cursorOffsetFromGridLeft <= _this.grid.getCumulativeWidthBefore(_this.numFrozenColumns);\n            // the frozen-column region doesn't scroll, so ignore the scroll distance in that case\n            return isCursorWithinFrozenColumns\n                ? cursorOffsetFromGridLeft\n                : cursorOffsetFromGridLeft + scrollOffsetFromTableLeft;\n        };\n        this.toGridY = function (clientY) {\n            var tableOffsetFromPageTop = _this.tableElement.getBoundingClientRect().top;\n            var cursorOffsetFromTableTop = clientY - tableOffsetFromPageTop;\n            var cursorOffsetFromGridTop = cursorOffsetFromTableTop - _this.columnHeaderHeight;\n            var scrollOffsetFromTableTop = _this.bodyElement.scrollTop;\n            var isCursorWithinFrozenRows = _this.numFrozenRows != null\n                && _this.numFrozenRows > 0\n                && cursorOffsetFromGridTop <= _this.grid.getCumulativeHeightBefore(_this.numFrozenRows);\n            return isCursorWithinFrozenRows\n                ? cursorOffsetFromGridTop\n                : cursorOffsetFromGridTop + scrollOffsetFromTableTop;\n        };\n        // empty constructor\n    }\n    // Setters\n    // =======\n    Locator.prototype.setGrid = function (grid) {\n        this.grid = grid;\n        return this;\n    };\n    Locator.prototype.setNumFrozenRows = function (numFrozenRows) {\n        this.numFrozenRows = numFrozenRows;\n        return this;\n    };\n    Locator.prototype.setNumFrozenColumns = function (numFrozenColumns) {\n        this.numFrozenColumns = numFrozenColumns;\n        return this;\n    };\n    Locator.prototype.setColumnHeaderHeight = function (columnHeaderHeight) {\n        this.columnHeaderHeight = columnHeaderHeight;\n        return this;\n    };\n    Locator.prototype.setRowHeaderWidth = function (rowHeaderWidth) {\n        this.rowHeaderWidth = rowHeaderWidth;\n        return this;\n    };\n    // Getters\n    // =======\n    Locator.prototype.getViewportRect = function () {\n        return new rect_1.Rect(this.bodyElement.scrollLeft, this.bodyElement.scrollTop, this.bodyElement.clientWidth, this.bodyElement.clientHeight);\n    };\n    Locator.prototype.getWidestVisibleCellInColumn = function (columnIndex) {\n        var cells = this.tableElement.getElementsByClassName(Classes.columnCellIndexClass(columnIndex));\n        var max = 0;\n        for (var i = 0; i < cells.length; i++) {\n            var contentWidth = utils_1.Utils.measureElementTextContent(cells.item(i)).width;\n            var cellWidth = Math.ceil(contentWidth) + Locator.CELL_HORIZONTAL_PADDING * 2;\n            if (cellWidth > max) {\n                max = cellWidth;\n            }\n        }\n        return max;\n    };\n    Locator.prototype.getTallestVisibleCellInColumn = function (columnIndex) {\n        var cells = this.tableElement\n            .getElementsByClassName(Classes.columnCellIndexClass(columnIndex) + \" \" + Classes.TABLE_CELL);\n        var max = 0;\n        for (var i = 0; i < cells.length; i++) {\n            var cellValue = cells.item(i).querySelector(\".\" + Classes.TABLE_TRUNCATED_VALUE);\n            var cellTruncatedFormatText = cells.item(i).querySelector(\".\" + Classes.TABLE_TRUNCATED_FORMAT_TEXT);\n            var cellTruncatedText = cells.item(i).querySelector(\".\" + Classes.TABLE_TRUNCATED_TEXT);\n            var height = 0;\n            if (cellValue != null) {\n                height = cellValue.scrollHeight;\n            }\n            else if (cellTruncatedFormatText != null) {\n                height = cellTruncatedFormatText.scrollHeight;\n            }\n            else if (cellTruncatedText != null) {\n                height = cellTruncatedText.scrollHeight;\n            }\n            else {\n                // it's not anything we recognize, just use the current height of the cell\n                height = cells.item(i).scrollHeight;\n            }\n            if (height > max) {\n                max = height;\n            }\n        }\n        return max;\n    };\n    // Converters\n    // ==========\n    Locator.prototype.convertPointToColumn = function (clientX, useMidpoint) {\n        var tableRect = this.getTableRect();\n        if (!tableRect.containsX(clientX)) {\n            return -1;\n        }\n        var gridX = this.toGridX(clientX);\n        var limit = useMidpoint ? this.grid.numCols : this.grid.numCols - 1;\n        var lookupFn = useMidpoint ? this.convertCellMidpointToClientX : this.convertCellIndexToClientX;\n        return utils_1.Utils.binarySearch(gridX, limit, lookupFn);\n    };\n    Locator.prototype.convertPointToRow = function (clientY, useMidpoint) {\n        var tableRect = this.getTableRect();\n        if (!tableRect.containsY(clientY)) {\n            return -1;\n        }\n        var gridY = this.toGridY(clientY);\n        var limit = useMidpoint ? this.grid.numRows : this.grid.numRows - 1;\n        var lookupFn = useMidpoint ? this.convertCellMidpointToClientY : this.convertCellIndexToClientY;\n        return utils_1.Utils.binarySearch(gridY, limit, lookupFn);\n    };\n    Locator.prototype.convertPointToCell = function (clientX, clientY) {\n        var gridX = this.toGridX(clientX);\n        var gridY = this.toGridY(clientY);\n        var col = utils_1.Utils.binarySearch(gridX, this.grid.numCols - 1, this.convertCellIndexToClientX);\n        var row = utils_1.Utils.binarySearch(gridY, this.grid.numRows - 1, this.convertCellIndexToClientY);\n        return { col: col, row: row };\n    };\n    // Private helpers\n    // ===============\n    Locator.prototype.getTableRect = function () {\n        return rect_1.Rect.wrap(this.tableElement.getBoundingClientRect());\n    };\n    return Locator;\n}());\nLocator.CELL_HORIZONTAL_PADDING = 10;\nexports.Locator = Locator;\n\n//# sourceMappingURL=locator.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/locator.js\n// module id = 51\n// module chunks = 0","/**\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar Classes = require(\"../common/classes\");\nvar Errors = require(\"../common/errors\");\nvar QuadrantType;\n(function (QuadrantType) {\n    /**\n     * The main quadrant beneath any frozen rows or columns.\n     */\n    QuadrantType[QuadrantType[\"MAIN\"] = 0] = \"MAIN\";\n    /**\n     * The top quadrant, containing column headers and frozen rows.\n     */\n    QuadrantType[QuadrantType[\"TOP\"] = 1] = \"TOP\";\n    /**\n     * The left quadrant, containing row headers and frozen columns.\n     */\n    QuadrantType[QuadrantType[\"LEFT\"] = 2] = \"LEFT\";\n    /**\n     * The top-left quadrant, containing the headers and cells common to both the frozen columns and\n     * frozen rows.\n     */\n    QuadrantType[QuadrantType[\"TOP_LEFT\"] = 3] = \"TOP_LEFT\";\n})(QuadrantType = exports.QuadrantType || (exports.QuadrantType = {}));\nvar TableQuadrant = (function (_super) {\n    tslib_1.__extends(TableQuadrant, _super);\n    function TableQuadrant() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TableQuadrant.prototype.render = function () {\n        var _a = this.props, isRowHeaderShown = _a.isRowHeaderShown, quadrantType = _a.quadrantType;\n        var showFrozenRowsOnly = quadrantType === QuadrantType.TOP || quadrantType === QuadrantType.TOP_LEFT;\n        var showFrozenColumnsOnly = quadrantType === QuadrantType.LEFT || quadrantType === QuadrantType.TOP_LEFT;\n        var className = classNames(Classes.TABLE_QUADRANT, this.getQuadrantCssClass(), this.props.className);\n        var maybeMenu = isRowHeaderShown ? this.props.renderMenu() : undefined;\n        var maybeRowHeader = isRowHeaderShown ? this.props.renderRowHeader(showFrozenRowsOnly) : undefined;\n        var columnHeader = this.props.renderColumnHeader(showFrozenColumnsOnly);\n        // need to set bottom container size to prevent overlay clipping on scroll\n        var bottomContainerStyle = {\n            height: this.props.grid.getHeight(),\n            width: this.props.grid.getWidth(),\n        };\n        return (React.createElement(\"div\", { className: className, style: this.props.style, ref: this.props.quadrantRef },\n            React.createElement(\"div\", { className: Classes.TABLE_QUADRANT_SCROLL_CONTAINER, ref: this.props.scrollContainerRef, onScroll: this.props.onScroll, onWheel: this.props.onWheel },\n                React.createElement(\"div\", { className: Classes.TABLE_TOP_CONTAINER },\n                    maybeMenu,\n                    columnHeader),\n                React.createElement(\"div\", { className: Classes.TABLE_BOTTOM_CONTAINER, style: bottomContainerStyle },\n                    maybeRowHeader,\n                    React.createElement(\"div\", { className: Classes.TABLE_QUADRANT_BODY_CONTAINER, ref: this.props.bodyRef }, this.props.renderBody(quadrantType, showFrozenRowsOnly, showFrozenColumnsOnly))))));\n    };\n    TableQuadrant.prototype.validateProps = function (nextProps) {\n        var quadrantType = nextProps.quadrantType;\n        if (nextProps.onScroll != null && quadrantType !== QuadrantType.MAIN) {\n            console.warn(Errors.QUADRANT_ON_SCROLL_UNNECESSARILY_DEFINED);\n        }\n    };\n    TableQuadrant.prototype.getQuadrantCssClass = function () {\n        switch (this.props.quadrantType) {\n            case QuadrantType.MAIN:\n                return Classes.TABLE_QUADRANT_MAIN;\n            case QuadrantType.TOP:\n                return Classes.TABLE_QUADRANT_TOP;\n            case QuadrantType.LEFT:\n                return Classes.TABLE_QUADRANT_LEFT;\n            case QuadrantType.TOP_LEFT:\n                return Classes.TABLE_QUADRANT_TOP_LEFT;\n            default:\n                return undefined;\n        }\n    };\n    return TableQuadrant;\n}(core_1.AbstractComponent));\n// we want the user to explicitly pass a quadrantType. define defaultProps as a Partial to avoid\n// declaring that and other required props here.\nTableQuadrant.defaultProps = {\n    isRowHeaderShown: true,\n};\nexports.TableQuadrant = TableQuadrant;\n\n//# sourceMappingURL=tableQuadrant.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/quadrants/tableQuadrant.js\n// module id = 52\n// module chunks = 0","/**\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar React = require(\"react\");\nvar Classes = require(\"../common/classes\");\nvar utils_1 = require(\"../common/utils\");\nvar tableQuadrant_1 = require(\"./tableQuadrant\");\nvar TableQuadrantStack = (function (_super) {\n    tslib_1.__extends(TableQuadrantStack, _super);\n    function TableQuadrantStack(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        _this.quadrantRefs = (_a = {},\n            _a[tableQuadrant_1.QuadrantType.MAIN] = {},\n            _a[tableQuadrant_1.QuadrantType.TOP] = {},\n            _a[tableQuadrant_1.QuadrantType.LEFT] = {},\n            _a[tableQuadrant_1.QuadrantType.TOP_LEFT] = {},\n            _a);\n        _this.quadrantRefHandlers = (_b = {},\n            _b[tableQuadrant_1.QuadrantType.MAIN] = _this.generateQuadrantRefHandlers(tableQuadrant_1.QuadrantType.MAIN),\n            _b[tableQuadrant_1.QuadrantType.TOP] = _this.generateQuadrantRefHandlers(tableQuadrant_1.QuadrantType.TOP),\n            _b[tableQuadrant_1.QuadrantType.LEFT] = _this.generateQuadrantRefHandlers(tableQuadrant_1.QuadrantType.LEFT),\n            _b[tableQuadrant_1.QuadrantType.TOP_LEFT] = _this.generateQuadrantRefHandlers(tableQuadrant_1.QuadrantType.TOP_LEFT),\n            _b);\n        // this flag helps us avoid redundant work in the MAIN quadrant's onScroll callback, if the\n        // callback was triggered from a manual scrollTop/scrollLeft update within an onWheel.\n        _this.wasMainQuadrantScrollChangedFromOtherOnWheelCallback = false;\n        // Quadrant-specific renderers\n        // ===========================\n        // Menu\n        _this.renderMainQuadrantMenu = function () {\n            return _this.props.renderMenu(_this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.MAIN].menu);\n        };\n        _this.renderTopQuadrantMenu = function () {\n            return _this.props.renderMenu(_this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.TOP].menu);\n        };\n        _this.renderLeftQuadrantMenu = function () {\n            return _this.props.renderMenu(_this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.LEFT].menu);\n        };\n        _this.renderTopLeftQuadrantMenu = function () {\n            return _this.props.renderMenu(_this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.TOP_LEFT].menu);\n        };\n        // Column header\n        _this.renderMainQuadrantColumnHeader = function (showFrozenColumnsOnly) {\n            var refHandler = _this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.MAIN].columnHeader;\n            var resizeHandler = _this.handleColumnResizeGuideMain;\n            var reorderingHandler = _this.handleColumnsReorderingMain;\n            return _this.props.renderColumnHeader(refHandler, resizeHandler, reorderingHandler, showFrozenColumnsOnly);\n        };\n        _this.renderTopQuadrantColumnHeader = function (showFrozenColumnsOnly) {\n            var refHandler = _this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.TOP].columnHeader;\n            var resizeHandler = _this.handleColumnResizeGuideTop;\n            var reorderingHandler = _this.handleColumnsReorderingTop;\n            return _this.props.renderColumnHeader(refHandler, resizeHandler, reorderingHandler, showFrozenColumnsOnly);\n        };\n        _this.renderLeftQuadrantColumnHeader = function (showFrozenColumnsOnly) {\n            var refHandler = _this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.LEFT].columnHeader;\n            var resizeHandler = _this.handleColumnResizeGuideLeft;\n            var reorderingHandler = _this.handleColumnsReorderingLeft;\n            return _this.props.renderColumnHeader(refHandler, resizeHandler, reorderingHandler, showFrozenColumnsOnly);\n        };\n        _this.renderTopLeftQuadrantColumnHeader = function (showFrozenColumnsOnly) {\n            var refHandler = _this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.TOP_LEFT].columnHeader;\n            var resizeHandler = _this.handleColumnResizeGuideTopLeft;\n            var reorderingHandler = _this.handleColumnsReorderingTopLeft;\n            return _this.props.renderColumnHeader(refHandler, resizeHandler, reorderingHandler, showFrozenColumnsOnly);\n        };\n        // Row header\n        _this.renderMainQuadrantRowHeader = function (showFrozenRowsOnly) {\n            var refHandler = _this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.MAIN].rowHeader;\n            var resizeHandler = _this.handleRowResizeGuideMain;\n            var reorderingHandler = _this.handleRowsReorderingMain;\n            return _this.props.renderRowHeader(refHandler, resizeHandler, reorderingHandler, showFrozenRowsOnly);\n        };\n        _this.renderTopQuadrantRowHeader = function (showFrozenRowsOnly) {\n            var refHandler = _this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.TOP].rowHeader;\n            var resizeHandler = _this.handleRowResizeGuideTop;\n            var reorderingHandler = _this.handleRowsReorderingTop;\n            return _this.props.renderRowHeader(refHandler, resizeHandler, reorderingHandler, showFrozenRowsOnly);\n        };\n        _this.renderLeftQuadrantRowHeader = function (showFrozenRowsOnly) {\n            var refHandler = _this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.LEFT].rowHeader;\n            var resizeHandler = _this.handleRowResizeGuideLeft;\n            var reorderingHandler = _this.handleRowsReorderingLeft;\n            return _this.props.renderRowHeader(refHandler, resizeHandler, reorderingHandler, showFrozenRowsOnly);\n        };\n        _this.renderTopLeftQuadrantRowHeader = function (showFrozenRowsOnly) {\n            var refHandler = _this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.TOP_LEFT].rowHeader;\n            var resizeHandler = _this.handleRowResizeGuideTopLeft;\n            var reorderingHandler = _this.handleRowsReorderingTopLeft;\n            return _this.props.renderRowHeader(refHandler, resizeHandler, reorderingHandler, showFrozenRowsOnly);\n        };\n        // Event handlers\n        // ==============\n        // Scrolling\n        // ---------\n        // use the more generic \"scroll\" event for the main quadrant, which captures both click+dragging\n        // on the scrollbar and trackpad/mousewheel gestures\n        _this.handleMainQuadrantScroll = function (event) {\n            if (_this.wasMainQuadrantScrollChangedFromOtherOnWheelCallback) {\n                _this.wasMainQuadrantScrollChangedFromOtherOnWheelCallback = false;\n                return;\n            }\n            var nextScrollTop = _this.quadrantRefs[tableQuadrant_1.QuadrantType.MAIN].scrollContainer.scrollTop;\n            var nextScrollLeft = _this.quadrantRefs[tableQuadrant_1.QuadrantType.MAIN].scrollContainer.scrollLeft;\n            _this.quadrantRefs[tableQuadrant_1.QuadrantType.LEFT].scrollContainer.scrollTop = nextScrollTop;\n            _this.quadrantRefs[tableQuadrant_1.QuadrantType.TOP].scrollContainer.scrollLeft = nextScrollLeft;\n            _this.props.onScroll(event);\n        };\n        // recall that we've already invoked event.preventDefault() when defining the throttled versions\n        // of these onWheel callbacks, so now we need to manually update the affected quadrant's scroll\n        // position too.\n        _this.handleWheel = function (event) {\n            _this.handleDirectionalWheel(\"horizontal\", event.deltaX, tableQuadrant_1.QuadrantType.MAIN, [tableQuadrant_1.QuadrantType.TOP]);\n            _this.handleDirectionalWheel(\"vertical\", event.deltaY, tableQuadrant_1.QuadrantType.MAIN, [tableQuadrant_1.QuadrantType.LEFT]);\n            _this.props.onScroll(event);\n        };\n        // Resizing\n        // --------\n        // Columns\n        _this.handleColumnResizeGuideMain = function (verticalGuides) {\n            _this.invokeColumnResizeHandler(verticalGuides, tableQuadrant_1.QuadrantType.MAIN);\n        };\n        _this.handleColumnResizeGuideTop = function (verticalGuides) {\n            _this.invokeColumnResizeHandler(verticalGuides, tableQuadrant_1.QuadrantType.TOP);\n        };\n        _this.handleColumnResizeGuideLeft = function (verticalGuides) {\n            _this.invokeColumnResizeHandler(verticalGuides, tableQuadrant_1.QuadrantType.LEFT);\n        };\n        _this.handleColumnResizeGuideTopLeft = function (verticalGuides) {\n            _this.invokeColumnResizeHandler(verticalGuides, tableQuadrant_1.QuadrantType.TOP_LEFT);\n        };\n        _this.invokeColumnResizeHandler = function (verticalGuides, quadrantType) {\n            var adjustedGuides = _this.adjustVerticalGuides(verticalGuides, quadrantType);\n            _this.props.handleColumnResizeGuide(adjustedGuides);\n        };\n        // Rows\n        _this.handleRowResizeGuideMain = function (verticalGuides) {\n            _this.invokeRowResizeHandler(verticalGuides, tableQuadrant_1.QuadrantType.MAIN);\n        };\n        _this.handleRowResizeGuideTop = function (verticalGuides) {\n            _this.invokeRowResizeHandler(verticalGuides, tableQuadrant_1.QuadrantType.TOP);\n        };\n        _this.handleRowResizeGuideLeft = function (verticalGuides) {\n            _this.invokeRowResizeHandler(verticalGuides, tableQuadrant_1.QuadrantType.LEFT);\n        };\n        _this.handleRowResizeGuideTopLeft = function (verticalGuides) {\n            _this.invokeRowResizeHandler(verticalGuides, tableQuadrant_1.QuadrantType.TOP_LEFT);\n        };\n        _this.invokeRowResizeHandler = function (verticalGuides, quadrantType) {\n            var adjustedGuides = _this.adjustHorizontalGuides(verticalGuides, quadrantType);\n            _this.props.handleRowResizeGuide(adjustedGuides);\n        };\n        // Reordering\n        // ----------\n        // Columns\n        _this.handleColumnsReorderingMain = function (oldIndex, newIndex, length) {\n            _this.invokeColumnsReorderingHandler(oldIndex, newIndex, length);\n        };\n        _this.handleColumnsReorderingTop = function (oldIndex, newIndex, length) {\n            _this.invokeColumnsReorderingHandler(oldIndex, newIndex, length);\n        };\n        _this.handleColumnsReorderingLeft = function (oldIndex, newIndex, length) {\n            _this.invokeColumnsReorderingHandler(oldIndex, newIndex, length);\n        };\n        _this.handleColumnsReorderingTopLeft = function (oldIndex, newIndex, length) {\n            _this.invokeColumnsReorderingHandler(oldIndex, newIndex, length);\n        };\n        _this.invokeColumnsReorderingHandler = function (oldIndex, newIndex, length) {\n            var guideIndex = utils_1.Utils.reorderedIndexToGuideIndex(oldIndex, newIndex, length);\n            var leftOffset = _this.props.grid.getCumulativeWidthBefore(guideIndex);\n            var quadrantType = guideIndex <= _this.props.numFrozenColumns ? tableQuadrant_1.QuadrantType.TOP_LEFT : tableQuadrant_1.QuadrantType.TOP;\n            var verticalGuides = _this.adjustVerticalGuides([leftOffset], quadrantType);\n            _this.props.handleColumnsReordering(verticalGuides);\n        };\n        // Rows\n        _this.handleRowsReorderingMain = function (oldIndex, newIndex, length) {\n            _this.invokeRowsReorderingHandler(oldIndex, newIndex, length);\n        };\n        _this.handleRowsReorderingTop = function (oldIndex, newIndex, length) {\n            _this.invokeRowsReorderingHandler(oldIndex, newIndex, length);\n        };\n        _this.handleRowsReorderingLeft = function (oldIndex, newIndex, length) {\n            _this.invokeRowsReorderingHandler(oldIndex, newIndex, length);\n        };\n        _this.handleRowsReorderingTopLeft = function (oldIndex, newIndex, length) {\n            _this.invokeRowsReorderingHandler(oldIndex, newIndex, length);\n        };\n        _this.invokeRowsReorderingHandler = function (oldIndex, newIndex, length) {\n            var guideIndex = utils_1.Utils.reorderedIndexToGuideIndex(oldIndex, newIndex, length);\n            var topOffset = _this.props.grid.getCumulativeHeightBefore(guideIndex);\n            var quadrantType = guideIndex <= _this.props.numFrozenRows ? tableQuadrant_1.QuadrantType.TOP_LEFT : tableQuadrant_1.QuadrantType.LEFT;\n            var horizontalGuides = _this.adjustHorizontalGuides([topOffset], quadrantType);\n            _this.props.handleRowsReordering(horizontalGuides);\n        };\n        _this.handleDirectionalWheel = function (direction, delta, quadrantType, quadrantTypesToSync) {\n            var isHorizontal = direction === \"horizontal\";\n            var scrollKey = isHorizontal\n                ? \"scrollLeft\"\n                : \"scrollTop\";\n            var isScrollDisabled = isHorizontal\n                ? _this.props.isHorizontalScrollDisabled\n                : _this.props.isVerticalScrollDisabled;\n            if (!isScrollDisabled) {\n                _this.wasMainQuadrantScrollChangedFromOtherOnWheelCallback = true;\n                // sync the corresponding scroll position of all dependent quadrants\n                var nextScrollPosition_1 = _this.quadrantRefs[quadrantType].scrollContainer[scrollKey] + delta;\n                _this.quadrantRefs[quadrantType].scrollContainer[scrollKey] = nextScrollPosition_1;\n                quadrantTypesToSync.forEach(function (quadrantTypeToSync) {\n                    _this.quadrantRefs[quadrantTypeToSync].scrollContainer[scrollKey] = nextScrollPosition_1;\n                });\n            }\n        };\n        // a few points here:\n        // - we throttle onScroll/onWheel callbacks to making scrolling look more fluid.\n        // - we declare throttled functions on the component instance, since they're stateful.\n        // - \"wheel\"-ing triggers super-fluid onScroll behavior by default, but relying on that\n        //   causes sync'd quadrants to lag behind. thus, we preventDefault for onWheel and instead\n        //   manually update all relevant quadrants using event.delta{X,Y} later, in the callback.\n        //   this keeps every sync'd quadrant visually aligned in each animation frame.\n        _this.throttledHandleMainQuadrantScroll = core_1.Utils.throttleReactEventCallback(_this.handleMainQuadrantScroll);\n        _this.throttledHandleWheel = core_1.Utils.throttleReactEventCallback(_this.handleWheel, { preventDefault: true });\n        return _this;\n        var _a, _b;\n    }\n    /**\n     * Scroll the main quadrant to the specified scroll offset, keeping all other quadrants in sync.\n     */\n    TableQuadrantStack.prototype.scrollToPosition = function (scrollLeft, scrollTop) {\n        var scrollContainer = this.quadrantRefs[tableQuadrant_1.QuadrantType.MAIN].scrollContainer;\n        this.wasMainQuadrantScrollChangedFromOtherOnWheelCallback = false;\n        // this will trigger the main quadrant's scroll callback below\n        scrollContainer.scrollLeft = scrollLeft;\n        scrollContainer.scrollTop = scrollTop;\n    };\n    TableQuadrantStack.prototype.componentDidMount = function () {\n        this.emitRefs();\n        this.syncQuadrantSizes();\n        this.syncQuadrantMenuElementWidths();\n        core_1.Utils.safeInvoke(this.props.columnHeaderRef, this.findColumnHeader(tableQuadrant_1.QuadrantType.MAIN));\n        core_1.Utils.safeInvoke(this.props.rowHeaderRef, this.findRowHeader(tableQuadrant_1.QuadrantType.MAIN));\n    };\n    TableQuadrantStack.prototype.componentDidUpdate = function () {\n        this.emitRefs();\n        this.syncQuadrantSizes();\n        this.syncQuadrantMenuElementWidths();\n        core_1.Utils.safeInvoke(this.props.columnHeaderRef, this.findColumnHeader(tableQuadrant_1.QuadrantType.MAIN));\n        core_1.Utils.safeInvoke(this.props.rowHeaderRef, this.findRowHeader(tableQuadrant_1.QuadrantType.MAIN));\n    };\n    TableQuadrantStack.prototype.render = function () {\n        var _a = this.props, grid = _a.grid, isRowHeaderShown = _a.isRowHeaderShown, renderBody = _a.renderBody;\n        return (React.createElement(\"div\", { className: Classes.TABLE_QUADRANT_STACK },\n            React.createElement(tableQuadrant_1.TableQuadrant, { bodyRef: this.props.bodyRef, grid: grid, isRowHeaderShown: isRowHeaderShown, onScroll: this.throttledHandleMainQuadrantScroll, onWheel: this.throttledHandleWheel, quadrantRef: this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.MAIN].quadrant, quadrantType: tableQuadrant_1.QuadrantType.MAIN, renderBody: renderBody, renderColumnHeader: this.renderMainQuadrantColumnHeader, renderMenu: this.renderMainQuadrantMenu, renderRowHeader: this.renderMainQuadrantRowHeader, scrollContainerRef: this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.MAIN].scrollContainer }),\n            React.createElement(tableQuadrant_1.TableQuadrant, { grid: grid, isRowHeaderShown: isRowHeaderShown, onWheel: this.throttledHandleWheel, quadrantRef: this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.TOP].quadrant, quadrantType: tableQuadrant_1.QuadrantType.TOP, renderBody: renderBody, renderColumnHeader: this.renderTopQuadrantColumnHeader, renderMenu: this.renderTopQuadrantMenu, renderRowHeader: this.renderTopQuadrantRowHeader, scrollContainerRef: this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.TOP].scrollContainer }),\n            React.createElement(tableQuadrant_1.TableQuadrant, { grid: grid, isRowHeaderShown: isRowHeaderShown, onWheel: this.throttledHandleWheel, quadrantRef: this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.LEFT].quadrant, quadrantType: tableQuadrant_1.QuadrantType.LEFT, renderBody: renderBody, renderColumnHeader: this.renderLeftQuadrantColumnHeader, renderMenu: this.renderLeftQuadrantMenu, renderRowHeader: this.renderLeftQuadrantRowHeader, scrollContainerRef: this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.LEFT].scrollContainer }),\n            React.createElement(tableQuadrant_1.TableQuadrant, { grid: grid, isRowHeaderShown: isRowHeaderShown, onWheel: this.throttledHandleWheel, quadrantRef: this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.TOP_LEFT].quadrant, quadrantType: tableQuadrant_1.QuadrantType.TOP_LEFT, renderBody: renderBody, renderColumnHeader: this.renderTopLeftQuadrantColumnHeader, renderMenu: this.renderTopLeftQuadrantMenu, renderRowHeader: this.renderTopLeftQuadrantRowHeader, scrollContainerRef: this.quadrantRefHandlers[tableQuadrant_1.QuadrantType.TOP_LEFT].scrollContainer })));\n    };\n    // Ref handlers\n    // ============\n    TableQuadrantStack.prototype.generateQuadrantRefHandlers = function (quadrantType) {\n        var _this = this;\n        var reducer = function (agg, key) {\n            agg[key] = function (ref) { return _this.quadrantRefs[quadrantType][key] = ref; };\n            return agg;\n        };\n        return [\"columnHeader\", \"menu\", \"quadrant\", \"rowHeader\", \"scrollContainer\"].reduce(reducer, {});\n    };\n    // Emitters\n    // ========\n    TableQuadrantStack.prototype.emitRefs = function () {\n        core_1.Utils.safeInvoke(this.props.columnHeaderRef, this.quadrantRefs[tableQuadrant_1.QuadrantType.MAIN].columnHeader);\n        core_1.Utils.safeInvoke(this.props.quadrantRef, this.quadrantRefs[tableQuadrant_1.QuadrantType.MAIN].quadrant);\n        core_1.Utils.safeInvoke(this.props.rowHeaderRef, this.quadrantRefs[tableQuadrant_1.QuadrantType.MAIN].rowHeader);\n        core_1.Utils.safeInvoke(this.props.scrollContainerRef, this.quadrantRefs[tableQuadrant_1.QuadrantType.MAIN].scrollContainer);\n    };\n    // Size syncing\n    // ============\n    TableQuadrantStack.prototype.syncQuadrantMenuElementWidths = function () {\n        this.syncQuadrantMenuElementWidth(tableQuadrant_1.QuadrantType.MAIN);\n        this.syncQuadrantMenuElementWidth(tableQuadrant_1.QuadrantType.TOP);\n        this.syncQuadrantMenuElementWidth(tableQuadrant_1.QuadrantType.LEFT);\n        this.syncQuadrantMenuElementWidth(tableQuadrant_1.QuadrantType.TOP_LEFT);\n    };\n    TableQuadrantStack.prototype.syncQuadrantMenuElementWidth = function (quadrantType) {\n        var mainQuadrantMenu = this.quadrantRefs[tableQuadrant_1.QuadrantType.MAIN].menu;\n        var mainQuadrantRowHeader = this.quadrantRefs[tableQuadrant_1.QuadrantType.MAIN].rowHeader;\n        var quadrantMenu = this.quadrantRefs[quadrantType].menu;\n        // the main quadrant menu informs the size of every other quadrant menu\n        if (mainQuadrantMenu != null && mainQuadrantRowHeader != null && quadrantMenu != null) {\n            var width = mainQuadrantRowHeader.getBoundingClientRect().width;\n            quadrantMenu.style.width = width + \"px\";\n            // no need to use the main quadrant's menu to set its *own* height\n            if (quadrantType !== tableQuadrant_1.QuadrantType.MAIN) {\n                var height = mainQuadrantMenu.getBoundingClientRect().height;\n                quadrantMenu.style.height = height + \"px\";\n            }\n        }\n    };\n    TableQuadrantStack.prototype.syncQuadrantSizes = function () {\n        var mainQuadrantScrollElement = this.quadrantRefs[tableQuadrant_1.QuadrantType.MAIN].scrollContainer;\n        var topQuadrantElement = this.quadrantRefs[tableQuadrant_1.QuadrantType.TOP].quadrant;\n        var topQuadrantRowHeaderElement = this.quadrantRefs[tableQuadrant_1.QuadrantType.TOP].rowHeader;\n        var leftQuadrantElement = this.quadrantRefs[tableQuadrant_1.QuadrantType.LEFT].quadrant;\n        var topLeftQuadrantElement = this.quadrantRefs[tableQuadrant_1.QuadrantType.TOP_LEFT].quadrant;\n        var topLeftQuadrantRowHeaderElement = this.quadrantRefs[tableQuadrant_1.QuadrantType.TOP_LEFT].rowHeader;\n        var _a = this.props, grid = _a.grid, numFrozenColumns = _a.numFrozenColumns, numFrozenRows = _a.numFrozenRows;\n        // if there are no frozen rows or columns, we still want the quadrant to be 1px bigger to\n        // reveal the header border.\n        var BORDER_WIDTH_CORRECTION = 1;\n        var leftQuadrantGridContentWidth = numFrozenColumns > 0\n            ? grid.getCumulativeWidthAt(numFrozenColumns - 1)\n            : BORDER_WIDTH_CORRECTION;\n        var topQuadrantGridContentHeight = numFrozenRows > 0\n            ? grid.getCumulativeHeightAt(numFrozenRows - 1)\n            : BORDER_WIDTH_CORRECTION;\n        // all menus are the same size, so arbitrarily use the one from the main quadrant.\n        // assumes that the menu element width has already been sync'd after the last render\n        var _b = this.quadrantRefs[tableQuadrant_1.QuadrantType.MAIN], rowHeader = _b.rowHeader, columnHeader = _b.columnHeader;\n        var rowHeaderWidth = rowHeader == null ? 0 : rowHeader.getBoundingClientRect().width;\n        var columnHeaderHeight = columnHeader == null ? 0 : columnHeader.getBoundingClientRect().height;\n        // no need to sync the main quadrant, because it fills the entire viewport\n        topQuadrantElement.style.height = topQuadrantGridContentHeight + columnHeaderHeight + \"px\";\n        leftQuadrantElement.style.width = leftQuadrantGridContentWidth + rowHeaderWidth + \"px\";\n        topLeftQuadrantElement.style.width = leftQuadrantGridContentWidth + rowHeaderWidth + \"px\";\n        topLeftQuadrantElement.style.height = topQuadrantGridContentHeight + columnHeaderHeight + \"px\";\n        // resize the top and left quadrants to keep the main quadrant's scrollbar visible\n        var scrollbarWidth = mainQuadrantScrollElement.offsetWidth - mainQuadrantScrollElement.clientWidth;\n        var scrollbarHeight = mainQuadrantScrollElement.offsetHeight - mainQuadrantScrollElement.clientHeight;\n        topQuadrantElement.style.right = scrollbarWidth + \"px\";\n        leftQuadrantElement.style.bottom = scrollbarHeight + \"px\";\n        // resize top and top-left quadrant row headers if main quadrant scrolls\n        this.maybeSyncRowHeaderSize(topQuadrantRowHeaderElement, rowHeaderWidth);\n        this.maybeSyncRowHeaderSize(topLeftQuadrantRowHeaderElement, rowHeaderWidth);\n    };\n    TableQuadrantStack.prototype.maybeSyncRowHeaderSize = function (rowHeaderElement, width) {\n        if (rowHeaderElement == null) {\n            return;\n        }\n        var selector = \".\" + Classes.TABLE_ROW_HEADERS_CELLS_CONTAINER;\n        // this child element dictates the width of all row-header cells\n        var elementToResize = rowHeaderElement.querySelector(selector);\n        elementToResize.style.width = width + \"px\";\n    };\n    // Helpers\n    // =======\n    TableQuadrantStack.prototype.findColumnHeader = function (quadrantType) {\n        var quadrantElement = this.quadrantRefs[quadrantType].quadrant;\n        return quadrantElement.querySelector(\".\" + Classes.TABLE_COLUMN_HEADERS);\n    };\n    TableQuadrantStack.prototype.findRowHeader = function (quadrantType) {\n        var quadrantElement = this.quadrantRefs[quadrantType].quadrant;\n        return quadrantElement.querySelector(\".\" + Classes.TABLE_ROW_HEADERS);\n    };\n    // Resizing\n    TableQuadrantStack.prototype.adjustVerticalGuides = function (verticalGuides, quadrantType) {\n        var scrollAmount = this.quadrantRefs[quadrantType].scrollContainer.scrollLeft;\n        var rowHeaderWidth = this.getRowHeaderWidth(quadrantType);\n        var adjustedVerticalGuides = verticalGuides != null\n            ? verticalGuides.map(function (verticalGuide) { return verticalGuide - scrollAmount + rowHeaderWidth; })\n            : verticalGuides;\n        return adjustedVerticalGuides;\n    };\n    TableQuadrantStack.prototype.adjustHorizontalGuides = function (horizontalGuides, quadrantType) {\n        var scrollAmount = this.quadrantRefs[quadrantType].scrollContainer.scrollTop;\n        var columnHeaderHeight = this.quadrantRefs[quadrantType].columnHeader.clientHeight;\n        var adjustedHorizontalGuides = horizontalGuides != null\n            ? horizontalGuides.map(function (horizontalGuide) { return horizontalGuide - scrollAmount + columnHeaderHeight; })\n            : horizontalGuides;\n        return adjustedHorizontalGuides;\n    };\n    TableQuadrantStack.prototype.getRowHeaderWidth = function (quadrantType) {\n        // unlike the column header, the row header can be toggled, so we need to handle the case\n        // when it's not showing\n        var rowHeader = this.quadrantRefs[quadrantType].rowHeader;\n        return rowHeader == null ? 0 : rowHeader.clientWidth;\n    };\n    return TableQuadrantStack;\n}(core_1.AbstractComponent));\n// we want the user to explicitly pass a quadrantType. define defaultProps as a Partial to avoid\n// declaring that and other required props here.\nTableQuadrantStack.defaultProps = {\n    isHorizontalScrollDisabled: false,\n    isRowHeaderShown: true,\n    isVerticalScrollDisabled: false,\n};\nexports.TableQuadrantStack = TableQuadrantStack;\n\n//# sourceMappingURL=tableQuadrantStack.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/quadrants/tableQuadrantStack.js\n// module id = 53\n// module chunks = 0","/**\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar cell_1 = require(\"./cell/cell\");\nvar batcher_1 = require(\"./common/batcher\");\nvar Classes = require(\"./common/classes\");\nvar contextMenuTargetWrapper_1 = require(\"./common/contextMenuTargetWrapper\");\nvar rect_1 = require(\"./common/rect\");\nvar renderMode_1 = require(\"./common/renderMode\");\nvar utils_1 = require(\"./common/utils\");\nvar menus_1 = require(\"./interactions/menus\");\nvar selectable_1 = require(\"./interactions/selectable\");\nvar regions_1 = require(\"./regions\");\n/**\n * For perf, we want to ignore changes to the `ISelectableProps` part of the\n * `ITableBodyProps` since those are only used when a context menu is launched.\n */\nvar UPDATE_PROPS_KEYS = [\n    \"focusedCell\",\n    \"grid\",\n    \"locator\",\n    \"viewportRect\",\n    \"cellRenderer\",\n    \"rowIndexStart\",\n    \"rowIndexEnd\",\n    \"columnIndexStart\",\n    \"columnIndexEnd\",\n    \"selectedRegions\",\n];\n/**\n * We don't want to reset the batcher when this set of keys changes. Any other\n * changes should reset the batcher's internal cache.\n */\nvar RESET_CELL_KEYS_BLACKLIST = [\n    \"columnIndexEnd\",\n    \"columnIndexStart\",\n    \"rowIndexEnd\",\n    \"rowIndexStart\",\n    \"viewportRect\",\n];\nvar TableBody = (function (_super) {\n    tslib_1.__extends(TableBody, _super);\n    function TableBody() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.batcher = new batcher_1.Batcher();\n        _this.isRenderingBatchedCells = false;\n        _this.renderContextMenu = function (e) {\n            var _a = _this.props, grid = _a.grid, onFocus = _a.onFocus, onSelection = _a.onSelection, renderBodyContextMenu = _a.renderBodyContextMenu, selectedRegions = _a.selectedRegions;\n            var numRows = grid.numRows, numCols = grid.numCols;\n            if (renderBodyContextMenu == null) {\n                return undefined;\n            }\n            var targetRegion = _this.locateClick(e.nativeEvent);\n            var nextSelectedRegions = selectedRegions;\n            // if the event did not happen within a selected region, clear all\n            // selections and select the right-clicked cell.\n            var foundIndex = regions_1.Regions.findContainingRegion(selectedRegions, targetRegion);\n            if (foundIndex < 0) {\n                nextSelectedRegions = [targetRegion];\n                onSelection(nextSelectedRegions);\n                // move the focused cell to the new region.\n                var nextFocusedCell = tslib_1.__assign({}, regions_1.Regions.getFocusCellCoordinatesFromRegion(targetRegion), { focusSelectionIndex: 0 });\n                onFocus(nextFocusedCell);\n            }\n            var menuContext = new menus_1.MenuContext(targetRegion, nextSelectedRegions, numRows, numCols);\n            var contextMenu = renderBodyContextMenu(menuContext);\n            return contextMenu == null ? undefined : contextMenu;\n        };\n        // Cell renderers\n        // ==============\n        _this.renderNewCell = function (row, col) {\n            var _a = _this.props, columnIndexEnd = _a.columnIndexEnd, grid = _a.grid, rowIndexEnd = _a.rowIndexEnd;\n            var extremaClasses = grid.getExtremaClasses(row, col, rowIndexEnd, columnIndexEnd);\n            var isGhost = grid.isGhostIndex(row, col);\n            return _this.renderCell(row, col, extremaClasses, isGhost);\n        };\n        _this.renderCell = function (rowIndex, columnIndex, extremaClasses, isGhost) {\n            var _a = _this.props, cellRenderer = _a.cellRenderer, loading = _a.loading, grid = _a.grid;\n            var baseCell = isGhost ? cell_1.emptyCellRenderer() : cellRenderer(rowIndex, columnIndex);\n            var className = classNames(TableBody.cellClassNames(rowIndex, columnIndex), extremaClasses, (_b = {},\n                _b[Classes.TABLE_CELL_GHOST] = isGhost,\n                _b[Classes.TABLE_CELL_LEDGER_ODD] = (rowIndex % 2) === 1,\n                _b[Classes.TABLE_CELL_LEDGER_EVEN] = (rowIndex % 2) === 0,\n                _b), baseCell.props.className);\n            var key = TableBody.cellReactKey(rowIndex, columnIndex);\n            var rect = isGhost ? grid.getGhostCellRect(rowIndex, columnIndex) : grid.getCellRect(rowIndex, columnIndex);\n            var cellLoading = baseCell.props.loading != null ? baseCell.props.loading : loading;\n            var style = tslib_1.__assign({}, baseCell.props.style, rect_1.Rect.style(rect));\n            return React.cloneElement(baseCell, { className: className, key: key, loading: cellLoading, style: style });\n            var _b;\n        };\n        // Callbacks\n        // =========\n        _this.handleSelectionEnd = function () {\n            _this.activationCell = null; // not strictly required, but good practice\n        };\n        _this.locateClick = function (event) {\n            _this.activationCell = _this.props.locator.convertPointToCell(event.clientX, event.clientY);\n            return regions_1.Regions.cell(_this.activationCell.row, _this.activationCell.col);\n        };\n        _this.locateDrag = function (_event, coords, returnEndOnly) {\n            if (returnEndOnly === void 0) { returnEndOnly = false; }\n            var start = _this.activationCell;\n            var end = _this.props.locator.convertPointToCell(coords.current[0], coords.current[1]);\n            return returnEndOnly\n                ? regions_1.Regions.cell(end.row, end.col)\n                : regions_1.Regions.cell(start.row, start.col, end.row, end.col);\n        };\n        return _this;\n    }\n    /**\n     * Returns the array of class names that must be applied to each table\n     * cell so that we can locate any cell based on its coordinate.\n     */\n    TableBody.cellClassNames = function (rowIndex, columnIndex) {\n        return [\n            Classes.rowCellIndexClass(rowIndex),\n            Classes.columnCellIndexClass(columnIndex),\n        ];\n    };\n    TableBody.cellReactKey = function (rowIndex, columnIndex) {\n        return \"cell-\" + rowIndex + \"-\" + columnIndex;\n    };\n    TableBody.prototype.componentDidMount = function () {\n        this.maybeInvokeOnCompleteRender();\n    };\n    TableBody.prototype.shouldComponentUpdate = function (nextProps) {\n        var propKeysWhitelist = { include: UPDATE_PROPS_KEYS };\n        return !utils_1.Utils.shallowCompareKeys(this.props, nextProps, propKeysWhitelist);\n    };\n    TableBody.prototype.componentWillUpdate = function (nextProps) {\n        var resetKeysBlacklist = { exclude: RESET_CELL_KEYS_BLACKLIST };\n        var shouldResetBatcher = !utils_1.Utils.shallowCompareKeys(this.props, nextProps, resetKeysBlacklist);\n        if (shouldResetBatcher) {\n            this.batcher.reset();\n        }\n    };\n    TableBody.prototype.componentDidUpdate = function () {\n        this.maybeInvokeOnCompleteRender();\n    };\n    TableBody.prototype.componentWillUnmount = function () {\n        this.batcher.cancelOutstandingCallback();\n    };\n    TableBody.prototype.render = function () {\n        var _a = this.props, allowMultipleSelection = _a.allowMultipleSelection, focusedCell = _a.focusedCell, grid = _a.grid, numFrozenColumns = _a.numFrozenColumns, numFrozenRows = _a.numFrozenRows, onFocus = _a.onFocus, onSelection = _a.onSelection, renderMode = _a.renderMode, selectedRegions = _a.selectedRegions, selectedRegionTransform = _a.selectedRegionTransform;\n        var cells = (renderMode === renderMode_1.RenderMode.BATCH)\n            ? this.renderBatchedCells()\n            : this.renderAllCells();\n        var defaultStyle = grid.getRect().sizeStyle();\n        var style = {\n            height: (numFrozenRows != null) ? grid.getCumulativeHeightAt(numFrozenRows - 1) : defaultStyle.height,\n            width: (numFrozenColumns != null) ? grid.getCumulativeWidthAt(numFrozenColumns - 1) : defaultStyle.width,\n        };\n        return (React.createElement(selectable_1.DragSelectable, { allowMultipleSelection: allowMultipleSelection, focusedCell: focusedCell, locateClick: this.locateClick, locateDrag: this.locateDrag, onFocus: onFocus, onSelection: onSelection, onSelectionEnd: this.handleSelectionEnd, selectedRegions: selectedRegions, selectedRegionTransform: selectedRegionTransform },\n            React.createElement(contextMenuTargetWrapper_1.ContextMenuTargetWrapper, { className: classNames(Classes.TABLE_BODY_VIRTUAL_CLIENT, Classes.TABLE_CELL_CLIENT), renderContextMenu: this.renderContextMenu, style: style }, cells)));\n    };\n    // Render modes\n    // ============\n    TableBody.prototype.renderBatchedCells = function () {\n        var _this = this;\n        var _a = this.props, columnIndexEnd = _a.columnIndexEnd, columnIndexStart = _a.columnIndexStart, rowIndexEnd = _a.rowIndexEnd, rowIndexStart = _a.rowIndexStart;\n        // render cells in batches\n        this.batcher.startNewBatch();\n        for (var rowIndex = rowIndexStart; rowIndex <= rowIndexEnd; rowIndex++) {\n            for (var columnIndex = columnIndexStart; columnIndex <= columnIndexEnd; columnIndex++) {\n                this.batcher.addArgsToBatch(rowIndex, columnIndex);\n            }\n        }\n        this.batcher.removeOldAddNew(this.renderNewCell);\n        if (!this.batcher.isDone()) {\n            this.batcher.idleCallback(function () { return _this.forceUpdate(); });\n        }\n        var cells = this.batcher.getList();\n        return cells;\n    };\n    TableBody.prototype.renderAllCells = function () {\n        var _a = this.props, columnIndexEnd = _a.columnIndexEnd, columnIndexStart = _a.columnIndexStart, grid = _a.grid, rowIndexEnd = _a.rowIndexEnd, rowIndexStart = _a.rowIndexStart;\n        var cells = [];\n        for (var rowIndex = rowIndexStart; rowIndex <= rowIndexEnd; rowIndex++) {\n            for (var columnIndex = columnIndexStart; columnIndex <= columnIndexEnd; columnIndex++) {\n                var extremaClasses = grid.getExtremaClasses(rowIndex, columnIndex, rowIndexEnd, columnIndexEnd);\n                var isGhost = grid.isGhostIndex(rowIndex, columnIndex);\n                cells.push(this.renderCell(rowIndex, columnIndex, extremaClasses, isGhost));\n            }\n        }\n        return cells;\n    };\n    TableBody.prototype.maybeInvokeOnCompleteRender = function () {\n        var _a = this.props, onCompleteRender = _a.onCompleteRender, renderMode = _a.renderMode;\n        if (renderMode === renderMode_1.RenderMode.BATCH\n            && this.isRenderingBatchedCells\n            && this.batcher.isDone()) {\n            this.isRenderingBatchedCells = false;\n            core_1.Utils.safeInvoke(onCompleteRender);\n        }\n        else if (renderMode === renderMode_1.RenderMode.NONE) {\n            core_1.Utils.safeInvoke(onCompleteRender);\n        }\n    };\n    return TableBody;\n}(React.Component));\nTableBody.defaultProps = {\n    loading: false,\n    renderMode: renderMode_1.RenderMode.BATCH,\n};\nexports.TableBody = TableBody;\n\n//# sourceMappingURL=tableBody.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/tableBody.js\n// module id = 54\n// module chunks = 0","/**\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@blueprintjs/core\");\nvar PureRender = require(\"pure-render-decorator\");\nvar React = require(\"react\");\n/**\n * Since the ContextMenuTarget uses the `onContextMenu` prop instead\n * `element.addEventListener`, the prop can be lost. This wrapper helps us\n * maintain context menu fuctionality when doing fancy React.cloneElement\n * chains.\n */\nvar ContextMenuTargetWrapper = (function (_super) {\n    tslib_1.__extends(ContextMenuTargetWrapper, _super);\n    function ContextMenuTargetWrapper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ContextMenuTargetWrapper.prototype.render = function () {\n        var _a = this.props, className = _a.className, children = _a.children, style = _a.style;\n        return React.createElement(\"div\", { className: className, style: style }, children);\n    };\n    ContextMenuTargetWrapper.prototype.renderContextMenu = function (e) {\n        return this.props.renderContextMenu(e);\n    };\n    return ContextMenuTargetWrapper;\n}(React.Component));\nContextMenuTargetWrapper = tslib_1.__decorate([\n    core_1.ContextMenuTarget,\n    PureRender\n], ContextMenuTargetWrapper);\nexports.ContextMenuTargetWrapper = ContextMenuTargetWrapper;\n\n//# sourceMappingURL=contextMenuTargetWrapper.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/table/dist/common/contextMenuTargetWrapper.js\n// module id = 55\n// module chunks = 0"],"sourceRoot":""}