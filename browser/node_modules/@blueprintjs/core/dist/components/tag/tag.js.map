{"version":3,"sources":["../src/components/tag/tag.tsx"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;AAEH,uCAAyC;AACzC,kDAAoD;AACpD,6BAA+B;AAE/B,uCAAqC;AACrC,4CAA8E;AAE9E,8CAAgD;AAkBhD,IAAa,GAAG;IAAS,+BAA8B;IADvD;QAAA,qEAyBC;QAHW,mBAAa,GAAG,UAAC,CAAsC;YAC3D,cAAK,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;QACzD,CAAC,CAAA;;IACL,CAAC;IArBU,oBAAM,GAAb;QACU,IAAA,eAAoD,EAAlD,kBAAM,EAAE,wBAAS,EAAE,kBAAM,EAAE,sBAAQ,CAAgB;QAC3D,IAAM,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC;YAClE,GAAC,OAAO,CAAC,aAAa,IAAG,QAAQ,IAAI,IAAI;YACzC,GAAC,OAAO,CAAC,MAAM,IAAG,MAAM;iBACzB,SAAS,CAAC,CAAC;QACd,IAAM,MAAM,GAAG,cAAK,CAAC,UAAU,CAAC,QAAQ,CAAC;cACnC,gCAAQ,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAE,OAAO,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,GAAI;cACpF,SAAS,CAAC;QAEhB,MAAM,CAAC,CACH,iDAAU,0BAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAE,SAAS,EAAE,UAAU;YAC1D,IAAI,CAAC,KAAK,CAAC,QAAQ;YACnB,MAAM,CACJ,CACV,CAAC;;IACN,CAAC;IAKL,UAAC;AAAD,CAxBA,AAwBC,CAxBwB,KAAK,CAAC,SAAS,GAwBvC;AAvBiB,eAAW,GAAG,eAAe,CAAC;AADnC,GAAG;IADf,UAAU;GACE,GAAG,CAwBf;AAxBY,kBAAG;AA0BH,QAAA,UAAU,GAAG,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC","file":"tag.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as PureRender from \"pure-render-decorator\";\nimport * as React from \"react\";\n\nimport { Utils } from \"../../common\";\nimport { IIntentProps, IProps, removeNonHTMLProps } from \"../../common/props\";\n\nimport * as Classes from \"../../common/classes\";\n\nexport interface ITagProps extends IProps, IIntentProps, React.HTMLAttributes<HTMLSpanElement> {\n    /**\n     * If set to `true`, the tag will display in an active state.\n     * This is equivalent to setting `className=\"pt-active\"`.\n     * @default false\n     */\n    active?: boolean;\n\n    /**\n     * Click handler for remove button.\n     * Button will only be rendered if this prop is defined.\n     */\n    onRemove?: (e: React.MouseEvent<HTMLButtonElement>, tagProps: ITagProps) => void;\n}\n\n@PureRender\nexport class Tag extends React.Component<ITagProps, {}> {\n    public static displayName = \"Blueprint.Tag\";\n\n    public render() {\n        const { active, className, intent, onRemove } = this.props;\n        const tagClasses = classNames(Classes.TAG, Classes.intentClass(intent), {\n            [Classes.TAG_REMOVABLE]: onRemove != null,\n            [Classes.ACTIVE]: active,\n        }, className);\n        const button = Utils.isFunction(onRemove)\n            ? <button type=\"button\" className={Classes.TAG_REMOVE} onClick={this.onRemoveClick} />\n            : undefined;\n\n        return (\n            <span {...removeNonHTMLProps(this.props)} className={tagClasses}>\n                {this.props.children}\n                {button}\n            </span>\n        );\n    }\n\n    private onRemoveClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n        Utils.safeInvoke(this.props.onRemove, e, this.props);\n    }\n}\n\nexport const TagFactory = React.createFactory(Tag);\n"]}